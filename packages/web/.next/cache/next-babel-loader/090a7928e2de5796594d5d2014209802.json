{"ast":null,"code":"/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @providesModule SwipeableRow\n * \n */\n'use strict';\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _Animated = _interopRequireDefault(require(\"../../../exports/Animated\"));\n\nvar _I18nManager = _interopRequireDefault(require(\"../../../exports/I18nManager\"));\n\nvar _PanResponder = _interopRequireDefault(require(\"../../../exports/PanResponder\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _StyleSheet = _interopRequireDefault(require(\"../../../exports/StyleSheet\"));\n\nvar _reactTimerMixin = _interopRequireDefault(require(\"react-timer-mixin\"));\n\nvar _View = _interopRequireDefault(require(\"../../../exports/View\"));\n\nvar _createReactClass = _interopRequireDefault(require(\"create-react-class\"));\n\nvar _emptyFunction = _interopRequireDefault(require(\"fbjs/lib/emptyFunction\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/* $FlowFixMe(>=0.54.0 site=react_native_oss) This comment suppresses an error\n * found when Flow v0.54 was deployed. To see the error delete this comment and\n * run Flow. */\n\n\nvar isRTL = function isRTL() {\n  return _I18nManager.default.isRTL;\n}; // NOTE: Eventually convert these consts to an input object of configurations\n// Position of the left of the swipable item when closed\n\n\nvar CLOSED_LEFT_POSITION = 0; // Minimum swipe distance before we recognize it as such\n\nvar HORIZONTAL_SWIPE_DISTANCE_THRESHOLD = 10; // Minimum swipe speed before we fully animate the user's action (open/close)\n\nvar HORIZONTAL_FULL_SWIPE_SPEED_THRESHOLD = 0.3; // Factor to divide by to get slow speed; i.e. 4 means 1/4 of full speed\n\nvar SLOW_SPEED_SWIPE_FACTOR = 4; // Time, in milliseconds, of how long the animated swipe should be\n\nvar SWIPE_DURATION = 300;\n/**\n * On SwipeableListView mount, the 1st item will bounce to show users it's\n * possible to swipe\n */\n\nvar ON_MOUNT_BOUNCE_DELAY = 700;\nvar ON_MOUNT_BOUNCE_DURATION = 400; // Distance left of closed position to bounce back when right-swiping from closed\n\nvar RIGHT_SWIPE_BOUNCE_BACK_DISTANCE = 30;\nvar RIGHT_SWIPE_BOUNCE_BACK_DURATION = 300;\n/**\n * Max distance of right swipe to allow (right swipes do functionally nothing).\n * Must be multiplied by SLOW_SPEED_SWIPE_FACTOR because gestureState.dx tracks\n * how far the finger swipes, and not the actual animation distance.\n*/\n\nvar RIGHT_SWIPE_THRESHOLD = 30 * SLOW_SPEED_SWIPE_FACTOR;\n/**\n * Creates a swipable row that allows taps on the main item and a custom View\n * on the item hidden behind the row. Typically this should be used in\n * conjunction with SwipeableListView for additional functionality, but can be\n * used in a normal ListView. See the renderRow for SwipeableListView to see how\n * to use this component separately.\n */\n\nvar SwipeableRow = (0, _createReactClass.default)({\n  displayName: 'SwipeableRow',\n  _panResponder: {},\n  _previousLeft: CLOSED_LEFT_POSITION,\n  mixins: [_reactTimerMixin.default],\n  propTypes: {\n    children: _propTypes.default.any,\n    isOpen: _propTypes.default.bool,\n    preventSwipeRight: _propTypes.default.bool,\n    maxSwipeDistance: _propTypes.default.number.isRequired,\n    onOpen: _propTypes.default.func.isRequired,\n    onClose: _propTypes.default.func.isRequired,\n    onSwipeEnd: _propTypes.default.func.isRequired,\n    onSwipeStart: _propTypes.default.func.isRequired,\n    // Should bounce the row on mount\n    shouldBounceOnMount: _propTypes.default.bool,\n\n    /**\n     * A ReactElement that is unveiled when the user swipes\n     */\n    slideoutView: _propTypes.default.node.isRequired,\n\n    /**\n     * The minimum swipe distance required before fully animating the swipe. If\n     * the user swipes less than this distance, the item will return to its\n     * previous (open/close) position.\n     */\n    swipeThreshold: _propTypes.default.number.isRequired\n  },\n  getInitialState: function getInitialState() {\n    return {\n      currentLeft: new _Animated.default.Value(this._previousLeft),\n\n      /**\n       * In order to render component A beneath component B, A must be rendered\n       * before B. However, this will cause \"flickering\", aka we see A briefly\n       * then B. To counter this, _isSwipeableViewRendered flag is used to set\n       * component A to be transparent until component B is loaded.\n       */\n      isSwipeableViewRendered: false,\n      rowHeight: null\n    };\n  },\n  getDefaultProps: function getDefaultProps() {\n    return {\n      isOpen: false,\n      preventSwipeRight: false,\n      maxSwipeDistance: 0,\n      onOpen: _emptyFunction.default,\n      onClose: _emptyFunction.default,\n      onSwipeEnd: _emptyFunction.default,\n      onSwipeStart: _emptyFunction.default,\n      swipeThreshold: 30\n    };\n  },\n  UNSAFE_componentWillMount: function UNSAFE_componentWillMount() {\n    this._panResponder = _PanResponder.default.create({\n      onMoveShouldSetPanResponderCapture: this._handleMoveShouldSetPanResponderCapture,\n      onPanResponderGrant: this._handlePanResponderGrant,\n      onPanResponderMove: this._handlePanResponderMove,\n      onPanResponderRelease: this._handlePanResponderEnd,\n      onPanResponderTerminationRequest: this._onPanResponderTerminationRequest,\n      onPanResponderTerminate: this._handlePanResponderEnd,\n      onShouldBlockNativeResponder: function onShouldBlockNativeResponder(event, gestureState) {\n        return false;\n      }\n    });\n  },\n  componentDidMount: function componentDidMount() {\n    var _this = this;\n\n    if (this.props.shouldBounceOnMount) {\n      /**\n       * Do the on mount bounce after a delay because if we animate when other\n       * components are loading, the animation will be laggy\n       */\n      this.setTimeout(function () {\n        _this._animateBounceBack(ON_MOUNT_BOUNCE_DURATION);\n      }, ON_MOUNT_BOUNCE_DELAY);\n    }\n  },\n  UNSAFE_componentWillReceiveProps: function UNSAFE_componentWillReceiveProps(nextProps) {\n    /**\n     * We do not need an \"animateOpen(noCallback)\" because this animation is\n     * handled internally by this component.\n     */\n    if (this.props.isOpen && !nextProps.isOpen) {\n      this._animateToClosedPosition();\n    }\n  },\n  render: function render() {\n    // The view hidden behind the main view\n    var slideOutView;\n\n    if (this.state.isSwipeableViewRendered && this.state.rowHeight) {\n      slideOutView = _react.default.createElement(_View.default, {\n        style: [styles.slideOutContainer, {\n          height: this.state.rowHeight\n        }]\n      }, this.props.slideoutView);\n    } // The swipeable item\n\n\n    var swipeableView = _react.default.createElement(_Animated.default.View, {\n      onLayout: this._onSwipeableViewLayout,\n      style: {\n        transform: [{\n          translateX: this.state.currentLeft\n        }]\n      }\n    }, this.props.children);\n\n    return _react.default.createElement(_View.default, this._panResponder.panHandlers, slideOutView, swipeableView);\n  },\n  close: function close() {\n    this.props.onClose();\n\n    this._animateToClosedPosition();\n  },\n  _onSwipeableViewLayout: function _onSwipeableViewLayout(event) {\n    this.setState({\n      isSwipeableViewRendered: true,\n      rowHeight: event.nativeEvent.layout.height\n    });\n  },\n  _handleMoveShouldSetPanResponderCapture: function _handleMoveShouldSetPanResponderCapture(event, gestureState) {\n    // Decides whether a swipe is responded to by this component or its child\n    return gestureState.dy < 10 && this._isValidSwipe(gestureState);\n  },\n  _handlePanResponderGrant: function _handlePanResponderGrant(event, gestureState) {},\n  _handlePanResponderMove: function _handlePanResponderMove(event, gestureState) {\n    if (this._isSwipingExcessivelyRightFromClosedPosition(gestureState)) {\n      return;\n    }\n\n    this.props.onSwipeStart();\n\n    if (this._isSwipingRightFromClosed(gestureState)) {\n      this._swipeSlowSpeed(gestureState);\n    } else {\n      this._swipeFullSpeed(gestureState);\n    }\n  },\n  _isSwipingRightFromClosed: function _isSwipingRightFromClosed(gestureState) {\n    var gestureStateDx = isRTL() ? -gestureState.dx : gestureState.dx;\n    return this._previousLeft === CLOSED_LEFT_POSITION && gestureStateDx > 0;\n  },\n  _swipeFullSpeed: function _swipeFullSpeed(gestureState) {\n    this.state.currentLeft.setValue(this._previousLeft + gestureState.dx);\n  },\n  _swipeSlowSpeed: function _swipeSlowSpeed(gestureState) {\n    this.state.currentLeft.setValue(this._previousLeft + gestureState.dx / SLOW_SPEED_SWIPE_FACTOR);\n  },\n  _isSwipingExcessivelyRightFromClosedPosition: function _isSwipingExcessivelyRightFromClosedPosition(gestureState) {\n    /**\n     * We want to allow a BIT of right swipe, to allow users to know that\n     * swiping is available, but swiping right does not do anything\n     * functionally.\n     */\n    var gestureStateDx = isRTL() ? -gestureState.dx : gestureState.dx;\n    return this._isSwipingRightFromClosed(gestureState) && gestureStateDx > RIGHT_SWIPE_THRESHOLD;\n  },\n  _onPanResponderTerminationRequest: function _onPanResponderTerminationRequest(event, gestureState) {\n    return false;\n  },\n  _animateTo: function _animateTo(toValue, duration, callback) {\n    var _this2 = this;\n\n    if (duration === void 0) {\n      duration = SWIPE_DURATION;\n    }\n\n    if (callback === void 0) {\n      callback = _emptyFunction.default;\n    }\n\n    _Animated.default.timing(this.state.currentLeft, {\n      duration: duration,\n      toValue: toValue,\n      useNativeDriver: true\n    }).start(function () {\n      _this2._previousLeft = toValue;\n      callback();\n    });\n  },\n  _animateToOpenPosition: function _animateToOpenPosition() {\n    var maxSwipeDistance = isRTL() ? -this.props.maxSwipeDistance : this.props.maxSwipeDistance;\n\n    this._animateTo(-maxSwipeDistance);\n  },\n  _animateToOpenPositionWith: function _animateToOpenPositionWith(speed, distMoved) {\n    /**\n     * Ensure the speed is at least the set speed threshold to prevent a slow\n     * swiping animation\n     */\n    speed = speed > HORIZONTAL_FULL_SWIPE_SPEED_THRESHOLD ? speed : HORIZONTAL_FULL_SWIPE_SPEED_THRESHOLD;\n    /**\n     * Calculate the duration the row should take to swipe the remaining distance\n     * at the same speed the user swiped (or the speed threshold)\n     */\n\n    var duration = Math.abs((this.props.maxSwipeDistance - Math.abs(distMoved)) / speed);\n    var maxSwipeDistance = isRTL() ? -this.props.maxSwipeDistance : this.props.maxSwipeDistance;\n\n    this._animateTo(-maxSwipeDistance, duration);\n  },\n  _animateToClosedPosition: function _animateToClosedPosition(duration) {\n    if (duration === void 0) {\n      duration = SWIPE_DURATION;\n    }\n\n    this._animateTo(CLOSED_LEFT_POSITION, duration);\n  },\n  _animateToClosedPositionDuringBounce: function _animateToClosedPositionDuringBounce() {\n    this._animateToClosedPosition(RIGHT_SWIPE_BOUNCE_BACK_DURATION);\n  },\n  _animateBounceBack: function _animateBounceBack(duration) {\n    /**\n     * When swiping right, we want to bounce back past closed position on release\n     * so users know they should swipe right to get content.\n     */\n    var swipeBounceBackDistance = isRTL() ? -RIGHT_SWIPE_BOUNCE_BACK_DISTANCE : RIGHT_SWIPE_BOUNCE_BACK_DISTANCE;\n\n    this._animateTo(-swipeBounceBackDistance, duration, this._animateToClosedPositionDuringBounce);\n  },\n  // Ignore swipes due to user's finger moving slightly when tapping\n  _isValidSwipe: function _isValidSwipe(gestureState) {\n    if (this.props.preventSwipeRight && this._previousLeft === CLOSED_LEFT_POSITION && gestureState.dx > 0) {\n      return false;\n    }\n\n    return Math.abs(gestureState.dx) > HORIZONTAL_SWIPE_DISTANCE_THRESHOLD;\n  },\n  _shouldAnimateRemainder: function _shouldAnimateRemainder(gestureState) {\n    /**\n     * If user has swiped past a certain distance, animate the rest of the way\n     * if they let go\n     */\n    return Math.abs(gestureState.dx) > this.props.swipeThreshold || gestureState.vx > HORIZONTAL_FULL_SWIPE_SPEED_THRESHOLD;\n  },\n  _handlePanResponderEnd: function _handlePanResponderEnd(event, gestureState) {\n    var horizontalDistance = isRTL() ? -gestureState.dx : gestureState.dx;\n\n    if (this._isSwipingRightFromClosed(gestureState)) {\n      this.props.onOpen();\n\n      this._animateBounceBack(RIGHT_SWIPE_BOUNCE_BACK_DURATION);\n    } else if (this._shouldAnimateRemainder(gestureState)) {\n      if (horizontalDistance < 0) {\n        // Swiped left\n        this.props.onOpen();\n\n        this._animateToOpenPositionWith(gestureState.vx, horizontalDistance);\n      } else {\n        // Swiped right\n        this.props.onClose();\n\n        this._animateToClosedPosition();\n      }\n    } else {\n      if (this._previousLeft === CLOSED_LEFT_POSITION) {\n        this._animateToClosedPosition();\n      } else {\n        this._animateToOpenPosition();\n      }\n    }\n\n    this.props.onSwipeEnd();\n  }\n});\n\nvar styles = _StyleSheet.default.create({\n  slideOutContainer: {\n    bottom: 0,\n    left: 0,\n    position: 'absolute',\n    right: 0,\n    top: 0\n  }\n});\n\nvar _default = SwipeableRow;\nexports.default = _default;\nmodule.exports = exports.default;","map":{"version":3,"sources":["/Users/utkarsh/Desktop/headout/ReactNativeOne/node_modules/react-native-web/dist/cjs/vendor/react-native/SwipeableRow/index.js"],"names":["exports","__esModule","default","_Animated","_interopRequireDefault","require","_I18nManager","_PanResponder","_react","_propTypes","_StyleSheet","_reactTimerMixin","_View","_createReactClass","_emptyFunction","obj","isRTL","CLOSED_LEFT_POSITION","HORIZONTAL_SWIPE_DISTANCE_THRESHOLD","HORIZONTAL_FULL_SWIPE_SPEED_THRESHOLD","SLOW_SPEED_SWIPE_FACTOR","SWIPE_DURATION","ON_MOUNT_BOUNCE_DELAY","ON_MOUNT_BOUNCE_DURATION","RIGHT_SWIPE_BOUNCE_BACK_DISTANCE","RIGHT_SWIPE_BOUNCE_BACK_DURATION","RIGHT_SWIPE_THRESHOLD","SwipeableRow","displayName","_panResponder","_previousLeft","mixins","propTypes","children","any","isOpen","bool","preventSwipeRight","maxSwipeDistance","number","isRequired","onOpen","func","onClose","onSwipeEnd","onSwipeStart","shouldBounceOnMount","slideoutView","node","swipeThreshold","getInitialState","currentLeft","Value","isSwipeableViewRendered","rowHeight","getDefaultProps","UNSAFE_componentWillMount","create","onMoveShouldSetPanResponderCapture","_handleMoveShouldSetPanResponderCapture","onPanResponderGrant","_handlePanResponderGrant","onPanResponderMove","_handlePanResponderMove","onPanResponderRelease","_handlePanResponderEnd","onPanResponderTerminationRequest","_onPanResponderTerminationRequest","onPanResponderTerminate","onShouldBlockNativeResponder","event","gestureState","componentDidMount","_this","props","setTimeout","_animateBounceBack","UNSAFE_componentWillReceiveProps","nextProps","_animateToClosedPosition","render","slideOutView","state","createElement","style","styles","slideOutContainer","height","swipeableView","View","onLayout","_onSwipeableViewLayout","transform","translateX","panHandlers","close","setState","nativeEvent","layout","dy","_isValidSwipe","_isSwipingExcessivelyRightFromClosedPosition","_isSwipingRightFromClosed","_swipeSlowSpeed","_swipeFullSpeed","gestureStateDx","dx","setValue","_animateTo","toValue","duration","callback","_this2","timing","useNativeDriver","start","_animateToOpenPosition","_animateToOpenPositionWith","speed","distMoved","Math","abs","_animateToClosedPositionDuringBounce","swipeBounceBackDistance","_shouldAnimateRemainder","vx","horizontalDistance","bottom","left","position","right","top","_default","module"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @providesModule SwipeableRow\n * \n */\n'use strict';\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _Animated = _interopRequireDefault(require(\"../../../exports/Animated\"));\n\nvar _I18nManager = _interopRequireDefault(require(\"../../../exports/I18nManager\"));\n\nvar _PanResponder = _interopRequireDefault(require(\"../../../exports/PanResponder\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _StyleSheet = _interopRequireDefault(require(\"../../../exports/StyleSheet\"));\n\nvar _reactTimerMixin = _interopRequireDefault(require(\"react-timer-mixin\"));\n\nvar _View = _interopRequireDefault(require(\"../../../exports/View\"));\n\nvar _createReactClass = _interopRequireDefault(require(\"create-react-class\"));\n\nvar _emptyFunction = _interopRequireDefault(require(\"fbjs/lib/emptyFunction\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/* $FlowFixMe(>=0.54.0 site=react_native_oss) This comment suppresses an error\n * found when Flow v0.54 was deployed. To see the error delete this comment and\n * run Flow. */\nvar isRTL = function isRTL() {\n  return _I18nManager.default.isRTL;\n}; // NOTE: Eventually convert these consts to an input object of configurations\n// Position of the left of the swipable item when closed\n\n\nvar CLOSED_LEFT_POSITION = 0; // Minimum swipe distance before we recognize it as such\n\nvar HORIZONTAL_SWIPE_DISTANCE_THRESHOLD = 10; // Minimum swipe speed before we fully animate the user's action (open/close)\n\nvar HORIZONTAL_FULL_SWIPE_SPEED_THRESHOLD = 0.3; // Factor to divide by to get slow speed; i.e. 4 means 1/4 of full speed\n\nvar SLOW_SPEED_SWIPE_FACTOR = 4; // Time, in milliseconds, of how long the animated swipe should be\n\nvar SWIPE_DURATION = 300;\n/**\n * On SwipeableListView mount, the 1st item will bounce to show users it's\n * possible to swipe\n */\n\nvar ON_MOUNT_BOUNCE_DELAY = 700;\nvar ON_MOUNT_BOUNCE_DURATION = 400; // Distance left of closed position to bounce back when right-swiping from closed\n\nvar RIGHT_SWIPE_BOUNCE_BACK_DISTANCE = 30;\nvar RIGHT_SWIPE_BOUNCE_BACK_DURATION = 300;\n/**\n * Max distance of right swipe to allow (right swipes do functionally nothing).\n * Must be multiplied by SLOW_SPEED_SWIPE_FACTOR because gestureState.dx tracks\n * how far the finger swipes, and not the actual animation distance.\n*/\n\nvar RIGHT_SWIPE_THRESHOLD = 30 * SLOW_SPEED_SWIPE_FACTOR;\n/**\n * Creates a swipable row that allows taps on the main item and a custom View\n * on the item hidden behind the row. Typically this should be used in\n * conjunction with SwipeableListView for additional functionality, but can be\n * used in a normal ListView. See the renderRow for SwipeableListView to see how\n * to use this component separately.\n */\n\nvar SwipeableRow = (0, _createReactClass.default)({\n  displayName: 'SwipeableRow',\n  _panResponder: {},\n  _previousLeft: CLOSED_LEFT_POSITION,\n  mixins: [_reactTimerMixin.default],\n  propTypes: {\n    children: _propTypes.default.any,\n    isOpen: _propTypes.default.bool,\n    preventSwipeRight: _propTypes.default.bool,\n    maxSwipeDistance: _propTypes.default.number.isRequired,\n    onOpen: _propTypes.default.func.isRequired,\n    onClose: _propTypes.default.func.isRequired,\n    onSwipeEnd: _propTypes.default.func.isRequired,\n    onSwipeStart: _propTypes.default.func.isRequired,\n    // Should bounce the row on mount\n    shouldBounceOnMount: _propTypes.default.bool,\n\n    /**\n     * A ReactElement that is unveiled when the user swipes\n     */\n    slideoutView: _propTypes.default.node.isRequired,\n\n    /**\n     * The minimum swipe distance required before fully animating the swipe. If\n     * the user swipes less than this distance, the item will return to its\n     * previous (open/close) position.\n     */\n    swipeThreshold: _propTypes.default.number.isRequired\n  },\n  getInitialState: function getInitialState() {\n    return {\n      currentLeft: new _Animated.default.Value(this._previousLeft),\n\n      /**\n       * In order to render component A beneath component B, A must be rendered\n       * before B. However, this will cause \"flickering\", aka we see A briefly\n       * then B. To counter this, _isSwipeableViewRendered flag is used to set\n       * component A to be transparent until component B is loaded.\n       */\n      isSwipeableViewRendered: false,\n      rowHeight: null\n    };\n  },\n  getDefaultProps: function getDefaultProps() {\n    return {\n      isOpen: false,\n      preventSwipeRight: false,\n      maxSwipeDistance: 0,\n      onOpen: _emptyFunction.default,\n      onClose: _emptyFunction.default,\n      onSwipeEnd: _emptyFunction.default,\n      onSwipeStart: _emptyFunction.default,\n      swipeThreshold: 30\n    };\n  },\n  UNSAFE_componentWillMount: function UNSAFE_componentWillMount() {\n    this._panResponder = _PanResponder.default.create({\n      onMoveShouldSetPanResponderCapture: this._handleMoveShouldSetPanResponderCapture,\n      onPanResponderGrant: this._handlePanResponderGrant,\n      onPanResponderMove: this._handlePanResponderMove,\n      onPanResponderRelease: this._handlePanResponderEnd,\n      onPanResponderTerminationRequest: this._onPanResponderTerminationRequest,\n      onPanResponderTerminate: this._handlePanResponderEnd,\n      onShouldBlockNativeResponder: function onShouldBlockNativeResponder(event, gestureState) {\n        return false;\n      }\n    });\n  },\n  componentDidMount: function componentDidMount() {\n    var _this = this;\n\n    if (this.props.shouldBounceOnMount) {\n      /**\n       * Do the on mount bounce after a delay because if we animate when other\n       * components are loading, the animation will be laggy\n       */\n      this.setTimeout(function () {\n        _this._animateBounceBack(ON_MOUNT_BOUNCE_DURATION);\n      }, ON_MOUNT_BOUNCE_DELAY);\n    }\n  },\n  UNSAFE_componentWillReceiveProps: function UNSAFE_componentWillReceiveProps(nextProps) {\n    /**\n     * We do not need an \"animateOpen(noCallback)\" because this animation is\n     * handled internally by this component.\n     */\n    if (this.props.isOpen && !nextProps.isOpen) {\n      this._animateToClosedPosition();\n    }\n  },\n  render: function render() {\n    // The view hidden behind the main view\n    var slideOutView;\n\n    if (this.state.isSwipeableViewRendered && this.state.rowHeight) {\n      slideOutView = _react.default.createElement(_View.default, {\n        style: [styles.slideOutContainer, {\n          height: this.state.rowHeight\n        }]\n      }, this.props.slideoutView);\n    } // The swipeable item\n\n\n    var swipeableView = _react.default.createElement(_Animated.default.View, {\n      onLayout: this._onSwipeableViewLayout,\n      style: {\n        transform: [{\n          translateX: this.state.currentLeft\n        }]\n      }\n    }, this.props.children);\n\n    return _react.default.createElement(_View.default, this._panResponder.panHandlers, slideOutView, swipeableView);\n  },\n  close: function close() {\n    this.props.onClose();\n\n    this._animateToClosedPosition();\n  },\n  _onSwipeableViewLayout: function _onSwipeableViewLayout(event) {\n    this.setState({\n      isSwipeableViewRendered: true,\n      rowHeight: event.nativeEvent.layout.height\n    });\n  },\n  _handleMoveShouldSetPanResponderCapture: function _handleMoveShouldSetPanResponderCapture(event, gestureState) {\n    // Decides whether a swipe is responded to by this component or its child\n    return gestureState.dy < 10 && this._isValidSwipe(gestureState);\n  },\n  _handlePanResponderGrant: function _handlePanResponderGrant(event, gestureState) {},\n  _handlePanResponderMove: function _handlePanResponderMove(event, gestureState) {\n    if (this._isSwipingExcessivelyRightFromClosedPosition(gestureState)) {\n      return;\n    }\n\n    this.props.onSwipeStart();\n\n    if (this._isSwipingRightFromClosed(gestureState)) {\n      this._swipeSlowSpeed(gestureState);\n    } else {\n      this._swipeFullSpeed(gestureState);\n    }\n  },\n  _isSwipingRightFromClosed: function _isSwipingRightFromClosed(gestureState) {\n    var gestureStateDx = isRTL() ? -gestureState.dx : gestureState.dx;\n    return this._previousLeft === CLOSED_LEFT_POSITION && gestureStateDx > 0;\n  },\n  _swipeFullSpeed: function _swipeFullSpeed(gestureState) {\n    this.state.currentLeft.setValue(this._previousLeft + gestureState.dx);\n  },\n  _swipeSlowSpeed: function _swipeSlowSpeed(gestureState) {\n    this.state.currentLeft.setValue(this._previousLeft + gestureState.dx / SLOW_SPEED_SWIPE_FACTOR);\n  },\n  _isSwipingExcessivelyRightFromClosedPosition: function _isSwipingExcessivelyRightFromClosedPosition(gestureState) {\n    /**\n     * We want to allow a BIT of right swipe, to allow users to know that\n     * swiping is available, but swiping right does not do anything\n     * functionally.\n     */\n    var gestureStateDx = isRTL() ? -gestureState.dx : gestureState.dx;\n    return this._isSwipingRightFromClosed(gestureState) && gestureStateDx > RIGHT_SWIPE_THRESHOLD;\n  },\n  _onPanResponderTerminationRequest: function _onPanResponderTerminationRequest(event, gestureState) {\n    return false;\n  },\n  _animateTo: function _animateTo(toValue, duration, callback) {\n    var _this2 = this;\n\n    if (duration === void 0) {\n      duration = SWIPE_DURATION;\n    }\n\n    if (callback === void 0) {\n      callback = _emptyFunction.default;\n    }\n\n    _Animated.default.timing(this.state.currentLeft, {\n      duration: duration,\n      toValue: toValue,\n      useNativeDriver: true\n    }).start(function () {\n      _this2._previousLeft = toValue;\n      callback();\n    });\n  },\n  _animateToOpenPosition: function _animateToOpenPosition() {\n    var maxSwipeDistance = isRTL() ? -this.props.maxSwipeDistance : this.props.maxSwipeDistance;\n\n    this._animateTo(-maxSwipeDistance);\n  },\n  _animateToOpenPositionWith: function _animateToOpenPositionWith(speed, distMoved) {\n    /**\n     * Ensure the speed is at least the set speed threshold to prevent a slow\n     * swiping animation\n     */\n    speed = speed > HORIZONTAL_FULL_SWIPE_SPEED_THRESHOLD ? speed : HORIZONTAL_FULL_SWIPE_SPEED_THRESHOLD;\n    /**\n     * Calculate the duration the row should take to swipe the remaining distance\n     * at the same speed the user swiped (or the speed threshold)\n     */\n\n    var duration = Math.abs((this.props.maxSwipeDistance - Math.abs(distMoved)) / speed);\n    var maxSwipeDistance = isRTL() ? -this.props.maxSwipeDistance : this.props.maxSwipeDistance;\n\n    this._animateTo(-maxSwipeDistance, duration);\n  },\n  _animateToClosedPosition: function _animateToClosedPosition(duration) {\n    if (duration === void 0) {\n      duration = SWIPE_DURATION;\n    }\n\n    this._animateTo(CLOSED_LEFT_POSITION, duration);\n  },\n  _animateToClosedPositionDuringBounce: function _animateToClosedPositionDuringBounce() {\n    this._animateToClosedPosition(RIGHT_SWIPE_BOUNCE_BACK_DURATION);\n  },\n  _animateBounceBack: function _animateBounceBack(duration) {\n    /**\n     * When swiping right, we want to bounce back past closed position on release\n     * so users know they should swipe right to get content.\n     */\n    var swipeBounceBackDistance = isRTL() ? -RIGHT_SWIPE_BOUNCE_BACK_DISTANCE : RIGHT_SWIPE_BOUNCE_BACK_DISTANCE;\n\n    this._animateTo(-swipeBounceBackDistance, duration, this._animateToClosedPositionDuringBounce);\n  },\n  // Ignore swipes due to user's finger moving slightly when tapping\n  _isValidSwipe: function _isValidSwipe(gestureState) {\n    if (this.props.preventSwipeRight && this._previousLeft === CLOSED_LEFT_POSITION && gestureState.dx > 0) {\n      return false;\n    }\n\n    return Math.abs(gestureState.dx) > HORIZONTAL_SWIPE_DISTANCE_THRESHOLD;\n  },\n  _shouldAnimateRemainder: function _shouldAnimateRemainder(gestureState) {\n    /**\n     * If user has swiped past a certain distance, animate the rest of the way\n     * if they let go\n     */\n    return Math.abs(gestureState.dx) > this.props.swipeThreshold || gestureState.vx > HORIZONTAL_FULL_SWIPE_SPEED_THRESHOLD;\n  },\n  _handlePanResponderEnd: function _handlePanResponderEnd(event, gestureState) {\n    var horizontalDistance = isRTL() ? -gestureState.dx : gestureState.dx;\n\n    if (this._isSwipingRightFromClosed(gestureState)) {\n      this.props.onOpen();\n\n      this._animateBounceBack(RIGHT_SWIPE_BOUNCE_BACK_DURATION);\n    } else if (this._shouldAnimateRemainder(gestureState)) {\n      if (horizontalDistance < 0) {\n        // Swiped left\n        this.props.onOpen();\n\n        this._animateToOpenPositionWith(gestureState.vx, horizontalDistance);\n      } else {\n        // Swiped right\n        this.props.onClose();\n\n        this._animateToClosedPosition();\n      }\n    } else {\n      if (this._previousLeft === CLOSED_LEFT_POSITION) {\n        this._animateToClosedPosition();\n      } else {\n        this._animateToOpenPosition();\n      }\n    }\n\n    this.props.onSwipeEnd();\n  }\n});\n\nvar styles = _StyleSheet.default.create({\n  slideOutContainer: {\n    bottom: 0,\n    left: 0,\n    position: 'absolute',\n    right: 0,\n    top: 0\n  }\n});\n\nvar _default = SwipeableRow;\nexports.default = _default;\nmodule.exports = exports.default;"]},"metadata":{},"sourceType":"script"}