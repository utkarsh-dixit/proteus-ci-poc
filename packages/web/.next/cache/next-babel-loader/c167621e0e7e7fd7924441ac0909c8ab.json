{"ast":null,"code":"\"use strict\";\n\nvar _Object$assign = require(\"@babel/runtime-corejs2/core-js/object/assign\");\n\nvar _Object$create = require(\"@babel/runtime-corejs2/core-js/object/create\");\n\nvar _Object$defineProperty = require(\"@babel/runtime-corejs2/core-js/object/define-property\");\n\nvar _Object$getOwnPropertyDescriptor = require(\"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\");\n\nvar _Object$getOwnPropertySymbols = require(\"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\");\n\nvar _Object$keys = require(\"@babel/runtime-corejs2/core-js/object/keys\");\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _applyLayout = _interopRequireDefault(require(\"../../modules/applyLayout\"));\n\nvar _applyNativeMethods = _interopRequireDefault(require(\"../../modules/applyNativeMethods\"));\n\nvar _ExecutionEnvironment = require(\"fbjs/lib/ExecutionEnvironment\");\n\nvar _react = require(\"react\");\n\nvar _ColorPropType = _interopRequireDefault(require(\"../ColorPropType\"));\n\nvar _createElement = _interopRequireDefault(require(\"../createElement\"));\n\nvar _css = _interopRequireDefault(require(\"../StyleSheet/css\"));\n\nvar _findNodeHandle = _interopRequireDefault(require(\"../findNodeHandle\"));\n\nvar _StyleSheetPropType = _interopRequireDefault(require(\"../../modules/StyleSheetPropType\"));\n\nvar _TextInputStylePropTypes = _interopRequireDefault(require(\"./TextInputStylePropTypes\"));\n\nvar _TextInputState = _interopRequireDefault(require(\"../../modules/TextInputState\"));\n\nvar _ViewPropTypes = _interopRequireDefault(require(\"../ViewPropTypes\"));\n\nvar _propTypes = require(\"prop-types\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    var ownKeys = _Object$keys(source);\n\n    if (typeof _Object$getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(_Object$getOwnPropertySymbols(source).filter(function (sym) {\n        return _Object$getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    _Object$defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n\n  var sourceKeys = _Object$keys(source);\n\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = _Object$create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nvar isAndroid = _ExecutionEnvironment.canUseDOM && /Android/i.test(navigator && navigator.userAgent);\nvar emptyObject = {};\n/**\n * React Native events differ from W3C events.\n */\n\nvar normalizeEventHandler = function normalizeEventHandler(handler) {\n  return function (e) {\n    if (handler) {\n      e.nativeEvent.text = e.target.value;\n      return handler(e);\n    }\n  };\n};\n/**\n * Determines whether a 'selection' prop differs from a node's existing\n * selection state.\n */\n\n\nvar isSelectionStale = function isSelectionStale(node, selection) {\n  if (node && selection) {\n    var selectionEnd = node.selectionEnd,\n        selectionStart = node.selectionStart;\n    var start = selection.start,\n        end = selection.end;\n    return start !== selectionStart || end !== selectionEnd;\n  }\n\n  return false;\n};\n/**\n * Certain input types do no support 'selectSelectionRange' and will throw an\n * error.\n */\n\n\nvar setSelection = function setSelection(node, selection) {\n  try {\n    if (isSelectionStale(node, selection)) {\n      var start = selection.start,\n          end = selection.end; // workaround for Blink on Android: see https://github.com/text-mask/text-mask/issues/300\n\n      if (isAndroid) {\n        setTimeout(function () {\n          return node.setSelectionRange(start, end || start);\n        }, 10);\n      } else {\n        node.setSelectionRange(start, end || start);\n      }\n    }\n  } catch (e) {}\n};\n\nvar TextInput =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(TextInput, _Component);\n\n  function TextInput() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _Component.call.apply(_Component, [this].concat(args)) || this;\n\n    _this._handleBlur = function (e) {\n      var onBlur = _this.props.onBlur;\n      _TextInputState.default._currentlyFocusedNode = null;\n\n      if (onBlur) {\n        onBlur(e);\n      }\n    };\n\n    _this._handleContentSizeChange = function () {\n      var _this$props = _this.props,\n          onContentSizeChange = _this$props.onContentSizeChange,\n          multiline = _this$props.multiline;\n\n      if (multiline && onContentSizeChange) {\n        var newHeight = _this._node.scrollHeight;\n        var newWidth = _this._node.scrollWidth;\n\n        if (newHeight !== _this._nodeHeight || newWidth !== _this._nodeWidth) {\n          _this._nodeHeight = newHeight;\n          _this._nodeWidth = newWidth;\n          onContentSizeChange({\n            nativeEvent: {\n              contentSize: {\n                height: _this._nodeHeight,\n                width: _this._nodeWidth\n              }\n            }\n          });\n        }\n      }\n    };\n\n    _this._handleChange = function (e) {\n      var _this$props2 = _this.props,\n          onChange = _this$props2.onChange,\n          onChangeText = _this$props2.onChangeText;\n      var text = e.nativeEvent.text;\n\n      _this._handleContentSizeChange();\n\n      if (onChange) {\n        onChange(e);\n      }\n\n      if (onChangeText) {\n        onChangeText(text);\n      }\n\n      _this._handleSelectionChange(e);\n    };\n\n    _this._handleFocus = function (e) {\n      var _this$props3 = _this.props,\n          clearTextOnFocus = _this$props3.clearTextOnFocus,\n          onFocus = _this$props3.onFocus,\n          selectTextOnFocus = _this$props3.selectTextOnFocus;\n      var node = _this._node;\n      _TextInputState.default._currentlyFocusedNode = _this._node;\n\n      if (onFocus) {\n        onFocus(e);\n      }\n\n      if (clearTextOnFocus) {\n        _this.clear();\n      }\n\n      if (selectTextOnFocus) {\n        node && node.select();\n      }\n    };\n\n    _this._handleKeyDown = function (e) {\n      // Prevent key events bubbling (see #612)\n      e.stopPropagation(); // Backspace, Escape, Tab, Cmd+Enter, and Arrow keys only fire 'keydown'\n      // DOM events\n\n      if (e.key === 'ArrowLeft' || e.key === 'ArrowUp' || e.key === 'ArrowRight' || e.key === 'ArrowDown' || e.key === 'Backspace' || e.key === 'Escape' || e.key === 'Enter' && e.metaKey || e.key === 'Tab') {\n        _this._handleKeyPress(e);\n      }\n    };\n\n    _this._handleKeyPress = function (e) {\n      var _this$props4 = _this.props,\n          blurOnSubmit = _this$props4.blurOnSubmit,\n          multiline = _this$props4.multiline,\n          onKeyPress = _this$props4.onKeyPress,\n          onSubmitEditing = _this$props4.onSubmitEditing;\n      var blurOnSubmitDefault = !multiline;\n      var shouldBlurOnSubmit = blurOnSubmit == null ? blurOnSubmitDefault : blurOnSubmit;\n\n      if (onKeyPress) {\n        var keyValue = e.key;\n\n        if (keyValue) {\n          e.nativeEvent = {\n            altKey: e.altKey,\n            ctrlKey: e.ctrlKey,\n            key: keyValue,\n            metaKey: e.metaKey,\n            shiftKey: e.shiftKey,\n            target: e.target\n          };\n          onKeyPress(e);\n        }\n      }\n\n      if (!e.isDefaultPrevented() && e.key === 'Enter' && !e.shiftKey) {\n        if ((blurOnSubmit || !multiline) && onSubmitEditing) {\n          // prevent \"Enter\" from inserting a newline\n          e.preventDefault();\n          e.nativeEvent = {\n            target: e.target,\n            text: e.target.value\n          };\n          onSubmitEditing(e);\n        }\n\n        if (shouldBlurOnSubmit) {\n          // $FlowFixMe\n          _this.blur();\n        }\n      }\n    };\n\n    _this._handleSelectionChange = function (e) {\n      var _this$props5 = _this.props,\n          onSelectionChange = _this$props5.onSelectionChange,\n          _this$props5$selectio = _this$props5.selection,\n          selection = _this$props5$selectio === void 0 ? emptyObject : _this$props5$selectio;\n\n      if (onSelectionChange) {\n        try {\n          var node = e.target;\n\n          if (isSelectionStale(node, selection)) {\n            var selectionStart = node.selectionStart,\n                selectionEnd = node.selectionEnd;\n            e.nativeEvent.selection = {\n              start: selectionStart,\n              end: selectionEnd\n            };\n            onSelectionChange(e);\n          }\n        } catch (e) {}\n      }\n    };\n\n    _this._setNode = function (component) {\n      _this._node = (0, _findNodeHandle.default)(component);\n\n      if (_this._node) {\n        _this._handleContentSizeChange();\n      }\n    };\n\n    return _this;\n  }\n\n  var _proto = TextInput.prototype;\n\n  _proto.clear = function clear() {\n    this._node.value = '';\n  };\n\n  _proto.isFocused = function isFocused() {\n    return _TextInputState.default.currentlyFocusedField() === this._node;\n  };\n\n  _proto.componentDidMount = function componentDidMount() {\n    setSelection(this._node, this.props.selection);\n\n    if (document.activeElement === this._node) {\n      _TextInputState.default._currentlyFocusedNode = this._node;\n    }\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate() {\n    setSelection(this._node, this.props.selection);\n  };\n\n  _proto.render = function render() {\n    var _this$props6 = this.props,\n        autoComplete = _this$props6.autoComplete,\n        autoCorrect = _this$props6.autoCorrect,\n        editable = _this$props6.editable,\n        keyboardType = _this$props6.keyboardType,\n        multiline = _this$props6.multiline,\n        numberOfLines = _this$props6.numberOfLines,\n        returnKeyType = _this$props6.returnKeyType,\n        secureTextEntry = _this$props6.secureTextEntry,\n        blurOnSubmit = _this$props6.blurOnSubmit,\n        clearTextOnFocus = _this$props6.clearTextOnFocus,\n        onChangeText = _this$props6.onChangeText,\n        onLayout = _this$props6.onLayout,\n        onSelectionChange = _this$props6.onSelectionChange,\n        onSubmitEditing = _this$props6.onSubmitEditing,\n        selection = _this$props6.selection,\n        selectTextOnFocus = _this$props6.selectTextOnFocus,\n        spellCheck = _this$props6.spellCheck,\n        accessibilityViewIsModal = _this$props6.accessibilityViewIsModal,\n        allowFontScaling = _this$props6.allowFontScaling,\n        caretHidden = _this$props6.caretHidden,\n        clearButtonMode = _this$props6.clearButtonMode,\n        dataDetectorTypes = _this$props6.dataDetectorTypes,\n        disableFullscreenUI = _this$props6.disableFullscreenUI,\n        enablesReturnKeyAutomatically = _this$props6.enablesReturnKeyAutomatically,\n        hitSlop = _this$props6.hitSlop,\n        inlineImageLeft = _this$props6.inlineImageLeft,\n        inlineImagePadding = _this$props6.inlineImagePadding,\n        inputAccessoryViewID = _this$props6.inputAccessoryViewID,\n        keyboardAppearance = _this$props6.keyboardAppearance,\n        maxFontSizeMultiplier = _this$props6.maxFontSizeMultiplier,\n        needsOffscreenAlphaCompositing = _this$props6.needsOffscreenAlphaCompositing,\n        onAccessibilityTap = _this$props6.onAccessibilityTap,\n        onContentSizeChange = _this$props6.onContentSizeChange,\n        onEndEditing = _this$props6.onEndEditing,\n        onMagicTap = _this$props6.onMagicTap,\n        onScroll = _this$props6.onScroll,\n        removeClippedSubviews = _this$props6.removeClippedSubviews,\n        renderToHardwareTextureAndroid = _this$props6.renderToHardwareTextureAndroid,\n        returnKeyLabel = _this$props6.returnKeyLabel,\n        scrollEnabled = _this$props6.scrollEnabled,\n        selectionColor = _this$props6.selectionColor,\n        selectionState = _this$props6.selectionState,\n        shouldRasterizeIOS = _this$props6.shouldRasterizeIOS,\n        textBreakStrategy = _this$props6.textBreakStrategy,\n        textContentType = _this$props6.textContentType,\n        underlineColorAndroid = _this$props6.underlineColorAndroid,\n        otherProps = _objectWithoutPropertiesLoose(_this$props6, [\"autoComplete\", \"autoCorrect\", \"editable\", \"keyboardType\", \"multiline\", \"numberOfLines\", \"returnKeyType\", \"secureTextEntry\", \"blurOnSubmit\", \"clearTextOnFocus\", \"onChangeText\", \"onLayout\", \"onSelectionChange\", \"onSubmitEditing\", \"selection\", \"selectTextOnFocus\", \"spellCheck\", \"accessibilityViewIsModal\", \"allowFontScaling\", \"caretHidden\", \"clearButtonMode\", \"dataDetectorTypes\", \"disableFullscreenUI\", \"enablesReturnKeyAutomatically\", \"hitSlop\", \"inlineImageLeft\", \"inlineImagePadding\", \"inputAccessoryViewID\", \"keyboardAppearance\", \"maxFontSizeMultiplier\", \"needsOffscreenAlphaCompositing\", \"onAccessibilityTap\", \"onContentSizeChange\", \"onEndEditing\", \"onMagicTap\", \"onScroll\", \"removeClippedSubviews\", \"renderToHardwareTextureAndroid\", \"returnKeyLabel\", \"scrollEnabled\", \"selectionColor\", \"selectionState\", \"shouldRasterizeIOS\", \"textBreakStrategy\", \"textContentType\", \"underlineColorAndroid\"]);\n\n    var type;\n\n    switch (keyboardType) {\n      case 'email-address':\n        type = 'email';\n        break;\n\n      case 'number-pad':\n      case 'numeric':\n        type = 'number';\n        break;\n\n      case 'phone-pad':\n        type = 'tel';\n        break;\n\n      case 'search':\n      case 'web-search':\n        type = 'search';\n        break;\n\n      case 'url':\n        type = 'url';\n        break;\n\n      default:\n        type = 'text';\n    }\n\n    if (secureTextEntry) {\n      type = 'password';\n    }\n\n    var component = multiline ? 'textarea' : 'input';\n\n    _Object$assign(otherProps, {\n      // Browser's treat autocomplete \"off\" as \"on\"\n      // https://bugs.chromium.org/p/chromium/issues/detail?id=468153#c164\n      autoComplete: autoComplete === 'off' ? 'noop' : autoComplete,\n      autoCorrect: autoCorrect ? 'on' : 'off',\n      classList: [classes.textinput],\n      dir: 'auto',\n      enterkeyhint: returnKeyType,\n      onBlur: normalizeEventHandler(this._handleBlur),\n      onChange: normalizeEventHandler(this._handleChange),\n      onFocus: normalizeEventHandler(this._handleFocus),\n      onKeyDown: this._handleKeyDown,\n      onKeyPress: this._handleKeyPress,\n      onSelect: normalizeEventHandler(this._handleSelectionChange),\n      readOnly: !editable,\n      ref: this._setNode,\n      spellCheck: spellCheck != null ? spellCheck : autoCorrect\n    });\n\n    if (multiline) {\n      otherProps.rows = numberOfLines;\n    } else {\n      otherProps.type = type;\n    }\n\n    return (0, _createElement.default)(component, otherProps);\n  };\n\n  return TextInput;\n}(_react.Component);\n\nTextInput.displayName = 'TextInput';\nTextInput.defaultProps = {\n  autoCapitalize: 'sentences',\n  autoComplete: 'on',\n  autoCorrect: true,\n  editable: true,\n  keyboardType: 'default',\n  multiline: false,\n  numberOfLines: 1,\n  secureTextEntry: false\n};\nTextInput.State = _TextInputState.default;\nTextInput.propTypes = true ? _objectSpread({}, _ViewPropTypes.default, {\n  autoCapitalize: (0, _propTypes.oneOf)(['characters', 'none', 'sentences', 'words']),\n  autoComplete: _propTypes.string,\n  autoCorrect: _propTypes.bool,\n  autoFocus: _propTypes.bool,\n  blurOnSubmit: _propTypes.bool,\n  clearTextOnFocus: _propTypes.bool,\n  defaultValue: _propTypes.string,\n  editable: _propTypes.bool,\n  inputAccessoryViewID: _propTypes.string,\n  keyboardType: (0, _propTypes.oneOf)(['default', 'email-address', 'number-pad', 'numbers-and-punctuation', 'numeric', 'phone-pad', 'search', 'url', 'web-search']),\n  maxFontSizeMultiplier: _propTypes.number,\n  maxLength: _propTypes.number,\n  multiline: _propTypes.bool,\n  numberOfLines: _propTypes.number,\n  onBlur: _propTypes.func,\n  onChange: _propTypes.func,\n  onChangeText: _propTypes.func,\n  onFocus: _propTypes.func,\n  onKeyPress: _propTypes.func,\n  onSelectionChange: _propTypes.func,\n  onSubmitEditing: _propTypes.func,\n  placeholder: _propTypes.string,\n  placeholderTextColor: _ColorPropType.default,\n  returnKeyType: (0, _propTypes.oneOf)(['enter', 'done', 'go', 'next', 'previous', 'search', 'send']),\n  secureTextEntry: _propTypes.bool,\n  selectTextOnFocus: _propTypes.bool,\n  selection: (0, _propTypes.shape)({\n    start: _propTypes.number.isRequired,\n    end: _propTypes.number\n  }),\n  spellCheck: _propTypes.bool,\n  style: (0, _StyleSheetPropType.default)(_TextInputStylePropTypes.default),\n  value: _propTypes.string,\n\n  /* react-native compat */\n\n  /* eslint-disable */\n  caretHidden: _propTypes.bool,\n  clearButtonMode: _propTypes.string,\n  dataDetectorTypes: _propTypes.string,\n  disableFullscreenUI: _propTypes.bool,\n  enablesReturnKeyAutomatically: _propTypes.bool,\n  keyboardAppearance: _propTypes.string,\n  inlineImageLeft: _propTypes.string,\n  inlineImagePadding: _propTypes.number,\n  onContentSizeChange: _propTypes.func,\n  onEndEditing: _propTypes.func,\n  onScroll: _propTypes.func,\n  returnKeyLabel: _propTypes.string,\n  selectionColor: _ColorPropType.default,\n  selectionState: _propTypes.any,\n  textBreakStrategy: _propTypes.string,\n  underlineColorAndroid: _ColorPropType.default\n  /* eslint-enable */\n\n}) : {};\n\nvar classes = _css.default.create({\n  textinput: {\n    MozAppearance: 'textfield',\n    WebkitAppearance: 'none',\n    backgroundColor: 'transparent',\n    border: '0 solid black',\n    borderRadius: 0,\n    boxSizing: 'border-box',\n    font: '14px System',\n    padding: 0,\n    resize: 'none'\n  }\n});\n\nvar _default = (0, _applyLayout.default)((0, _applyNativeMethods.default)(TextInput));\n\nexports.default = _default;\nmodule.exports = exports.default;","map":{"version":3,"sources":["/Users/utkarsh/Desktop/headout/ReactNativeOne/node_modules/react-native-web/dist/cjs/exports/TextInput/index.js"],"names":["exports","__esModule","default","_applyLayout","_interopRequireDefault","require","_applyNativeMethods","_ExecutionEnvironment","_react","_ColorPropType","_createElement","_css","_findNodeHandle","_StyleSheetPropType","_TextInputStylePropTypes","_TextInputState","_ViewPropTypes","_propTypes","obj","_objectSpread","target","i","arguments","length","source","ownKeys","concat","filter","sym","enumerable","forEach","key","_defineProperty","value","configurable","writable","_objectWithoutPropertiesLoose","excluded","sourceKeys","indexOf","_inheritsLoose","subClass","superClass","prototype","constructor","__proto__","isAndroid","canUseDOM","test","navigator","userAgent","emptyObject","normalizeEventHandler","handler","e","nativeEvent","text","isSelectionStale","node","selection","selectionEnd","selectionStart","start","end","setSelection","setTimeout","setSelectionRange","TextInput","_Component","_this","_len","args","Array","_key","call","apply","_handleBlur","onBlur","props","_currentlyFocusedNode","_handleContentSizeChange","_this$props","onContentSizeChange","multiline","newHeight","_node","scrollHeight","newWidth","scrollWidth","_nodeHeight","_nodeWidth","contentSize","height","width","_handleChange","_this$props2","onChange","onChangeText","_handleSelectionChange","_handleFocus","_this$props3","clearTextOnFocus","onFocus","selectTextOnFocus","clear","select","_handleKeyDown","stopPropagation","metaKey","_handleKeyPress","_this$props4","blurOnSubmit","onKeyPress","onSubmitEditing","blurOnSubmitDefault","shouldBlurOnSubmit","keyValue","altKey","ctrlKey","shiftKey","isDefaultPrevented","preventDefault","blur","_this$props5","onSelectionChange","_this$props5$selectio","_setNode","component","_proto","isFocused","currentlyFocusedField","componentDidMount","document","activeElement","componentDidUpdate","render","_this$props6","autoComplete","autoCorrect","editable","keyboardType","numberOfLines","returnKeyType","secureTextEntry","onLayout","spellCheck","accessibilityViewIsModal","allowFontScaling","caretHidden","clearButtonMode","dataDetectorTypes","disableFullscreenUI","enablesReturnKeyAutomatically","hitSlop","inlineImageLeft","inlineImagePadding","inputAccessoryViewID","keyboardAppearance","maxFontSizeMultiplier","needsOffscreenAlphaCompositing","onAccessibilityTap","onEndEditing","onMagicTap","onScroll","removeClippedSubviews","renderToHardwareTextureAndroid","returnKeyLabel","scrollEnabled","selectionColor","selectionState","shouldRasterizeIOS","textBreakStrategy","textContentType","underlineColorAndroid","otherProps","type","classList","classes","textinput","dir","enterkeyhint","onKeyDown","onSelect","readOnly","ref","rows","Component","displayName","defaultProps","autoCapitalize","State","propTypes","oneOf","string","bool","autoFocus","defaultValue","number","maxLength","func","placeholder","placeholderTextColor","shape","isRequired","style","any","create","MozAppearance","WebkitAppearance","backgroundColor","border","borderRadius","boxSizing","font","padding","resize","_default","module"],"mappings":"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","sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _applyLayout = _interopRequireDefault(require(\"../../modules/applyLayout\"));\n\nvar _applyNativeMethods = _interopRequireDefault(require(\"../../modules/applyNativeMethods\"));\n\nvar _ExecutionEnvironment = require(\"fbjs/lib/ExecutionEnvironment\");\n\nvar _react = require(\"react\");\n\nvar _ColorPropType = _interopRequireDefault(require(\"../ColorPropType\"));\n\nvar _createElement = _interopRequireDefault(require(\"../createElement\"));\n\nvar _css = _interopRequireDefault(require(\"../StyleSheet/css\"));\n\nvar _findNodeHandle = _interopRequireDefault(require(\"../findNodeHandle\"));\n\nvar _StyleSheetPropType = _interopRequireDefault(require(\"../../modules/StyleSheetPropType\"));\n\nvar _TextInputStylePropTypes = _interopRequireDefault(require(\"./TextInputStylePropTypes\"));\n\nvar _TextInputState = _interopRequireDefault(require(\"../../modules/TextInputState\"));\n\nvar _ViewPropTypes = _interopRequireDefault(require(\"../ViewPropTypes\"));\n\nvar _propTypes = require(\"prop-types\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\nvar isAndroid = _ExecutionEnvironment.canUseDOM && /Android/i.test(navigator && navigator.userAgent);\nvar emptyObject = {};\n/**\n * React Native events differ from W3C events.\n */\n\nvar normalizeEventHandler = function normalizeEventHandler(handler) {\n  return function (e) {\n    if (handler) {\n      e.nativeEvent.text = e.target.value;\n      return handler(e);\n    }\n  };\n};\n/**\n * Determines whether a 'selection' prop differs from a node's existing\n * selection state.\n */\n\n\nvar isSelectionStale = function isSelectionStale(node, selection) {\n  if (node && selection) {\n    var selectionEnd = node.selectionEnd,\n        selectionStart = node.selectionStart;\n    var start = selection.start,\n        end = selection.end;\n    return start !== selectionStart || end !== selectionEnd;\n  }\n\n  return false;\n};\n/**\n * Certain input types do no support 'selectSelectionRange' and will throw an\n * error.\n */\n\n\nvar setSelection = function setSelection(node, selection) {\n  try {\n    if (isSelectionStale(node, selection)) {\n      var start = selection.start,\n          end = selection.end; // workaround for Blink on Android: see https://github.com/text-mask/text-mask/issues/300\n\n      if (isAndroid) {\n        setTimeout(function () {\n          return node.setSelectionRange(start, end || start);\n        }, 10);\n      } else {\n        node.setSelectionRange(start, end || start);\n      }\n    }\n  } catch (e) {}\n};\n\nvar TextInput =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(TextInput, _Component);\n\n  function TextInput() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _Component.call.apply(_Component, [this].concat(args)) || this;\n\n    _this._handleBlur = function (e) {\n      var onBlur = _this.props.onBlur;\n      _TextInputState.default._currentlyFocusedNode = null;\n\n      if (onBlur) {\n        onBlur(e);\n      }\n    };\n\n    _this._handleContentSizeChange = function () {\n      var _this$props = _this.props,\n          onContentSizeChange = _this$props.onContentSizeChange,\n          multiline = _this$props.multiline;\n\n      if (multiline && onContentSizeChange) {\n        var newHeight = _this._node.scrollHeight;\n        var newWidth = _this._node.scrollWidth;\n\n        if (newHeight !== _this._nodeHeight || newWidth !== _this._nodeWidth) {\n          _this._nodeHeight = newHeight;\n          _this._nodeWidth = newWidth;\n          onContentSizeChange({\n            nativeEvent: {\n              contentSize: {\n                height: _this._nodeHeight,\n                width: _this._nodeWidth\n              }\n            }\n          });\n        }\n      }\n    };\n\n    _this._handleChange = function (e) {\n      var _this$props2 = _this.props,\n          onChange = _this$props2.onChange,\n          onChangeText = _this$props2.onChangeText;\n      var text = e.nativeEvent.text;\n\n      _this._handleContentSizeChange();\n\n      if (onChange) {\n        onChange(e);\n      }\n\n      if (onChangeText) {\n        onChangeText(text);\n      }\n\n      _this._handleSelectionChange(e);\n    };\n\n    _this._handleFocus = function (e) {\n      var _this$props3 = _this.props,\n          clearTextOnFocus = _this$props3.clearTextOnFocus,\n          onFocus = _this$props3.onFocus,\n          selectTextOnFocus = _this$props3.selectTextOnFocus;\n      var node = _this._node;\n      _TextInputState.default._currentlyFocusedNode = _this._node;\n\n      if (onFocus) {\n        onFocus(e);\n      }\n\n      if (clearTextOnFocus) {\n        _this.clear();\n      }\n\n      if (selectTextOnFocus) {\n        node && node.select();\n      }\n    };\n\n    _this._handleKeyDown = function (e) {\n      // Prevent key events bubbling (see #612)\n      e.stopPropagation(); // Backspace, Escape, Tab, Cmd+Enter, and Arrow keys only fire 'keydown'\n      // DOM events\n\n      if (e.key === 'ArrowLeft' || e.key === 'ArrowUp' || e.key === 'ArrowRight' || e.key === 'ArrowDown' || e.key === 'Backspace' || e.key === 'Escape' || e.key === 'Enter' && e.metaKey || e.key === 'Tab') {\n        _this._handleKeyPress(e);\n      }\n    };\n\n    _this._handleKeyPress = function (e) {\n      var _this$props4 = _this.props,\n          blurOnSubmit = _this$props4.blurOnSubmit,\n          multiline = _this$props4.multiline,\n          onKeyPress = _this$props4.onKeyPress,\n          onSubmitEditing = _this$props4.onSubmitEditing;\n      var blurOnSubmitDefault = !multiline;\n      var shouldBlurOnSubmit = blurOnSubmit == null ? blurOnSubmitDefault : blurOnSubmit;\n\n      if (onKeyPress) {\n        var keyValue = e.key;\n\n        if (keyValue) {\n          e.nativeEvent = {\n            altKey: e.altKey,\n            ctrlKey: e.ctrlKey,\n            key: keyValue,\n            metaKey: e.metaKey,\n            shiftKey: e.shiftKey,\n            target: e.target\n          };\n          onKeyPress(e);\n        }\n      }\n\n      if (!e.isDefaultPrevented() && e.key === 'Enter' && !e.shiftKey) {\n        if ((blurOnSubmit || !multiline) && onSubmitEditing) {\n          // prevent \"Enter\" from inserting a newline\n          e.preventDefault();\n          e.nativeEvent = {\n            target: e.target,\n            text: e.target.value\n          };\n          onSubmitEditing(e);\n        }\n\n        if (shouldBlurOnSubmit) {\n          // $FlowFixMe\n          _this.blur();\n        }\n      }\n    };\n\n    _this._handleSelectionChange = function (e) {\n      var _this$props5 = _this.props,\n          onSelectionChange = _this$props5.onSelectionChange,\n          _this$props5$selectio = _this$props5.selection,\n          selection = _this$props5$selectio === void 0 ? emptyObject : _this$props5$selectio;\n\n      if (onSelectionChange) {\n        try {\n          var node = e.target;\n\n          if (isSelectionStale(node, selection)) {\n            var selectionStart = node.selectionStart,\n                selectionEnd = node.selectionEnd;\n            e.nativeEvent.selection = {\n              start: selectionStart,\n              end: selectionEnd\n            };\n            onSelectionChange(e);\n          }\n        } catch (e) {}\n      }\n    };\n\n    _this._setNode = function (component) {\n      _this._node = (0, _findNodeHandle.default)(component);\n\n      if (_this._node) {\n        _this._handleContentSizeChange();\n      }\n    };\n\n    return _this;\n  }\n\n  var _proto = TextInput.prototype;\n\n  _proto.clear = function clear() {\n    this._node.value = '';\n  };\n\n  _proto.isFocused = function isFocused() {\n    return _TextInputState.default.currentlyFocusedField() === this._node;\n  };\n\n  _proto.componentDidMount = function componentDidMount() {\n    setSelection(this._node, this.props.selection);\n\n    if (document.activeElement === this._node) {\n      _TextInputState.default._currentlyFocusedNode = this._node;\n    }\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate() {\n    setSelection(this._node, this.props.selection);\n  };\n\n  _proto.render = function render() {\n    var _this$props6 = this.props,\n        autoComplete = _this$props6.autoComplete,\n        autoCorrect = _this$props6.autoCorrect,\n        editable = _this$props6.editable,\n        keyboardType = _this$props6.keyboardType,\n        multiline = _this$props6.multiline,\n        numberOfLines = _this$props6.numberOfLines,\n        returnKeyType = _this$props6.returnKeyType,\n        secureTextEntry = _this$props6.secureTextEntry,\n        blurOnSubmit = _this$props6.blurOnSubmit,\n        clearTextOnFocus = _this$props6.clearTextOnFocus,\n        onChangeText = _this$props6.onChangeText,\n        onLayout = _this$props6.onLayout,\n        onSelectionChange = _this$props6.onSelectionChange,\n        onSubmitEditing = _this$props6.onSubmitEditing,\n        selection = _this$props6.selection,\n        selectTextOnFocus = _this$props6.selectTextOnFocus,\n        spellCheck = _this$props6.spellCheck,\n        accessibilityViewIsModal = _this$props6.accessibilityViewIsModal,\n        allowFontScaling = _this$props6.allowFontScaling,\n        caretHidden = _this$props6.caretHidden,\n        clearButtonMode = _this$props6.clearButtonMode,\n        dataDetectorTypes = _this$props6.dataDetectorTypes,\n        disableFullscreenUI = _this$props6.disableFullscreenUI,\n        enablesReturnKeyAutomatically = _this$props6.enablesReturnKeyAutomatically,\n        hitSlop = _this$props6.hitSlop,\n        inlineImageLeft = _this$props6.inlineImageLeft,\n        inlineImagePadding = _this$props6.inlineImagePadding,\n        inputAccessoryViewID = _this$props6.inputAccessoryViewID,\n        keyboardAppearance = _this$props6.keyboardAppearance,\n        maxFontSizeMultiplier = _this$props6.maxFontSizeMultiplier,\n        needsOffscreenAlphaCompositing = _this$props6.needsOffscreenAlphaCompositing,\n        onAccessibilityTap = _this$props6.onAccessibilityTap,\n        onContentSizeChange = _this$props6.onContentSizeChange,\n        onEndEditing = _this$props6.onEndEditing,\n        onMagicTap = _this$props6.onMagicTap,\n        onScroll = _this$props6.onScroll,\n        removeClippedSubviews = _this$props6.removeClippedSubviews,\n        renderToHardwareTextureAndroid = _this$props6.renderToHardwareTextureAndroid,\n        returnKeyLabel = _this$props6.returnKeyLabel,\n        scrollEnabled = _this$props6.scrollEnabled,\n        selectionColor = _this$props6.selectionColor,\n        selectionState = _this$props6.selectionState,\n        shouldRasterizeIOS = _this$props6.shouldRasterizeIOS,\n        textBreakStrategy = _this$props6.textBreakStrategy,\n        textContentType = _this$props6.textContentType,\n        underlineColorAndroid = _this$props6.underlineColorAndroid,\n        otherProps = _objectWithoutPropertiesLoose(_this$props6, [\"autoComplete\", \"autoCorrect\", \"editable\", \"keyboardType\", \"multiline\", \"numberOfLines\", \"returnKeyType\", \"secureTextEntry\", \"blurOnSubmit\", \"clearTextOnFocus\", \"onChangeText\", \"onLayout\", \"onSelectionChange\", \"onSubmitEditing\", \"selection\", \"selectTextOnFocus\", \"spellCheck\", \"accessibilityViewIsModal\", \"allowFontScaling\", \"caretHidden\", \"clearButtonMode\", \"dataDetectorTypes\", \"disableFullscreenUI\", \"enablesReturnKeyAutomatically\", \"hitSlop\", \"inlineImageLeft\", \"inlineImagePadding\", \"inputAccessoryViewID\", \"keyboardAppearance\", \"maxFontSizeMultiplier\", \"needsOffscreenAlphaCompositing\", \"onAccessibilityTap\", \"onContentSizeChange\", \"onEndEditing\", \"onMagicTap\", \"onScroll\", \"removeClippedSubviews\", \"renderToHardwareTextureAndroid\", \"returnKeyLabel\", \"scrollEnabled\", \"selectionColor\", \"selectionState\", \"shouldRasterizeIOS\", \"textBreakStrategy\", \"textContentType\", \"underlineColorAndroid\"]);\n\n    var type;\n\n    switch (keyboardType) {\n      case 'email-address':\n        type = 'email';\n        break;\n\n      case 'number-pad':\n      case 'numeric':\n        type = 'number';\n        break;\n\n      case 'phone-pad':\n        type = 'tel';\n        break;\n\n      case 'search':\n      case 'web-search':\n        type = 'search';\n        break;\n\n      case 'url':\n        type = 'url';\n        break;\n\n      default:\n        type = 'text';\n    }\n\n    if (secureTextEntry) {\n      type = 'password';\n    }\n\n    var component = multiline ? 'textarea' : 'input';\n    Object.assign(otherProps, {\n      // Browser's treat autocomplete \"off\" as \"on\"\n      // https://bugs.chromium.org/p/chromium/issues/detail?id=468153#c164\n      autoComplete: autoComplete === 'off' ? 'noop' : autoComplete,\n      autoCorrect: autoCorrect ? 'on' : 'off',\n      classList: [classes.textinput],\n      dir: 'auto',\n      enterkeyhint: returnKeyType,\n      onBlur: normalizeEventHandler(this._handleBlur),\n      onChange: normalizeEventHandler(this._handleChange),\n      onFocus: normalizeEventHandler(this._handleFocus),\n      onKeyDown: this._handleKeyDown,\n      onKeyPress: this._handleKeyPress,\n      onSelect: normalizeEventHandler(this._handleSelectionChange),\n      readOnly: !editable,\n      ref: this._setNode,\n      spellCheck: spellCheck != null ? spellCheck : autoCorrect\n    });\n\n    if (multiline) {\n      otherProps.rows = numberOfLines;\n    } else {\n      otherProps.type = type;\n    }\n\n    return (0, _createElement.default)(component, otherProps);\n  };\n\n  return TextInput;\n}(_react.Component);\n\nTextInput.displayName = 'TextInput';\nTextInput.defaultProps = {\n  autoCapitalize: 'sentences',\n  autoComplete: 'on',\n  autoCorrect: true,\n  editable: true,\n  keyboardType: 'default',\n  multiline: false,\n  numberOfLines: 1,\n  secureTextEntry: false\n};\nTextInput.State = _TextInputState.default;\nTextInput.propTypes = process.env.NODE_ENV !== \"production\" ? _objectSpread({}, _ViewPropTypes.default, {\n  autoCapitalize: (0, _propTypes.oneOf)(['characters', 'none', 'sentences', 'words']),\n  autoComplete: _propTypes.string,\n  autoCorrect: _propTypes.bool,\n  autoFocus: _propTypes.bool,\n  blurOnSubmit: _propTypes.bool,\n  clearTextOnFocus: _propTypes.bool,\n  defaultValue: _propTypes.string,\n  editable: _propTypes.bool,\n  inputAccessoryViewID: _propTypes.string,\n  keyboardType: (0, _propTypes.oneOf)(['default', 'email-address', 'number-pad', 'numbers-and-punctuation', 'numeric', 'phone-pad', 'search', 'url', 'web-search']),\n  maxFontSizeMultiplier: _propTypes.number,\n  maxLength: _propTypes.number,\n  multiline: _propTypes.bool,\n  numberOfLines: _propTypes.number,\n  onBlur: _propTypes.func,\n  onChange: _propTypes.func,\n  onChangeText: _propTypes.func,\n  onFocus: _propTypes.func,\n  onKeyPress: _propTypes.func,\n  onSelectionChange: _propTypes.func,\n  onSubmitEditing: _propTypes.func,\n  placeholder: _propTypes.string,\n  placeholderTextColor: _ColorPropType.default,\n  returnKeyType: (0, _propTypes.oneOf)(['enter', 'done', 'go', 'next', 'previous', 'search', 'send']),\n  secureTextEntry: _propTypes.bool,\n  selectTextOnFocus: _propTypes.bool,\n  selection: (0, _propTypes.shape)({\n    start: _propTypes.number.isRequired,\n    end: _propTypes.number\n  }),\n  spellCheck: _propTypes.bool,\n  style: (0, _StyleSheetPropType.default)(_TextInputStylePropTypes.default),\n  value: _propTypes.string,\n\n  /* react-native compat */\n\n  /* eslint-disable */\n  caretHidden: _propTypes.bool,\n  clearButtonMode: _propTypes.string,\n  dataDetectorTypes: _propTypes.string,\n  disableFullscreenUI: _propTypes.bool,\n  enablesReturnKeyAutomatically: _propTypes.bool,\n  keyboardAppearance: _propTypes.string,\n  inlineImageLeft: _propTypes.string,\n  inlineImagePadding: _propTypes.number,\n  onContentSizeChange: _propTypes.func,\n  onEndEditing: _propTypes.func,\n  onScroll: _propTypes.func,\n  returnKeyLabel: _propTypes.string,\n  selectionColor: _ColorPropType.default,\n  selectionState: _propTypes.any,\n  textBreakStrategy: _propTypes.string,\n  underlineColorAndroid: _ColorPropType.default\n  /* eslint-enable */\n\n}) : {};\n\nvar classes = _css.default.create({\n  textinput: {\n    MozAppearance: 'textfield',\n    WebkitAppearance: 'none',\n    backgroundColor: 'transparent',\n    border: '0 solid black',\n    borderRadius: 0,\n    boxSizing: 'border-box',\n    font: '14px System',\n    padding: 0,\n    resize: 'none'\n  }\n});\n\nvar _default = (0, _applyLayout.default)((0, _applyNativeMethods.default)(TextInput));\n\nexports.default = _default;\nmodule.exports = exports.default;"]},"metadata":{},"sourceType":"script"}