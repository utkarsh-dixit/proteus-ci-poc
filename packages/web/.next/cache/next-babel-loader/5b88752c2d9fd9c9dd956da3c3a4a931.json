{"ast":null,"code":"/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n'use strict';\n\nvar _Object$keys = require(\"@babel/runtime-corejs2/core-js/object/keys\");\n\nvar _Set = require(\"@babel/runtime-corejs2/core-js/set\");\n\nvar _Object$create = require(\"@babel/runtime-corejs2/core-js/object/create\");\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _AnimatedInterpolation = _interopRequireDefault(require(\"./AnimatedInterpolation\"));\n\nvar _AnimatedNode = _interopRequireDefault(require(\"./AnimatedNode\"));\n\nvar _AnimatedWithChildren2 = _interopRequireDefault(require(\"./AnimatedWithChildren\"));\n\nvar _InteractionManager = _interopRequireDefault(require(\"../../../../exports/InteractionManager\"));\n\nvar _NativeAnimatedHelper = _interopRequireDefault(require(\"../NativeAnimatedHelper\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = _Object$create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nvar NativeAnimatedAPI = _NativeAnimatedHelper.default.API;\nvar _uniqueId = 1;\n/**\n * Animated works by building a directed acyclic graph of dependencies\n * transparently when you render your Animated components.\n *\n *               new Animated.Value(0)\n *     .interpolate()        .interpolate()    new Animated.Value(1)\n *         opacity               translateY      scale\n *          style                         transform\n *         View#234                         style\n *                                         View#123\n *\n * A) Top Down phase\n * When an Animated.Value is updated, we recursively go down through this\n * graph in order to find leaf nodes: the views that we flag as needing\n * an update.\n *\n * B) Bottom Up phase\n * When a view is flagged as needing an update, we recursively go back up\n * in order to build the new value that it needs. The reason why we need\n * this two-phases process is to deal with composite props such as\n * transform which can receive values from multiple parents.\n */\n\nfunction _flush(rootNode) {\n  var animatedStyles = new _Set();\n\n  function findAnimatedStyles(node) {\n    if (typeof node.update === 'function') {\n      animatedStyles.add(node);\n    } else {\n      node.__getChildren().forEach(findAnimatedStyles);\n    }\n  }\n\n  findAnimatedStyles(rootNode);\n  animatedStyles.forEach(function (animatedStyle) {\n    return animatedStyle.update();\n  });\n}\n/**\n * Standard value for driving animations.  One `Animated.Value` can drive\n * multiple properties in a synchronized fashion, but can only be driven by one\n * mechanism at a time.  Using a new mechanism (e.g. starting a new animation,\n * or calling `setValue`) will stop any previous ones.\n *\n * See http://facebook.github.io/react-native/docs/animatedvalue.html\n */\n\n\nvar AnimatedValue =\n/*#__PURE__*/\nfunction (_AnimatedWithChildren) {\n  _inheritsLoose(AnimatedValue, _AnimatedWithChildren);\n\n  function AnimatedValue(value) {\n    var _this;\n\n    _this = _AnimatedWithChildren.call(this) || this;\n    _this._startingValue = _this._value = value;\n    _this._offset = 0;\n    _this._animation = null;\n    _this._listeners = {};\n    return _this;\n  }\n\n  var _proto = AnimatedValue.prototype;\n\n  _proto.__detach = function __detach() {\n    this.stopAnimation();\n\n    _AnimatedWithChildren.prototype.__detach.call(this);\n  };\n\n  _proto.__getValue = function __getValue() {\n    return this._value + this._offset;\n  };\n\n  _proto.__makeNative = function __makeNative() {\n    _AnimatedWithChildren.prototype.__makeNative.call(this);\n\n    if (_Object$keys(this._listeners).length) {\n      this._startListeningToNativeValueUpdates();\n    }\n  }\n  /**\n   * Directly set the value.  This will stop any animations running on the value\n   * and update all the bound properties.\n   *\n   * See http://facebook.github.io/react-native/docs/animatedvalue.html#setvalue\n   */\n  ;\n\n  _proto.setValue = function setValue(value) {\n    if (this._animation) {\n      this._animation.stop();\n\n      this._animation = null;\n    }\n\n    this._updateValue(value, !this.__isNative\n    /* don't perform a flush for natively driven values */\n    );\n\n    if (this.__isNative) {\n      NativeAnimatedAPI.setAnimatedNodeValue(this.__getNativeTag(), value);\n    }\n  }\n  /**\n   * Sets an offset that is applied on top of whatever value is set, whether via\n   * `setValue`, an animation, or `Animated.event`.  Useful for compensating\n   * things like the start of a pan gesture.\n   *\n   * See http://facebook.github.io/react-native/docs/animatedvalue.html#setoffset\n   */\n  ;\n\n  _proto.setOffset = function setOffset(offset) {\n    this._offset = offset;\n\n    if (this.__isNative) {\n      NativeAnimatedAPI.setAnimatedNodeOffset(this.__getNativeTag(), offset);\n    }\n  }\n  /**\n   * Merges the offset value into the base value and resets the offset to zero.\n   * The final output of the value is unchanged.\n   *\n   * See http://facebook.github.io/react-native/docs/animatedvalue.html#flattenoffset\n   */\n  ;\n\n  _proto.flattenOffset = function flattenOffset() {\n    this._value += this._offset;\n    this._offset = 0;\n\n    if (this.__isNative) {\n      NativeAnimatedAPI.flattenAnimatedNodeOffset(this.__getNativeTag());\n    }\n  }\n  /**\n   * Sets the offset value to the base value, and resets the base value to zero.\n   * The final output of the value is unchanged.\n   *\n   * See http://facebook.github.io/react-native/docs/animatedvalue.html#extractoffset\n   */\n  ;\n\n  _proto.extractOffset = function extractOffset() {\n    this._offset += this._value;\n    this._value = 0;\n\n    if (this.__isNative) {\n      NativeAnimatedAPI.extractAnimatedNodeOffset(this.__getNativeTag());\n    }\n  }\n  /**\n   * Adds an asynchronous listener to the value so you can observe updates from\n   * animations.  This is useful because there is no way to\n   * synchronously read the value because it might be driven natively.\n   *\n   * See http://facebook.github.io/react-native/docs/animatedvalue.html#addlistener\n   */\n  ;\n\n  _proto.addListener = function addListener(callback) {\n    var id = String(_uniqueId++);\n    this._listeners[id] = callback;\n\n    if (this.__isNative) {\n      this._startListeningToNativeValueUpdates();\n    }\n\n    return id;\n  }\n  /**\n   * Unregister a listener. The `id` param shall match the identifier\n   * previously returned by `addListener()`.\n   *\n   * See http://facebook.github.io/react-native/docs/animatedvalue.html#removelistener\n   */\n  ;\n\n  _proto.removeListener = function removeListener(id) {\n    delete this._listeners[id];\n\n    if (this.__isNative && _Object$keys(this._listeners).length === 0) {\n      this._stopListeningForNativeValueUpdates();\n    }\n  }\n  /**\n   * Remove all registered listeners.\n   *\n   * See http://facebook.github.io/react-native/docs/animatedvalue.html#removealllisteners\n   */\n  ;\n\n  _proto.removeAllListeners = function removeAllListeners() {\n    this._listeners = {};\n\n    if (this.__isNative) {\n      this._stopListeningForNativeValueUpdates();\n    }\n  };\n\n  _proto._startListeningToNativeValueUpdates = function _startListeningToNativeValueUpdates() {\n    var _this2 = this;\n\n    if (this.__nativeAnimatedValueListener) {\n      return;\n    }\n\n    NativeAnimatedAPI.startListeningToAnimatedNodeValue(this.__getNativeTag());\n    this.__nativeAnimatedValueListener = _NativeAnimatedHelper.default.nativeEventEmitter.addListener('onAnimatedValueUpdate', function (data) {\n      if (data.tag !== _this2.__getNativeTag()) {\n        return;\n      }\n\n      _this2._updateValue(data.value, false\n      /* flush */\n      );\n    });\n  };\n\n  _proto._stopListeningForNativeValueUpdates = function _stopListeningForNativeValueUpdates() {\n    if (!this.__nativeAnimatedValueListener) {\n      return;\n    }\n\n    this.__nativeAnimatedValueListener.remove();\n\n    this.__nativeAnimatedValueListener = null;\n    NativeAnimatedAPI.stopListeningToAnimatedNodeValue(this.__getNativeTag());\n  }\n  /**\n   * Stops any running animation or tracking. `callback` is invoked with the\n   * final value after stopping the animation, which is useful for updating\n   * state to match the animation position with layout.\n   *\n   * See http://facebook.github.io/react-native/docs/animatedvalue.html#stopanimation\n   */\n  ;\n\n  _proto.stopAnimation = function stopAnimation(callback) {\n    this.stopTracking();\n    this._animation && this._animation.stop();\n    this._animation = null;\n    callback && callback(this.__getValue());\n  }\n  /**\n   * Stops any animation and resets the value to its original.\n   *\n   * See http://facebook.github.io/react-native/docs/animatedvalue.html#resetanimation\n   */\n  ;\n\n  _proto.resetAnimation = function resetAnimation(callback) {\n    this.stopAnimation(callback);\n    this._value = this._startingValue;\n  }\n  /**\n   * Interpolates the value before updating the property, e.g. mapping 0-1 to\n   * 0-10.\n   */\n  ;\n\n  _proto.interpolate = function interpolate(config) {\n    return new _AnimatedInterpolation.default(this, config);\n  }\n  /**\n   * Typically only used internally, but could be used by a custom Animation\n   * class.\n   *\n   * See http://facebook.github.io/react-native/docs/animatedvalue.html#animate\n   */\n  ;\n\n  _proto.animate = function animate(animation, callback) {\n    var _this3 = this;\n\n    var handle = null;\n\n    if (animation.__isInteraction) {\n      handle = _InteractionManager.default.createInteractionHandle();\n    }\n\n    var previousAnimation = this._animation;\n    this._animation && this._animation.stop();\n    this._animation = animation;\n    animation.start(this._value, function (value) {\n      // Natively driven animations will never call into that callback, therefore we can always\n      // pass flush = true to allow the updated value to propagate to native with setNativeProps\n      _this3._updateValue(value, true\n      /* flush */\n      );\n    }, function (result) {\n      _this3._animation = null;\n\n      if (handle !== null) {\n        _InteractionManager.default.clearInteractionHandle(handle);\n      }\n\n      callback && callback(result);\n    }, previousAnimation, this);\n  }\n  /**\n   * Typically only used internally.\n   */\n  ;\n\n  _proto.stopTracking = function stopTracking() {\n    this._tracking && this._tracking.__detach();\n    this._tracking = null;\n  }\n  /**\n   * Typically only used internally.\n   */\n  ;\n\n  _proto.track = function track(tracking) {\n    this.stopTracking();\n    this._tracking = tracking;\n  };\n\n  _proto._updateValue = function _updateValue(value, flush) {\n    this._value = value;\n\n    if (flush) {\n      _flush(this);\n    }\n\n    for (var _key in this._listeners) {\n      this._listeners[_key]({\n        value: this.__getValue()\n      });\n    }\n  };\n\n  _proto.__getNativeConfig = function __getNativeConfig() {\n    return {\n      type: 'value',\n      value: this._value,\n      offset: this._offset\n    };\n  };\n\n  return AnimatedValue;\n}(_AnimatedWithChildren2.default);\n\nvar _default = AnimatedValue;\nexports.default = _default;\nmodule.exports = exports.default;","map":{"version":3,"sources":["/Users/utkarsh/Desktop/headout/ReactNativeOne/node_modules/react-native-web/dist/cjs/vendor/react-native/Animated/nodes/AnimatedValue.js"],"names":["exports","__esModule","default","_AnimatedInterpolation","_interopRequireDefault","require","_AnimatedNode","_AnimatedWithChildren2","_InteractionManager","_NativeAnimatedHelper","obj","_inheritsLoose","subClass","superClass","prototype","constructor","__proto__","NativeAnimatedAPI","API","_uniqueId","_flush","rootNode","animatedStyles","findAnimatedStyles","node","update","add","__getChildren","forEach","animatedStyle","AnimatedValue","_AnimatedWithChildren","value","_this","call","_startingValue","_value","_offset","_animation","_listeners","_proto","__detach","stopAnimation","__getValue","__makeNative","length","_startListeningToNativeValueUpdates","setValue","stop","_updateValue","__isNative","setAnimatedNodeValue","__getNativeTag","setOffset","offset","setAnimatedNodeOffset","flattenOffset","flattenAnimatedNodeOffset","extractOffset","extractAnimatedNodeOffset","addListener","callback","id","String","removeListener","_stopListeningForNativeValueUpdates","removeAllListeners","_this2","__nativeAnimatedValueListener","startListeningToAnimatedNodeValue","nativeEventEmitter","data","tag","remove","stopListeningToAnimatedNodeValue","stopTracking","resetAnimation","interpolate","config","animate","animation","_this3","handle","__isInteraction","createInteractionHandle","previousAnimation","start","result","clearInteractionHandle","_tracking","track","tracking","flush","_key","__getNativeConfig","type","_default","module"],"mappings":"AAAA;;;;;;;;;AASA;;;;;;;;AAEAA,OAAO,CAACC,UAAR,GAAqB,IAArB;AACAD,OAAO,CAACE,OAAR,GAAkB,KAAK,CAAvB;;AAEA,IAAIC,sBAAsB,GAAGC,sBAAsB,CAACC,OAAO,CAAC,yBAAD,CAAR,CAAnD;;AAEA,IAAIC,aAAa,GAAGF,sBAAsB,CAACC,OAAO,CAAC,gBAAD,CAAR,CAA1C;;AAEA,IAAIE,sBAAsB,GAAGH,sBAAsB,CAACC,OAAO,CAAC,wBAAD,CAAR,CAAnD;;AAEA,IAAIG,mBAAmB,GAAGJ,sBAAsB,CAACC,OAAO,CAAC,wCAAD,CAAR,CAAhD;;AAEA,IAAII,qBAAqB,GAAGL,sBAAsB,CAACC,OAAO,CAAC,yBAAD,CAAR,CAAlD;;AAEA,SAASD,sBAAT,CAAgCM,GAAhC,EAAqC;AAAE,SAAOA,GAAG,IAAIA,GAAG,CAACT,UAAX,GAAwBS,GAAxB,GAA8B;AAAER,IAAAA,OAAO,EAAEQ;AAAX,GAArC;AAAwD;;AAE/F,SAASC,cAAT,CAAwBC,QAAxB,EAAkCC,UAAlC,EAA8C;AAAED,EAAAA,QAAQ,CAACE,SAAT,GAAqB,eAAcD,UAAU,CAACC,SAAzB,CAArB;AAA0DF,EAAAA,QAAQ,CAACE,SAAT,CAAmBC,WAAnB,GAAiCH,QAAjC;AAA2CA,EAAAA,QAAQ,CAACI,SAAT,GAAqBH,UAArB;AAAkC;;AAEvL,IAAII,iBAAiB,GAAGR,qBAAqB,CAACP,OAAtB,CAA8BgB,GAAtD;AACA,IAAIC,SAAS,GAAG,CAAhB;AACA;;;;;;;;;;;;;;;;;;;;;;;AAuBA,SAASC,MAAT,CAAgBC,QAAhB,EAA0B;AACxB,MAAIC,cAAc,GAAG,UAArB;;AAEA,WAASC,kBAAT,CAA4BC,IAA5B,EAAkC;AAChC,QAAI,OAAOA,IAAI,CAACC,MAAZ,KAAuB,UAA3B,EAAuC;AACrCH,MAAAA,cAAc,CAACI,GAAf,CAAmBF,IAAnB;AACD,KAFD,MAEO;AACLA,MAAAA,IAAI,CAACG,aAAL,GAAqBC,OAArB,CAA6BL,kBAA7B;AACD;AACF;;AAEDA,EAAAA,kBAAkB,CAACF,QAAD,CAAlB;AACAC,EAAAA,cAAc,CAACM,OAAf,CAAuB,UAAUC,aAAV,EAAyB;AAC9C,WAAOA,aAAa,CAACJ,MAAd,EAAP;AACD,GAFD;AAGD;AACD;;;;;;;;;;AAUA,IAAIK,aAAa;AACjB;AACA,UAAUC,qBAAV,EAAiC;AAC/BpB,EAAAA,cAAc,CAACmB,aAAD,EAAgBC,qBAAhB,CAAd;;AAEA,WAASD,aAAT,CAAuBE,KAAvB,EAA8B;AAC5B,QAAIC,KAAJ;;AAEAA,IAAAA,KAAK,GAAGF,qBAAqB,CAACG,IAAtB,CAA2B,IAA3B,KAAoC,IAA5C;AACAD,IAAAA,KAAK,CAACE,cAAN,GAAuBF,KAAK,CAACG,MAAN,GAAeJ,KAAtC;AACAC,IAAAA,KAAK,CAACI,OAAN,GAAgB,CAAhB;AACAJ,IAAAA,KAAK,CAACK,UAAN,GAAmB,IAAnB;AACAL,IAAAA,KAAK,CAACM,UAAN,GAAmB,EAAnB;AACA,WAAON,KAAP;AACD;;AAED,MAAIO,MAAM,GAAGV,aAAa,CAAChB,SAA3B;;AAEA0B,EAAAA,MAAM,CAACC,QAAP,GAAkB,SAASA,QAAT,GAAoB;AACpC,SAAKC,aAAL;;AAEAX,IAAAA,qBAAqB,CAACjB,SAAtB,CAAgC2B,QAAhC,CAAyCP,IAAzC,CAA8C,IAA9C;AACD,GAJD;;AAMAM,EAAAA,MAAM,CAACG,UAAP,GAAoB,SAASA,UAAT,GAAsB;AACxC,WAAO,KAAKP,MAAL,GAAc,KAAKC,OAA1B;AACD,GAFD;;AAIAG,EAAAA,MAAM,CAACI,YAAP,GAAsB,SAASA,YAAT,GAAwB;AAC5Cb,IAAAA,qBAAqB,CAACjB,SAAtB,CAAgC8B,YAAhC,CAA6CV,IAA7C,CAAkD,IAAlD;;AAEA,QAAI,aAAY,KAAKK,UAAjB,EAA6BM,MAAjC,EAAyC;AACvC,WAAKC,mCAAL;AACD;AACF;AACD;;;;;;AAPA;;AAeAN,EAAAA,MAAM,CAACO,QAAP,GAAkB,SAASA,QAAT,CAAkBf,KAAlB,EAAyB;AACzC,QAAI,KAAKM,UAAT,EAAqB;AACnB,WAAKA,UAAL,CAAgBU,IAAhB;;AAEA,WAAKV,UAAL,GAAkB,IAAlB;AACD;;AAED,SAAKW,YAAL,CAAkBjB,KAAlB,EAAyB,CAAC,KAAKkB;AAC/B;AADA;;AAIA,QAAI,KAAKA,UAAT,EAAqB;AACnBjC,MAAAA,iBAAiB,CAACkC,oBAAlB,CAAuC,KAAKC,cAAL,EAAvC,EAA8DpB,KAA9D;AACD;AACF;AACD;;;;;;;AAfA;;AAwBAQ,EAAAA,MAAM,CAACa,SAAP,GAAmB,SAASA,SAAT,CAAmBC,MAAnB,EAA2B;AAC5C,SAAKjB,OAAL,GAAeiB,MAAf;;AAEA,QAAI,KAAKJ,UAAT,EAAqB;AACnBjC,MAAAA,iBAAiB,CAACsC,qBAAlB,CAAwC,KAAKH,cAAL,EAAxC,EAA+DE,MAA/D;AACD;AACF;AACD;;;;;;AAPA;;AAeAd,EAAAA,MAAM,CAACgB,aAAP,GAAuB,SAASA,aAAT,GAAyB;AAC9C,SAAKpB,MAAL,IAAe,KAAKC,OAApB;AACA,SAAKA,OAAL,GAAe,CAAf;;AAEA,QAAI,KAAKa,UAAT,EAAqB;AACnBjC,MAAAA,iBAAiB,CAACwC,yBAAlB,CAA4C,KAAKL,cAAL,EAA5C;AACD;AACF;AACD;;;;;;AARA;;AAgBAZ,EAAAA,MAAM,CAACkB,aAAP,GAAuB,SAASA,aAAT,GAAyB;AAC9C,SAAKrB,OAAL,IAAgB,KAAKD,MAArB;AACA,SAAKA,MAAL,GAAc,CAAd;;AAEA,QAAI,KAAKc,UAAT,EAAqB;AACnBjC,MAAAA,iBAAiB,CAAC0C,yBAAlB,CAA4C,KAAKP,cAAL,EAA5C;AACD;AACF;AACD;;;;;;;AARA;;AAiBAZ,EAAAA,MAAM,CAACoB,WAAP,GAAqB,SAASA,WAAT,CAAqBC,QAArB,EAA+B;AAClD,QAAIC,EAAE,GAAGC,MAAM,CAAC5C,SAAS,EAAV,CAAf;AACA,SAAKoB,UAAL,CAAgBuB,EAAhB,IAAsBD,QAAtB;;AAEA,QAAI,KAAKX,UAAT,EAAqB;AACnB,WAAKJ,mCAAL;AACD;;AAED,WAAOgB,EAAP;AACD;AACD;;;;;;AAVA;;AAkBAtB,EAAAA,MAAM,CAACwB,cAAP,GAAwB,SAASA,cAAT,CAAwBF,EAAxB,EAA4B;AAClD,WAAO,KAAKvB,UAAL,CAAgBuB,EAAhB,CAAP;;AAEA,QAAI,KAAKZ,UAAL,IAAmB,aAAY,KAAKX,UAAjB,EAA6BM,MAA7B,KAAwC,CAA/D,EAAkE;AAChE,WAAKoB,mCAAL;AACD;AACF;AACD;;;;;AAPA;;AAcAzB,EAAAA,MAAM,CAAC0B,kBAAP,GAA4B,SAASA,kBAAT,GAA8B;AACxD,SAAK3B,UAAL,GAAkB,EAAlB;;AAEA,QAAI,KAAKW,UAAT,EAAqB;AACnB,WAAKe,mCAAL;AACD;AACF,GAND;;AAQAzB,EAAAA,MAAM,CAACM,mCAAP,GAA6C,SAASA,mCAAT,GAA+C;AAC1F,QAAIqB,MAAM,GAAG,IAAb;;AAEA,QAAI,KAAKC,6BAAT,EAAwC;AACtC;AACD;;AAEDnD,IAAAA,iBAAiB,CAACoD,iCAAlB,CAAoD,KAAKjB,cAAL,EAApD;AACA,SAAKgB,6BAAL,GAAqC3D,qBAAqB,CAACP,OAAtB,CAA8BoE,kBAA9B,CAAiDV,WAAjD,CAA6D,uBAA7D,EAAsF,UAAUW,IAAV,EAAgB;AACzI,UAAIA,IAAI,CAACC,GAAL,KAAaL,MAAM,CAACf,cAAP,EAAjB,EAA0C;AACxC;AACD;;AAEDe,MAAAA,MAAM,CAAClB,YAAP,CAAoBsB,IAAI,CAACvC,KAAzB,EAAgC;AAChC;AADA;AAGD,KARoC,CAArC;AASD,GAjBD;;AAmBAQ,EAAAA,MAAM,CAACyB,mCAAP,GAA6C,SAASA,mCAAT,GAA+C;AAC1F,QAAI,CAAC,KAAKG,6BAAV,EAAyC;AACvC;AACD;;AAED,SAAKA,6BAAL,CAAmCK,MAAnC;;AAEA,SAAKL,6BAAL,GAAqC,IAArC;AACAnD,IAAAA,iBAAiB,CAACyD,gCAAlB,CAAmD,KAAKtB,cAAL,EAAnD;AACD;AACD;;;;;;;AAVA;;AAmBAZ,EAAAA,MAAM,CAACE,aAAP,GAAuB,SAASA,aAAT,CAAuBmB,QAAvB,EAAiC;AACtD,SAAKc,YAAL;AACA,SAAKrC,UAAL,IAAmB,KAAKA,UAAL,CAAgBU,IAAhB,EAAnB;AACA,SAAKV,UAAL,GAAkB,IAAlB;AACAuB,IAAAA,QAAQ,IAAIA,QAAQ,CAAC,KAAKlB,UAAL,EAAD,CAApB;AACD;AACD;;;;;AANA;;AAaAH,EAAAA,MAAM,CAACoC,cAAP,GAAwB,SAASA,cAAT,CAAwBf,QAAxB,EAAkC;AACxD,SAAKnB,aAAL,CAAmBmB,QAAnB;AACA,SAAKzB,MAAL,GAAc,KAAKD,cAAnB;AACD;AACD;;;;AAJA;;AAUAK,EAAAA,MAAM,CAACqC,WAAP,GAAqB,SAASA,WAAT,CAAqBC,MAArB,EAA6B;AAChD,WAAO,IAAI3E,sBAAsB,CAACD,OAA3B,CAAmC,IAAnC,EAAyC4E,MAAzC,CAAP;AACD;AACD;;;;;;AAHA;;AAWAtC,EAAAA,MAAM,CAACuC,OAAP,GAAiB,SAASA,OAAT,CAAiBC,SAAjB,EAA4BnB,QAA5B,EAAsC;AACrD,QAAIoB,MAAM,GAAG,IAAb;;AAEA,QAAIC,MAAM,GAAG,IAAb;;AAEA,QAAIF,SAAS,CAACG,eAAd,EAA+B;AAC7BD,MAAAA,MAAM,GAAG1E,mBAAmB,CAACN,OAApB,CAA4BkF,uBAA5B,EAAT;AACD;;AAED,QAAIC,iBAAiB,GAAG,KAAK/C,UAA7B;AACA,SAAKA,UAAL,IAAmB,KAAKA,UAAL,CAAgBU,IAAhB,EAAnB;AACA,SAAKV,UAAL,GAAkB0C,SAAlB;AACAA,IAAAA,SAAS,CAACM,KAAV,CAAgB,KAAKlD,MAArB,EAA6B,UAAUJ,KAAV,EAAiB;AAC5C;AACA;AACAiD,MAAAA,MAAM,CAAChC,YAAP,CAAoBjB,KAApB,EAA2B;AAC3B;AADA;AAGD,KAND,EAMG,UAAUuD,MAAV,EAAkB;AACnBN,MAAAA,MAAM,CAAC3C,UAAP,GAAoB,IAApB;;AAEA,UAAI4C,MAAM,KAAK,IAAf,EAAqB;AACnB1E,QAAAA,mBAAmB,CAACN,OAApB,CAA4BsF,sBAA5B,CAAmDN,MAAnD;AACD;;AAEDrB,MAAAA,QAAQ,IAAIA,QAAQ,CAAC0B,MAAD,CAApB;AACD,KAdD,EAcGF,iBAdH,EAcsB,IAdtB;AAeD;AACD;;;AA5BA;;AAiCA7C,EAAAA,MAAM,CAACmC,YAAP,GAAsB,SAASA,YAAT,GAAwB;AAC5C,SAAKc,SAAL,IAAkB,KAAKA,SAAL,CAAehD,QAAf,EAAlB;AACA,SAAKgD,SAAL,GAAiB,IAAjB;AACD;AACD;;;AAJA;;AASAjD,EAAAA,MAAM,CAACkD,KAAP,GAAe,SAASA,KAAT,CAAeC,QAAf,EAAyB;AACtC,SAAKhB,YAAL;AACA,SAAKc,SAAL,GAAiBE,QAAjB;AACD,GAHD;;AAKAnD,EAAAA,MAAM,CAACS,YAAP,GAAsB,SAASA,YAAT,CAAsBjB,KAAtB,EAA6B4D,KAA7B,EAAoC;AACxD,SAAKxD,MAAL,GAAcJ,KAAd;;AAEA,QAAI4D,KAAJ,EAAW;AACTxE,MAAAA,MAAM,CAAC,IAAD,CAAN;AACD;;AAED,SAAK,IAAIyE,IAAT,IAAiB,KAAKtD,UAAtB,EAAkC;AAChC,WAAKA,UAAL,CAAgBsD,IAAhB,EAAsB;AACpB7D,QAAAA,KAAK,EAAE,KAAKW,UAAL;AADa,OAAtB;AAGD;AACF,GAZD;;AAcAH,EAAAA,MAAM,CAACsD,iBAAP,GAA2B,SAASA,iBAAT,GAA6B;AACtD,WAAO;AACLC,MAAAA,IAAI,EAAE,OADD;AAEL/D,MAAAA,KAAK,EAAE,KAAKI,MAFP;AAGLkB,MAAAA,MAAM,EAAE,KAAKjB;AAHR,KAAP;AAKD,GAND;;AAQA,SAAOP,aAAP;AACD,CAvSD,CAuSEvB,sBAAsB,CAACL,OAvSzB,CAFA;;AA2SA,IAAI8F,QAAQ,GAAGlE,aAAf;AACA9B,OAAO,CAACE,OAAR,GAAkB8F,QAAlB;AACAC,MAAM,CAACjG,OAAP,GAAiBA,OAAO,CAACE,OAAzB","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n'use strict';\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _AnimatedInterpolation = _interopRequireDefault(require(\"./AnimatedInterpolation\"));\n\nvar _AnimatedNode = _interopRequireDefault(require(\"./AnimatedNode\"));\n\nvar _AnimatedWithChildren2 = _interopRequireDefault(require(\"./AnimatedWithChildren\"));\n\nvar _InteractionManager = _interopRequireDefault(require(\"../../../../exports/InteractionManager\"));\n\nvar _NativeAnimatedHelper = _interopRequireDefault(require(\"../NativeAnimatedHelper\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\nvar NativeAnimatedAPI = _NativeAnimatedHelper.default.API;\nvar _uniqueId = 1;\n/**\n * Animated works by building a directed acyclic graph of dependencies\n * transparently when you render your Animated components.\n *\n *               new Animated.Value(0)\n *     .interpolate()        .interpolate()    new Animated.Value(1)\n *         opacity               translateY      scale\n *          style                         transform\n *         View#234                         style\n *                                         View#123\n *\n * A) Top Down phase\n * When an Animated.Value is updated, we recursively go down through this\n * graph in order to find leaf nodes: the views that we flag as needing\n * an update.\n *\n * B) Bottom Up phase\n * When a view is flagged as needing an update, we recursively go back up\n * in order to build the new value that it needs. The reason why we need\n * this two-phases process is to deal with composite props such as\n * transform which can receive values from multiple parents.\n */\n\nfunction _flush(rootNode) {\n  var animatedStyles = new Set();\n\n  function findAnimatedStyles(node) {\n    if (typeof node.update === 'function') {\n      animatedStyles.add(node);\n    } else {\n      node.__getChildren().forEach(findAnimatedStyles);\n    }\n  }\n\n  findAnimatedStyles(rootNode);\n  animatedStyles.forEach(function (animatedStyle) {\n    return animatedStyle.update();\n  });\n}\n/**\n * Standard value for driving animations.  One `Animated.Value` can drive\n * multiple properties in a synchronized fashion, but can only be driven by one\n * mechanism at a time.  Using a new mechanism (e.g. starting a new animation,\n * or calling `setValue`) will stop any previous ones.\n *\n * See http://facebook.github.io/react-native/docs/animatedvalue.html\n */\n\n\nvar AnimatedValue =\n/*#__PURE__*/\nfunction (_AnimatedWithChildren) {\n  _inheritsLoose(AnimatedValue, _AnimatedWithChildren);\n\n  function AnimatedValue(value) {\n    var _this;\n\n    _this = _AnimatedWithChildren.call(this) || this;\n    _this._startingValue = _this._value = value;\n    _this._offset = 0;\n    _this._animation = null;\n    _this._listeners = {};\n    return _this;\n  }\n\n  var _proto = AnimatedValue.prototype;\n\n  _proto.__detach = function __detach() {\n    this.stopAnimation();\n\n    _AnimatedWithChildren.prototype.__detach.call(this);\n  };\n\n  _proto.__getValue = function __getValue() {\n    return this._value + this._offset;\n  };\n\n  _proto.__makeNative = function __makeNative() {\n    _AnimatedWithChildren.prototype.__makeNative.call(this);\n\n    if (Object.keys(this._listeners).length) {\n      this._startListeningToNativeValueUpdates();\n    }\n  }\n  /**\n   * Directly set the value.  This will stop any animations running on the value\n   * and update all the bound properties.\n   *\n   * See http://facebook.github.io/react-native/docs/animatedvalue.html#setvalue\n   */\n  ;\n\n  _proto.setValue = function setValue(value) {\n    if (this._animation) {\n      this._animation.stop();\n\n      this._animation = null;\n    }\n\n    this._updateValue(value, !this.__isNative\n    /* don't perform a flush for natively driven values */\n    );\n\n    if (this.__isNative) {\n      NativeAnimatedAPI.setAnimatedNodeValue(this.__getNativeTag(), value);\n    }\n  }\n  /**\n   * Sets an offset that is applied on top of whatever value is set, whether via\n   * `setValue`, an animation, or `Animated.event`.  Useful for compensating\n   * things like the start of a pan gesture.\n   *\n   * See http://facebook.github.io/react-native/docs/animatedvalue.html#setoffset\n   */\n  ;\n\n  _proto.setOffset = function setOffset(offset) {\n    this._offset = offset;\n\n    if (this.__isNative) {\n      NativeAnimatedAPI.setAnimatedNodeOffset(this.__getNativeTag(), offset);\n    }\n  }\n  /**\n   * Merges the offset value into the base value and resets the offset to zero.\n   * The final output of the value is unchanged.\n   *\n   * See http://facebook.github.io/react-native/docs/animatedvalue.html#flattenoffset\n   */\n  ;\n\n  _proto.flattenOffset = function flattenOffset() {\n    this._value += this._offset;\n    this._offset = 0;\n\n    if (this.__isNative) {\n      NativeAnimatedAPI.flattenAnimatedNodeOffset(this.__getNativeTag());\n    }\n  }\n  /**\n   * Sets the offset value to the base value, and resets the base value to zero.\n   * The final output of the value is unchanged.\n   *\n   * See http://facebook.github.io/react-native/docs/animatedvalue.html#extractoffset\n   */\n  ;\n\n  _proto.extractOffset = function extractOffset() {\n    this._offset += this._value;\n    this._value = 0;\n\n    if (this.__isNative) {\n      NativeAnimatedAPI.extractAnimatedNodeOffset(this.__getNativeTag());\n    }\n  }\n  /**\n   * Adds an asynchronous listener to the value so you can observe updates from\n   * animations.  This is useful because there is no way to\n   * synchronously read the value because it might be driven natively.\n   *\n   * See http://facebook.github.io/react-native/docs/animatedvalue.html#addlistener\n   */\n  ;\n\n  _proto.addListener = function addListener(callback) {\n    var id = String(_uniqueId++);\n    this._listeners[id] = callback;\n\n    if (this.__isNative) {\n      this._startListeningToNativeValueUpdates();\n    }\n\n    return id;\n  }\n  /**\n   * Unregister a listener. The `id` param shall match the identifier\n   * previously returned by `addListener()`.\n   *\n   * See http://facebook.github.io/react-native/docs/animatedvalue.html#removelistener\n   */\n  ;\n\n  _proto.removeListener = function removeListener(id) {\n    delete this._listeners[id];\n\n    if (this.__isNative && Object.keys(this._listeners).length === 0) {\n      this._stopListeningForNativeValueUpdates();\n    }\n  }\n  /**\n   * Remove all registered listeners.\n   *\n   * See http://facebook.github.io/react-native/docs/animatedvalue.html#removealllisteners\n   */\n  ;\n\n  _proto.removeAllListeners = function removeAllListeners() {\n    this._listeners = {};\n\n    if (this.__isNative) {\n      this._stopListeningForNativeValueUpdates();\n    }\n  };\n\n  _proto._startListeningToNativeValueUpdates = function _startListeningToNativeValueUpdates() {\n    var _this2 = this;\n\n    if (this.__nativeAnimatedValueListener) {\n      return;\n    }\n\n    NativeAnimatedAPI.startListeningToAnimatedNodeValue(this.__getNativeTag());\n    this.__nativeAnimatedValueListener = _NativeAnimatedHelper.default.nativeEventEmitter.addListener('onAnimatedValueUpdate', function (data) {\n      if (data.tag !== _this2.__getNativeTag()) {\n        return;\n      }\n\n      _this2._updateValue(data.value, false\n      /* flush */\n      );\n    });\n  };\n\n  _proto._stopListeningForNativeValueUpdates = function _stopListeningForNativeValueUpdates() {\n    if (!this.__nativeAnimatedValueListener) {\n      return;\n    }\n\n    this.__nativeAnimatedValueListener.remove();\n\n    this.__nativeAnimatedValueListener = null;\n    NativeAnimatedAPI.stopListeningToAnimatedNodeValue(this.__getNativeTag());\n  }\n  /**\n   * Stops any running animation or tracking. `callback` is invoked with the\n   * final value after stopping the animation, which is useful for updating\n   * state to match the animation position with layout.\n   *\n   * See http://facebook.github.io/react-native/docs/animatedvalue.html#stopanimation\n   */\n  ;\n\n  _proto.stopAnimation = function stopAnimation(callback) {\n    this.stopTracking();\n    this._animation && this._animation.stop();\n    this._animation = null;\n    callback && callback(this.__getValue());\n  }\n  /**\n   * Stops any animation and resets the value to its original.\n   *\n   * See http://facebook.github.io/react-native/docs/animatedvalue.html#resetanimation\n   */\n  ;\n\n  _proto.resetAnimation = function resetAnimation(callback) {\n    this.stopAnimation(callback);\n    this._value = this._startingValue;\n  }\n  /**\n   * Interpolates the value before updating the property, e.g. mapping 0-1 to\n   * 0-10.\n   */\n  ;\n\n  _proto.interpolate = function interpolate(config) {\n    return new _AnimatedInterpolation.default(this, config);\n  }\n  /**\n   * Typically only used internally, but could be used by a custom Animation\n   * class.\n   *\n   * See http://facebook.github.io/react-native/docs/animatedvalue.html#animate\n   */\n  ;\n\n  _proto.animate = function animate(animation, callback) {\n    var _this3 = this;\n\n    var handle = null;\n\n    if (animation.__isInteraction) {\n      handle = _InteractionManager.default.createInteractionHandle();\n    }\n\n    var previousAnimation = this._animation;\n    this._animation && this._animation.stop();\n    this._animation = animation;\n    animation.start(this._value, function (value) {\n      // Natively driven animations will never call into that callback, therefore we can always\n      // pass flush = true to allow the updated value to propagate to native with setNativeProps\n      _this3._updateValue(value, true\n      /* flush */\n      );\n    }, function (result) {\n      _this3._animation = null;\n\n      if (handle !== null) {\n        _InteractionManager.default.clearInteractionHandle(handle);\n      }\n\n      callback && callback(result);\n    }, previousAnimation, this);\n  }\n  /**\n   * Typically only used internally.\n   */\n  ;\n\n  _proto.stopTracking = function stopTracking() {\n    this._tracking && this._tracking.__detach();\n    this._tracking = null;\n  }\n  /**\n   * Typically only used internally.\n   */\n  ;\n\n  _proto.track = function track(tracking) {\n    this.stopTracking();\n    this._tracking = tracking;\n  };\n\n  _proto._updateValue = function _updateValue(value, flush) {\n    this._value = value;\n\n    if (flush) {\n      _flush(this);\n    }\n\n    for (var _key in this._listeners) {\n      this._listeners[_key]({\n        value: this.__getValue()\n      });\n    }\n  };\n\n  _proto.__getNativeConfig = function __getNativeConfig() {\n    return {\n      type: 'value',\n      value: this._value,\n      offset: this._offset\n    };\n  };\n\n  return AnimatedValue;\n}(_AnimatedWithChildren2.default);\n\nvar _default = AnimatedValue;\nexports.default = _default;\nmodule.exports = exports.default;"]},"metadata":{},"sourceType":"script"}