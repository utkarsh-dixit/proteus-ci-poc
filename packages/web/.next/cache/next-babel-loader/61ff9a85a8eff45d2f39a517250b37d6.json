{"ast":null,"code":"import { requestAPICall } from \"../util/network\";\nimport { changeNetworkStatus } from \"./miscActions\";\nexport const ADD_PRODUCTS_IN_CATEGORIES = \"ADD_PRODUCTS_IN_CATEGORIES\";\nexport const ADD_PRODUCTS_IN_CATEGORIES_IN_BATCH = \"ADD_PRODUCTS_IN_CATEGORIES_IN_BATCH\";\nexport const getProductsFromCategory = (category_id, offset = 0, limit = 5) => async dispatch => {\n  try {\n    const result = await requestAPICall(\"api/v1/product/listing/list-by/category?categoryId=\".concat(category_id, \"&offset=\").concat(offset, \"&limit=\").concat(limit), {}, changeNetworkStatus, dispatch);\n    return dispatch({\n      type: ADD_PRODUCTS_IN_CATEGORIES,\n      products: result.data.items,\n      category_id\n    });\n  } catch (error) {\n    return false;\n  }\n};\nexport const getProductsFromCategoryInBatch = (category_ids, offset = 0, limit = 5) => async dispatch => {\n  try {\n    const out = {};\n\n    for (let id of category_ids) {\n      try {\n        const result = await requestAPICall(\"api/v1/product/listing/list-by/category?categoryId=\".concat(id, \"&offset=\").concat(offset, \"&limit=\").concat(limit), {}, changeNetworkStatus, dispatch);\n        out[id] = [];\n        out[id] = [...out[id], ...result.data.items];\n      } catch (error) {\n        console.error(error);\n      } // console.log(result);\n\n    }\n\n    return dispatch({\n      type: ADD_PRODUCTS_IN_CATEGORIES_IN_BATCH,\n      products: out\n    });\n  } catch (error) {\n    return false;\n  }\n};","map":{"version":3,"sources":["/Users/utkarsh/Desktop/headout/ReactNativeOne/node_modules/components/src/actions/product.js"],"names":["requestAPICall","changeNetworkStatus","ADD_PRODUCTS_IN_CATEGORIES","ADD_PRODUCTS_IN_CATEGORIES_IN_BATCH","getProductsFromCategory","category_id","offset","limit","dispatch","result","type","products","data","items","error","getProductsFromCategoryInBatch","category_ids","out","id","console"],"mappings":"AAAA,SAASA,cAAT,QAA+B,iBAA/B;AACA,SAASC,mBAAT,QAAoC,eAApC;AAEA,OAAO,MAAMC,0BAA0B,GAAG,4BAAnC;AACP,OAAO,MAAMC,mCAAmC,GAAG,qCAA5C;AAEP,OAAO,MAAMC,uBAAuB,GAAG,CAACC,WAAD,EAAcC,MAAM,GAAG,CAAvB,EAA0BC,KAAK,GAAG,CAAlC,KAAwC,MAAOC,QAAP,IAAoB;AAC/F,MAAI;AACA,UAAMC,MAAM,GAAG,MAAMT,cAAc,8DAAuDK,WAAvD,qBAA6EC,MAA7E,oBAA6FC,KAA7F,GAAsG,EAAtG,EAA0GN,mBAA1G,EAA+HO,QAA/H,CAAnC;AAEA,WAAOA,QAAQ,CAAC;AAAEE,MAAAA,IAAI,EAAER,0BAAR;AAAoCS,MAAAA,QAAQ,EAAEF,MAAM,CAACG,IAAP,CAAYC,KAA1D;AAAiER,MAAAA;AAAjE,KAAD,CAAf;AACH,GAJD,CAIE,OAAOS,KAAP,EAAc;AACZ,WAAO,KAAP;AACH;AACJ,CARM;AAUP,OAAO,MAAMC,8BAA8B,GAAG,CAACC,YAAD,EAAeV,MAAM,GAAG,CAAxB,EAA2BC,KAAK,GAAG,CAAnC,KAAyC,MAAOC,QAAP,IAAoB;AACvG,MAAI;AACA,UAAMS,GAAG,GAAG,EAAZ;;AACA,SAAI,IAAIC,EAAR,IAAcF,YAAd,EAA2B;AACvB,UAAG;AACC,cAAMP,MAAM,GAAG,MAAMT,cAAc,8DAAuDkB,EAAvD,qBAAoEZ,MAApE,oBAAoFC,KAApF,GAA6F,EAA7F,EAAiGN,mBAAjG,EAAsHO,QAAtH,CAAnC;AACAS,QAAAA,GAAG,CAACC,EAAD,CAAH,GAAU,EAAV;AACAD,QAAAA,GAAG,CAACC,EAAD,CAAH,GAAU,CACN,GAAGD,GAAG,CAACC,EAAD,CADA,EAEN,GAAGT,MAAM,CAACG,IAAP,CAAYC,KAFT,CAAV;AAIH,OAPD,CAOE,OAAMC,KAAN,EAAa;AACXK,QAAAA,OAAO,CAACL,KAAR,CAAcA,KAAd;AACH,OAVsB,CAWvB;;AACH;;AAED,WAAON,QAAQ,CAAC;AAAEE,MAAAA,IAAI,EAAEP,mCAAR;AAA6CQ,MAAAA,QAAQ,EAAEM;AAAvD,KAAD,CAAf;AACH,GAjBD,CAiBE,OAAOH,KAAP,EAAc;AAEZ,WAAO,KAAP;AACH;AACJ,CAtBM","sourcesContent":["import { requestAPICall } from \"../util/network\";\nimport { changeNetworkStatus } from \"./miscActions\";\n\nexport const ADD_PRODUCTS_IN_CATEGORIES = \"ADD_PRODUCTS_IN_CATEGORIES\";\nexport const ADD_PRODUCTS_IN_CATEGORIES_IN_BATCH = \"ADD_PRODUCTS_IN_CATEGORIES_IN_BATCH\";\n\nexport const getProductsFromCategory = (category_id, offset = 0, limit = 5) => async (dispatch) => {\n    try {\n        const result = await requestAPICall(`api/v1/product/listing/list-by/category?categoryId=${category_id}&offset=${offset}&limit=${limit}`, {}, changeNetworkStatus, dispatch);\n\n        return dispatch({ type: ADD_PRODUCTS_IN_CATEGORIES, products: result.data.items, category_id });\n    } catch (error) {\n        return false;\n    }\n};\n\nexport const getProductsFromCategoryInBatch = (category_ids, offset = 0, limit = 5) => async (dispatch) => {\n    try {\n        const out = {};\n        for(let id of category_ids){\n            try{\n                const result = await requestAPICall(`api/v1/product/listing/list-by/category?categoryId=${id}&offset=${offset}&limit=${limit}`, {}, changeNetworkStatus, dispatch);\n                out[id] = [];\n                out[id] = [\n                    ...out[id],\n                    ...result.data.items\n                ];\n            } catch(error) {\n                console.error(error);\n            }\n            // console.log(result);\n        }\n\n        return dispatch({ type: ADD_PRODUCTS_IN_CATEGORIES_IN_BATCH, products: out });\n    } catch (error) {\n\n        return false;\n    }\n};\n"]},"metadata":{},"sourceType":"module"}