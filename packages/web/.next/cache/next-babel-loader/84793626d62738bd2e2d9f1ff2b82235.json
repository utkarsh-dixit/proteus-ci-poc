{"ast":null,"code":"\"use strict\";\n\nvar _Promise = require(\"@babel/runtime-corejs2/core-js/promise\");\n\nexports.__esModule = true;\nexports.default = void 0;\n/**\n * Copyright (c) Nicolas Gallagher.\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\nvar clipboardAvailable;\n\nvar Clipboard =\n/*#__PURE__*/\nfunction () {\n  function Clipboard() {}\n\n  Clipboard.isAvailable = function isAvailable() {\n    if (clipboardAvailable === undefined) {\n      clipboardAvailable = typeof document.queryCommandSupported === 'function' && document.queryCommandSupported('copy');\n    }\n\n    return clipboardAvailable;\n  };\n\n  Clipboard.getString = function getString() {\n    return _Promise.resolve('');\n  };\n\n  Clipboard.setString = function setString(text) {\n    var success = false;\n    var body = document.body;\n\n    if (body) {\n      // add the text to a hidden node\n      var node = document.createElement('span');\n      node.textContent = text;\n      node.style.opacity = '0';\n      node.style.position = 'absolute';\n      node.style.whiteSpace = 'pre-wrap';\n      body.appendChild(node); // select the text\n\n      var selection = window.getSelection();\n      selection.removeAllRanges();\n      var range = document.createRange();\n      range.selectNodeContents(node);\n      selection.addRange(range); // attempt to copy\n\n      try {\n        document.execCommand('copy');\n        success = true;\n      } catch (e) {} // remove selection and node\n\n\n      selection.removeAllRanges();\n      body.removeChild(node);\n    }\n\n    return success;\n  };\n\n  return Clipboard;\n}();\n\nexports.default = Clipboard;\nmodule.exports = exports.default;","map":{"version":3,"sources":["/Users/utkarsh/Desktop/headout/ReactNativeOne/node_modules/react-native-web/dist/cjs/exports/Clipboard/index.js"],"names":["exports","__esModule","default","clipboardAvailable","Clipboard","isAvailable","undefined","document","queryCommandSupported","getString","resolve","setString","text","success","body","node","createElement","textContent","style","opacity","position","whiteSpace","appendChild","selection","window","getSelection","removeAllRanges","range","createRange","selectNodeContents","addRange","execCommand","e","removeChild","module"],"mappings":"AAAA;;;;AAEAA,OAAO,CAACC,UAAR,GAAqB,IAArB;AACAD,OAAO,CAACE,OAAR,GAAkB,KAAK,CAAvB;AAEA;;;;;;;;;;AASA,IAAIC,kBAAJ;;AAEA,IAAIC,SAAS;AACb;AACA,YAAY;AACV,WAASA,SAAT,GAAqB,CAAE;;AAEvBA,EAAAA,SAAS,CAACC,WAAV,GAAwB,SAASA,WAAT,GAAuB;AAC7C,QAAIF,kBAAkB,KAAKG,SAA3B,EAAsC;AACpCH,MAAAA,kBAAkB,GAAG,OAAOI,QAAQ,CAACC,qBAAhB,KAA0C,UAA1C,IAAwDD,QAAQ,CAACC,qBAAT,CAA+B,MAA/B,CAA7E;AACD;;AAED,WAAOL,kBAAP;AACD,GAND;;AAQAC,EAAAA,SAAS,CAACK,SAAV,GAAsB,SAASA,SAAT,GAAqB;AACzC,WAAO,SAAQC,OAAR,CAAgB,EAAhB,CAAP;AACD,GAFD;;AAIAN,EAAAA,SAAS,CAACO,SAAV,GAAsB,SAASA,SAAT,CAAmBC,IAAnB,EAAyB;AAC7C,QAAIC,OAAO,GAAG,KAAd;AACA,QAAIC,IAAI,GAAGP,QAAQ,CAACO,IAApB;;AAEA,QAAIA,IAAJ,EAAU;AACR;AACA,UAAIC,IAAI,GAAGR,QAAQ,CAACS,aAAT,CAAuB,MAAvB,CAAX;AACAD,MAAAA,IAAI,CAACE,WAAL,GAAmBL,IAAnB;AACAG,MAAAA,IAAI,CAACG,KAAL,CAAWC,OAAX,GAAqB,GAArB;AACAJ,MAAAA,IAAI,CAACG,KAAL,CAAWE,QAAX,GAAsB,UAAtB;AACAL,MAAAA,IAAI,CAACG,KAAL,CAAWG,UAAX,GAAwB,UAAxB;AACAP,MAAAA,IAAI,CAACQ,WAAL,CAAiBP,IAAjB,EAPQ,CAOgB;;AAExB,UAAIQ,SAAS,GAAGC,MAAM,CAACC,YAAP,EAAhB;AACAF,MAAAA,SAAS,CAACG,eAAV;AACA,UAAIC,KAAK,GAAGpB,QAAQ,CAACqB,WAAT,EAAZ;AACAD,MAAAA,KAAK,CAACE,kBAAN,CAAyBd,IAAzB;AACAQ,MAAAA,SAAS,CAACO,QAAV,CAAmBH,KAAnB,EAbQ,CAamB;;AAE3B,UAAI;AACFpB,QAAAA,QAAQ,CAACwB,WAAT,CAAqB,MAArB;AACAlB,QAAAA,OAAO,GAAG,IAAV;AACD,OAHD,CAGE,OAAOmB,CAAP,EAAU,CAAE,CAlBN,CAkBO;;;AAGfT,MAAAA,SAAS,CAACG,eAAV;AACAZ,MAAAA,IAAI,CAACmB,WAAL,CAAiBlB,IAAjB;AACD;;AAED,WAAOF,OAAP;AACD,GA9BD;;AAgCA,SAAOT,SAAP;AACD,CAhDD,EAFA;;AAoDAJ,OAAO,CAACE,OAAR,GAAkBE,SAAlB;AACA8B,MAAM,CAAClC,OAAP,GAAiBA,OAAO,CAACE,OAAzB","sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\n/**\n * Copyright (c) Nicolas Gallagher.\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nvar clipboardAvailable;\n\nvar Clipboard =\n/*#__PURE__*/\nfunction () {\n  function Clipboard() {}\n\n  Clipboard.isAvailable = function isAvailable() {\n    if (clipboardAvailable === undefined) {\n      clipboardAvailable = typeof document.queryCommandSupported === 'function' && document.queryCommandSupported('copy');\n    }\n\n    return clipboardAvailable;\n  };\n\n  Clipboard.getString = function getString() {\n    return Promise.resolve('');\n  };\n\n  Clipboard.setString = function setString(text) {\n    var success = false;\n    var body = document.body;\n\n    if (body) {\n      // add the text to a hidden node\n      var node = document.createElement('span');\n      node.textContent = text;\n      node.style.opacity = '0';\n      node.style.position = 'absolute';\n      node.style.whiteSpace = 'pre-wrap';\n      body.appendChild(node); // select the text\n\n      var selection = window.getSelection();\n      selection.removeAllRanges();\n      var range = document.createRange();\n      range.selectNodeContents(node);\n      selection.addRange(range); // attempt to copy\n\n      try {\n        document.execCommand('copy');\n        success = true;\n      } catch (e) {} // remove selection and node\n\n\n      selection.removeAllRanges();\n      body.removeChild(node);\n    }\n\n    return success;\n  };\n\n  return Clipboard;\n}();\n\nexports.default = Clipboard;\nmodule.exports = exports.default;"]},"metadata":{},"sourceType":"script"}