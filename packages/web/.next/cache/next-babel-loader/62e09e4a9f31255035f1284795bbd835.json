{"ast":null,"code":"/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n */\n'use strict';\n\nvar _Object$create = require(\"@babel/runtime-corejs2/core-js/object/create\");\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _EventEmitter2 = _interopRequireDefault(require(\"../emitter/EventEmitter\"));\n\nvar _EventSubscriptionVendor = _interopRequireDefault(require(\"../emitter/EventSubscriptionVendor\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = _Object$create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nvar __DEV__ = true;\n\nfunction checkNativeEventModule(eventType) {\n  if (eventType) {\n    if (eventType === 'appStateDidChange' || eventType === 'memoryWarning') {\n      throw new Error('`' + eventType + '` event should be registered via the AppState module');\n    }\n  }\n}\n/**\n * Deprecated - subclass NativeEventEmitter to create granular event modules instead of\n * adding all event listeners directly to RCTDeviceEventEmitter.\n */\n\n\nvar RCTDeviceEventEmitter =\n/*#__PURE__*/\nfunction (_EventEmitter) {\n  _inheritsLoose(RCTDeviceEventEmitter, _EventEmitter);\n\n  function RCTDeviceEventEmitter() {\n    var _this;\n\n    var sharedSubscriber = new _EventSubscriptionVendor.default();\n    _this = _EventEmitter.call(this, sharedSubscriber) || this;\n    _this.sharedSubscriber = sharedSubscriber;\n    return _this;\n  }\n\n  var _proto = RCTDeviceEventEmitter.prototype;\n\n  _proto.addListener = function addListener(eventType, listener, context) {\n    if (__DEV__) {\n      checkNativeEventModule(eventType);\n    }\n\n    return _EventEmitter.prototype.addListener.call(this, eventType, listener, context);\n  };\n\n  _proto.removeAllListeners = function removeAllListeners(eventType) {\n    if (__DEV__) {\n      checkNativeEventModule(eventType);\n    }\n\n    _EventEmitter.prototype.removeAllListeners.call(this, eventType);\n  };\n\n  _proto.removeSubscription = function removeSubscription(subscription) {\n    if (subscription.emitter !== this) {\n      subscription.emitter.removeSubscription(subscription);\n    } else {\n      _EventEmitter.prototype.removeSubscription.call(this, subscription);\n    }\n  };\n\n  return RCTDeviceEventEmitter;\n}(_EventEmitter2.default);\n\nvar _default = new RCTDeviceEventEmitter();\n\nexports.default = _default;\nmodule.exports = exports.default;","map":{"version":3,"sources":["/Users/utkarsh/Desktop/headout/ReactNativeOne/node_modules/react-native-web/dist/cjs/vendor/react-native/NativeEventEmitter/RCTDeviceEventEmitter.js"],"names":["exports","__esModule","default","_EventEmitter2","_interopRequireDefault","require","_EventSubscriptionVendor","obj","_inheritsLoose","subClass","superClass","prototype","constructor","__proto__","__DEV__","checkNativeEventModule","eventType","Error","RCTDeviceEventEmitter","_EventEmitter","_this","sharedSubscriber","call","_proto","addListener","listener","context","removeAllListeners","removeSubscription","subscription","emitter","_default","module"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n */\n'use strict';\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _EventEmitter2 = _interopRequireDefault(require(\"../emitter/EventEmitter\"));\n\nvar _EventSubscriptionVendor = _interopRequireDefault(require(\"../emitter/EventSubscriptionVendor\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\nvar __DEV__ = process.env.NODE_ENV !== 'production';\n\nfunction checkNativeEventModule(eventType) {\n  if (eventType) {\n    if (eventType === 'appStateDidChange' || eventType === 'memoryWarning') {\n      throw new Error('`' + eventType + '` event should be registered via the AppState module');\n    }\n  }\n}\n/**\n * Deprecated - subclass NativeEventEmitter to create granular event modules instead of\n * adding all event listeners directly to RCTDeviceEventEmitter.\n */\n\n\nvar RCTDeviceEventEmitter =\n/*#__PURE__*/\nfunction (_EventEmitter) {\n  _inheritsLoose(RCTDeviceEventEmitter, _EventEmitter);\n\n  function RCTDeviceEventEmitter() {\n    var _this;\n\n    var sharedSubscriber = new _EventSubscriptionVendor.default();\n    _this = _EventEmitter.call(this, sharedSubscriber) || this;\n    _this.sharedSubscriber = sharedSubscriber;\n    return _this;\n  }\n\n  var _proto = RCTDeviceEventEmitter.prototype;\n\n  _proto.addListener = function addListener(eventType, listener, context) {\n    if (__DEV__) {\n      checkNativeEventModule(eventType);\n    }\n\n    return _EventEmitter.prototype.addListener.call(this, eventType, listener, context);\n  };\n\n  _proto.removeAllListeners = function removeAllListeners(eventType) {\n    if (__DEV__) {\n      checkNativeEventModule(eventType);\n    }\n\n    _EventEmitter.prototype.removeAllListeners.call(this, eventType);\n  };\n\n  _proto.removeSubscription = function removeSubscription(subscription) {\n    if (subscription.emitter !== this) {\n      subscription.emitter.removeSubscription(subscription);\n    } else {\n      _EventEmitter.prototype.removeSubscription.call(this, subscription);\n    }\n  };\n\n  return RCTDeviceEventEmitter;\n}(_EventEmitter2.default);\n\nvar _default = new RCTDeviceEventEmitter();\n\nexports.default = _default;\nmodule.exports = exports.default;"]},"metadata":{},"sourceType":"script"}