{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = _Object$keys(object);\n\n  if (_Object$getOwnPropertySymbols) {\n    var symbols = _Object$getOwnPropertySymbols(object);\n\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return _Object$getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (_Object$getOwnPropertyDescriptors) {\n      _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nimport { CHANGE_NETWORK_TYPE } from \"../actions/miscActions\";\nexport function misc(state = {\n  network: true\n}, action) {\n  switch (action.type) {\n    case CHANGE_NETWORK_TYPE:\n      return _objectSpread({}, state, {\n        network: action.payload\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/utkarsh/Desktop/headout/ReactNativeOne/packages/components/src/reducers/miscReducer.js"],"names":["state","network","action","payload"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,SAAA,mBAAA,QAAA,wBAAA;AACA,OAAO,SAAA,IAAA,CAAcA,KAAK,GAAG;AAACC,EAAAA,OAAO,EAAE;AAAV,CAAtB,EAAA,MAAA,EAA+C;AAClD,UAAQC,MAAM,CAAd,IAAA;AACE,SAAA,mBAAA;AACA,aAAA,aAAA,CAAA,EAAA,EAAA,KAAA,EAAA;AAEED,QAAAA,OAAO,EAAEC,MAAM,CAACC;AAFlB,OAAA,CAAA;;AAIA;AACE,aAAA,KAAA;AAPJ;AASD","sourcesContent":["import {CHANGE_NETWORK_TYPE} from \"../actions/miscActions\";\nexport function misc(state = {network: true}, action) {\n    switch (action.type) {\n      case CHANGE_NETWORK_TYPE:\n      return {\n        ...state,\n        network: action.payload,\n      };\n      default:\n        return state;\n    }\n  }\n"]},"metadata":{},"sourceType":"module"}