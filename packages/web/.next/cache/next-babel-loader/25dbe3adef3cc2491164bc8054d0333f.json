{"ast":null,"code":"\"use strict\";\n\nvar _Object$assign = require(\"@babel/runtime-corejs2/core-js/object/assign\");\n\nvar _Object$keys = require(\"@babel/runtime-corejs2/core-js/object/keys\");\n\nvar _Object$defineProperty = require(\"@babel/runtime-corejs2/core-js/object/define-property\");\n\n_Object$defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar RecycleItemPool_1 = require(\"../utils/RecycleItemPool\");\n\nvar CustomError_1 = require(\"./exceptions/CustomError\");\n\nvar RecyclerListViewExceptions_1 = require(\"./exceptions/RecyclerListViewExceptions\");\n\nvar ViewabilityTracker_1 = require(\"./ViewabilityTracker\");\n\nvar ts_object_utils_1 = require(\"ts-object-utils\");\n\nvar TSCast_1 = require(\"../utils/TSCast\");\n\nvar VirtualRenderer =\n/** @class */\nfunction () {\n  function VirtualRenderer(renderStackChanged, scrollOnNextUpdate, fetchStableId, isRecyclingEnabled) {\n    var _this = this;\n\n    this._layoutProvider = TSCast_1.default.cast(null); //TSI\n\n    this._recyclePool = TSCast_1.default.cast(null); //TSI\n\n    this._layoutManager = null;\n    this._viewabilityTracker = null;\n\n    this._onVisibleItemsChanged = function (all, now, notNow) {\n      if (_this.onVisibleItemsChanged) {\n        _this.onVisibleItemsChanged(all, now, notNow);\n      }\n    };\n\n    this._onEngagedItemsChanged = function (all, now, notNow) {\n      var count = notNow.length;\n      var resolvedKey;\n      var disengagedIndex = 0;\n\n      if (_this._isRecyclingEnabled) {\n        for (var i = 0; i < count; i++) {\n          disengagedIndex = notNow[i];\n          delete _this._engagedIndexes[disengagedIndex];\n\n          if (_this._params && disengagedIndex < _this._params.itemCount) {\n            //All the items which are now not visible can go to the recycle pool, the pool only needs to maintain keys since\n            //react can link a view to a key automatically\n            resolvedKey = _this._stableIdToRenderKeyMap[_this._fetchStableId(disengagedIndex)];\n\n            if (!ts_object_utils_1.ObjectUtil.isNullOrUndefined(resolvedKey)) {\n              _this._recyclePool.putRecycledObject(_this._layoutProvider.getLayoutTypeForIndex(disengagedIndex), resolvedKey.key);\n            }\n          }\n        }\n      }\n\n      if (_this._updateRenderStack(now)) {\n        //Ask Recycler View to update itself\n        _this._renderStackChanged(_this._renderStack);\n      }\n    }; //Keeps track of items that need to be rendered in the next render cycle\n\n\n    this._renderStack = {};\n    this._fetchStableId = fetchStableId; //Keeps track of keys of all the currently rendered indexes, can eventually replace renderStack as well if no new use cases come up\n\n    this._stableIdToRenderKeyMap = {};\n    this._engagedIndexes = {};\n    this._renderStackChanged = renderStackChanged;\n    this._scrollOnNextUpdate = scrollOnNextUpdate;\n    this._dimensions = null;\n    this._params = null;\n    this._isRecyclingEnabled = isRecyclingEnabled;\n    this._isViewTrackerRunning = false;\n    this._markDirty = false; //Would be surprised if someone exceeds this\n\n    this._startKey = 0;\n    this.onVisibleItemsChanged = null;\n  }\n\n  VirtualRenderer.prototype.getLayoutDimension = function () {\n    if (this._layoutManager) {\n      return this._layoutManager.getContentDimension();\n    }\n\n    return {\n      height: 0,\n      width: 0\n    };\n  };\n\n  VirtualRenderer.prototype.updateOffset = function (offsetX, offsetY, correction, isActual) {\n    if (this._viewabilityTracker) {\n      var offset = this._params && this._params.isHorizontal ? offsetX : offsetY;\n\n      if (!this._isViewTrackerRunning) {\n        if (isActual) {\n          this._viewabilityTracker.setActualOffset(offset);\n        }\n\n        this.startViewabilityTracker();\n      }\n\n      this._viewabilityTracker.updateOffset(offset, correction, isActual);\n    }\n  };\n\n  VirtualRenderer.prototype.attachVisibleItemsListener = function (callback) {\n    this.onVisibleItemsChanged = callback;\n  };\n\n  VirtualRenderer.prototype.removeVisibleItemsListener = function () {\n    this.onVisibleItemsChanged = null;\n\n    if (this._viewabilityTracker) {\n      this._viewabilityTracker.onVisibleRowsChanged = null;\n    }\n  };\n\n  VirtualRenderer.prototype.getLayoutManager = function () {\n    return this._layoutManager;\n  };\n\n  VirtualRenderer.prototype.setParamsAndDimensions = function (params, dim) {\n    this._params = params;\n    this._dimensions = dim;\n  };\n\n  VirtualRenderer.prototype.setLayoutManager = function (layoutManager) {\n    this._layoutManager = layoutManager;\n\n    if (this._params) {\n      this._layoutManager.relayoutFromIndex(0, this._params.itemCount);\n    }\n  };\n\n  VirtualRenderer.prototype.setLayoutProvider = function (layoutProvider) {\n    this._layoutProvider = layoutProvider;\n  };\n\n  VirtualRenderer.prototype.getViewabilityTracker = function () {\n    return this._viewabilityTracker;\n  };\n\n  VirtualRenderer.prototype.refreshWithAnchor = function () {\n    if (this._viewabilityTracker) {\n      var firstVisibleIndex = this._viewabilityTracker.findFirstLogicallyVisibleIndex();\n\n      this._prepareViewabilityTracker();\n\n      var offset = 0;\n\n      if (this._layoutManager && this._params) {\n        var point = this._layoutManager.getOffsetForIndex(firstVisibleIndex);\n\n        this._scrollOnNextUpdate(point);\n\n        offset = this._params.isHorizontal ? point.x : point.y;\n      }\n\n      this._viewabilityTracker.forceRefreshWithOffset(offset);\n    }\n  };\n\n  VirtualRenderer.prototype.refresh = function () {\n    if (this._viewabilityTracker) {\n      this._prepareViewabilityTracker();\n\n      if (this._viewabilityTracker.forceRefresh()) {\n        if (this._params && this._params.isHorizontal) {\n          this._scrollOnNextUpdate({\n            x: this._viewabilityTracker.getLastActualOffset(),\n            y: 0\n          });\n        } else {\n          this._scrollOnNextUpdate({\n            x: 0,\n            y: this._viewabilityTracker.getLastActualOffset()\n          });\n        }\n      }\n    }\n  };\n\n  VirtualRenderer.prototype.getInitialOffset = function () {\n    var offset = {\n      x: 0,\n      y: 0\n    };\n\n    if (this._params) {\n      var initialRenderIndex = ts_object_utils_1.Default.value(this._params.initialRenderIndex, 0);\n\n      if (initialRenderIndex > 0 && this._layoutManager) {\n        offset = this._layoutManager.getOffsetForIndex(initialRenderIndex);\n        this._params.initialOffset = this._params.isHorizontal ? offset.x : offset.y;\n      } else {\n        if (this._params.isHorizontal) {\n          offset.x = ts_object_utils_1.Default.value(this._params.initialOffset, 0);\n          offset.y = 0;\n        } else {\n          offset.y = ts_object_utils_1.Default.value(this._params.initialOffset, 0);\n          offset.x = 0;\n        }\n      }\n    }\n\n    return offset;\n  };\n\n  VirtualRenderer.prototype.init = function () {\n    this.getInitialOffset();\n    this._recyclePool = new RecycleItemPool_1.default();\n\n    if (this._params) {\n      this._viewabilityTracker = new ViewabilityTracker_1.default(ts_object_utils_1.Default.value(this._params.renderAheadOffset, 0), ts_object_utils_1.Default.value(this._params.initialOffset, 0));\n    } else {\n      this._viewabilityTracker = new ViewabilityTracker_1.default(0, 0);\n    }\n\n    this._prepareViewabilityTracker();\n  };\n\n  VirtualRenderer.prototype.startViewabilityTracker = function () {\n    if (this._viewabilityTracker) {\n      this._isViewTrackerRunning = true;\n\n      this._viewabilityTracker.init();\n    }\n  };\n\n  VirtualRenderer.prototype.syncAndGetKey = function (index, overrideStableIdProvider, newRenderStack) {\n    var getStableId = overrideStableIdProvider ? overrideStableIdProvider : this._fetchStableId;\n    var renderStack = newRenderStack ? newRenderStack : this._renderStack;\n\n    var stableIdItem = this._stableIdToRenderKeyMap[getStableId(index)];\n\n    var key = stableIdItem ? stableIdItem.key : undefined;\n\n    if (ts_object_utils_1.ObjectUtil.isNullOrUndefined(key)) {\n      var type = this._layoutProvider.getLayoutTypeForIndex(index);\n\n      key = this._recyclePool.getRecycledObject(type);\n\n      if (!ts_object_utils_1.ObjectUtil.isNullOrUndefined(key)) {\n        var itemMeta = renderStack[key];\n\n        if (itemMeta) {\n          var oldIndex = itemMeta.dataIndex;\n          itemMeta.dataIndex = index;\n\n          if (!ts_object_utils_1.ObjectUtil.isNullOrUndefined(oldIndex) && oldIndex !== index) {\n            delete this._stableIdToRenderKeyMap[getStableId(oldIndex)];\n          }\n        } else {\n          renderStack[key] = {\n            dataIndex: index\n          };\n        }\n      } else {\n        key = getStableId(index);\n\n        if (renderStack[key]) {\n          //Probable collision, warn and avoid\n          //TODO: Disabled incorrectly triggering in some cases\n          //console.warn(\"Possible stableId collision @\", index); //tslint:disable-line\n          key = this._getCollisionAvoidingKey();\n        }\n\n        renderStack[key] = {\n          dataIndex: index\n        };\n      }\n\n      this._markDirty = true;\n      this._stableIdToRenderKeyMap[getStableId(index)] = {\n        key: key,\n        type: type\n      };\n    }\n\n    if (!ts_object_utils_1.ObjectUtil.isNullOrUndefined(this._engagedIndexes[index])) {\n      this._recyclePool.removeFromPool(key);\n    }\n\n    var stackItem = renderStack[key];\n\n    if (stackItem && stackItem.dataIndex !== index) {\n      //Probable collision, warn\n      console.warn(\"Possible stableId collision @\", index); //tslint:disable-line\n    }\n\n    return key;\n  }; //Further optimize in later revision, pretty fast for now considering this is a low frequency event\n\n\n  VirtualRenderer.prototype.handleDataSetChange = function (newDataProvider, shouldOptimizeForAnimations) {\n    var getStableId = newDataProvider.getStableId;\n    var maxIndex = newDataProvider.getSize() - 1;\n    var activeStableIds = {};\n    var newRenderStack = {}; //Compute active stable ids and stale active keys and resync render stack\n\n    for (var key in this._renderStack) {\n      if (this._renderStack.hasOwnProperty(key)) {\n        var index = this._renderStack[key].dataIndex;\n\n        if (!ts_object_utils_1.ObjectUtil.isNullOrUndefined(index)) {\n          if (index <= maxIndex) {\n            var stableId = getStableId(index);\n            activeStableIds[stableId] = 1;\n          }\n        }\n      }\n    } //Clean stable id to key map\n\n\n    var oldActiveStableIds = _Object$keys(this._stableIdToRenderKeyMap);\n\n    var oldActiveStableIdsCount = oldActiveStableIds.length;\n\n    for (var i = 0; i < oldActiveStableIdsCount; i++) {\n      var key = oldActiveStableIds[i];\n\n      if (!activeStableIds[key]) {\n        if (!shouldOptimizeForAnimations && this._isRecyclingEnabled) {\n          var stableIdItem = this._stableIdToRenderKeyMap[key];\n\n          if (stableIdItem) {\n            this._recyclePool.putRecycledObject(stableIdItem.type, stableIdItem.key);\n          }\n        }\n\n        delete this._stableIdToRenderKeyMap[key];\n      }\n    }\n\n    for (var key in this._renderStack) {\n      if (this._renderStack.hasOwnProperty(key)) {\n        var index = this._renderStack[key].dataIndex;\n\n        if (!ts_object_utils_1.ObjectUtil.isNullOrUndefined(index)) {\n          if (index <= maxIndex) {\n            var newKey = this.syncAndGetKey(index, getStableId, newRenderStack);\n            var newStackItem = newRenderStack[newKey];\n\n            if (!newStackItem) {\n              newRenderStack[newKey] = {\n                dataIndex: index\n              };\n            } else if (newStackItem.dataIndex !== index) {\n              var cllKey = this._getCollisionAvoidingKey();\n\n              newRenderStack[cllKey] = {\n                dataIndex: index\n              };\n              this._stableIdToRenderKeyMap[getStableId(index)] = {\n                key: cllKey,\n                type: this._layoutProvider.getLayoutTypeForIndex(index)\n              };\n            }\n          }\n        }\n\n        delete this._renderStack[key];\n      }\n    }\n\n    _Object$assign(this._renderStack, newRenderStack);\n\n    for (var key in this._renderStack) {\n      if (this._renderStack.hasOwnProperty(key)) {\n        var index = this._renderStack[key].dataIndex;\n\n        if (!ts_object_utils_1.ObjectUtil.isNullOrUndefined(index) && ts_object_utils_1.ObjectUtil.isNullOrUndefined(this._engagedIndexes[index])) {\n          var type = this._layoutProvider.getLayoutTypeForIndex(index);\n\n          this._recyclePool.putRecycledObject(type, key);\n        }\n      }\n    }\n  };\n\n  VirtualRenderer.prototype._getCollisionAvoidingKey = function () {\n    return \"#\" + this._startKey++ + \"_rlv_c\";\n  };\n\n  VirtualRenderer.prototype._prepareViewabilityTracker = function () {\n    if (this._viewabilityTracker && this._layoutManager && this._dimensions && this._params) {\n      this._viewabilityTracker.onEngagedRowsChanged = this._onEngagedItemsChanged;\n\n      if (this.onVisibleItemsChanged) {\n        this._viewabilityTracker.onVisibleRowsChanged = this._onVisibleItemsChanged;\n      }\n\n      this._viewabilityTracker.setLayouts(this._layoutManager.getLayouts(), this._params.isHorizontal ? this._layoutManager.getContentDimension().width : this._layoutManager.getContentDimension().height);\n\n      this._viewabilityTracker.setDimensions({\n        height: this._dimensions.height,\n        width: this._dimensions.width\n      }, ts_object_utils_1.Default.value(this._params.isHorizontal, false));\n    } else {\n      throw new CustomError_1.default(RecyclerListViewExceptions_1.default.initializationException);\n    }\n  }; //Updates render stack and reports whether anything has changed\n\n\n  VirtualRenderer.prototype._updateRenderStack = function (itemIndexes) {\n    this._markDirty = false;\n    var count = itemIndexes.length;\n    var index = 0;\n    var hasRenderStackChanged = false;\n\n    for (var i = 0; i < count; i++) {\n      index = itemIndexes[i];\n      this._engagedIndexes[index] = 1;\n      this.syncAndGetKey(index);\n      hasRenderStackChanged = this._markDirty;\n    }\n\n    this._markDirty = false;\n    return hasRenderStackChanged;\n  };\n\n  return VirtualRenderer;\n}();\n\nexports.default = VirtualRenderer;","map":{"version":3,"sources":["../../../src/core/VirtualRenderer.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar RecycleItemPool_1 = require(\"../utils/RecycleItemPool\");\nvar CustomError_1 = require(\"./exceptions/CustomError\");\nvar RecyclerListViewExceptions_1 = require(\"./exceptions/RecyclerListViewExceptions\");\nvar ViewabilityTracker_1 = require(\"./ViewabilityTracker\");\nvar ts_object_utils_1 = require(\"ts-object-utils\");\nvar TSCast_1 = require(\"../utils/TSCast\");\nvar VirtualRenderer = /** @class */ (function () {\n    function VirtualRenderer(renderStackChanged, scrollOnNextUpdate, fetchStableId, isRecyclingEnabled) {\n        var _this = this;\n        this._layoutProvider = TSCast_1.default.cast(null); //TSI\n        this._recyclePool = TSCast_1.default.cast(null); //TSI\n        this._layoutManager = null;\n        this._viewabilityTracker = null;\n        this._onVisibleItemsChanged = function (all, now, notNow) {\n            if (_this.onVisibleItemsChanged) {\n                _this.onVisibleItemsChanged(all, now, notNow);\n            }\n        };\n        this._onEngagedItemsChanged = function (all, now, notNow) {\n            var count = notNow.length;\n            var resolvedKey;\n            var disengagedIndex = 0;\n            if (_this._isRecyclingEnabled) {\n                for (var i = 0; i < count; i++) {\n                    disengagedIndex = notNow[i];\n                    delete _this._engagedIndexes[disengagedIndex];\n                    if (_this._params && disengagedIndex < _this._params.itemCount) {\n                        //All the items which are now not visible can go to the recycle pool, the pool only needs to maintain keys since\n                        //react can link a view to a key automatically\n                        resolvedKey = _this._stableIdToRenderKeyMap[_this._fetchStableId(disengagedIndex)];\n                        if (!ts_object_utils_1.ObjectUtil.isNullOrUndefined(resolvedKey)) {\n                            _this._recyclePool.putRecycledObject(_this._layoutProvider.getLayoutTypeForIndex(disengagedIndex), resolvedKey.key);\n                        }\n                    }\n                }\n            }\n            if (_this._updateRenderStack(now)) {\n                //Ask Recycler View to update itself\n                _this._renderStackChanged(_this._renderStack);\n            }\n        };\n        //Keeps track of items that need to be rendered in the next render cycle\n        this._renderStack = {};\n        this._fetchStableId = fetchStableId;\n        //Keeps track of keys of all the currently rendered indexes, can eventually replace renderStack as well if no new use cases come up\n        this._stableIdToRenderKeyMap = {};\n        this._engagedIndexes = {};\n        this._renderStackChanged = renderStackChanged;\n        this._scrollOnNextUpdate = scrollOnNextUpdate;\n        this._dimensions = null;\n        this._params = null;\n        this._isRecyclingEnabled = isRecyclingEnabled;\n        this._isViewTrackerRunning = false;\n        this._markDirty = false;\n        //Would be surprised if someone exceeds this\n        this._startKey = 0;\n        this.onVisibleItemsChanged = null;\n    }\n    VirtualRenderer.prototype.getLayoutDimension = function () {\n        if (this._layoutManager) {\n            return this._layoutManager.getContentDimension();\n        }\n        return { height: 0, width: 0 };\n    };\n    VirtualRenderer.prototype.updateOffset = function (offsetX, offsetY, correction, isActual) {\n        if (this._viewabilityTracker) {\n            var offset = this._params && this._params.isHorizontal ? offsetX : offsetY;\n            if (!this._isViewTrackerRunning) {\n                if (isActual) {\n                    this._viewabilityTracker.setActualOffset(offset);\n                }\n                this.startViewabilityTracker();\n            }\n            this._viewabilityTracker.updateOffset(offset, correction, isActual);\n        }\n    };\n    VirtualRenderer.prototype.attachVisibleItemsListener = function (callback) {\n        this.onVisibleItemsChanged = callback;\n    };\n    VirtualRenderer.prototype.removeVisibleItemsListener = function () {\n        this.onVisibleItemsChanged = null;\n        if (this._viewabilityTracker) {\n            this._viewabilityTracker.onVisibleRowsChanged = null;\n        }\n    };\n    VirtualRenderer.prototype.getLayoutManager = function () {\n        return this._layoutManager;\n    };\n    VirtualRenderer.prototype.setParamsAndDimensions = function (params, dim) {\n        this._params = params;\n        this._dimensions = dim;\n    };\n    VirtualRenderer.prototype.setLayoutManager = function (layoutManager) {\n        this._layoutManager = layoutManager;\n        if (this._params) {\n            this._layoutManager.relayoutFromIndex(0, this._params.itemCount);\n        }\n    };\n    VirtualRenderer.prototype.setLayoutProvider = function (layoutProvider) {\n        this._layoutProvider = layoutProvider;\n    };\n    VirtualRenderer.prototype.getViewabilityTracker = function () {\n        return this._viewabilityTracker;\n    };\n    VirtualRenderer.prototype.refreshWithAnchor = function () {\n        if (this._viewabilityTracker) {\n            var firstVisibleIndex = this._viewabilityTracker.findFirstLogicallyVisibleIndex();\n            this._prepareViewabilityTracker();\n            var offset = 0;\n            if (this._layoutManager && this._params) {\n                var point = this._layoutManager.getOffsetForIndex(firstVisibleIndex);\n                this._scrollOnNextUpdate(point);\n                offset = this._params.isHorizontal ? point.x : point.y;\n            }\n            this._viewabilityTracker.forceRefreshWithOffset(offset);\n        }\n    };\n    VirtualRenderer.prototype.refresh = function () {\n        if (this._viewabilityTracker) {\n            this._prepareViewabilityTracker();\n            if (this._viewabilityTracker.forceRefresh()) {\n                if (this._params && this._params.isHorizontal) {\n                    this._scrollOnNextUpdate({ x: this._viewabilityTracker.getLastActualOffset(), y: 0 });\n                }\n                else {\n                    this._scrollOnNextUpdate({ x: 0, y: this._viewabilityTracker.getLastActualOffset() });\n                }\n            }\n        }\n    };\n    VirtualRenderer.prototype.getInitialOffset = function () {\n        var offset = { x: 0, y: 0 };\n        if (this._params) {\n            var initialRenderIndex = ts_object_utils_1.Default.value(this._params.initialRenderIndex, 0);\n            if (initialRenderIndex > 0 && this._layoutManager) {\n                offset = this._layoutManager.getOffsetForIndex(initialRenderIndex);\n                this._params.initialOffset = this._params.isHorizontal ? offset.x : offset.y;\n            }\n            else {\n                if (this._params.isHorizontal) {\n                    offset.x = ts_object_utils_1.Default.value(this._params.initialOffset, 0);\n                    offset.y = 0;\n                }\n                else {\n                    offset.y = ts_object_utils_1.Default.value(this._params.initialOffset, 0);\n                    offset.x = 0;\n                }\n            }\n        }\n        return offset;\n    };\n    VirtualRenderer.prototype.init = function () {\n        this.getInitialOffset();\n        this._recyclePool = new RecycleItemPool_1.default();\n        if (this._params) {\n            this._viewabilityTracker = new ViewabilityTracker_1.default(ts_object_utils_1.Default.value(this._params.renderAheadOffset, 0), ts_object_utils_1.Default.value(this._params.initialOffset, 0));\n        }\n        else {\n            this._viewabilityTracker = new ViewabilityTracker_1.default(0, 0);\n        }\n        this._prepareViewabilityTracker();\n    };\n    VirtualRenderer.prototype.startViewabilityTracker = function () {\n        if (this._viewabilityTracker) {\n            this._isViewTrackerRunning = true;\n            this._viewabilityTracker.init();\n        }\n    };\n    VirtualRenderer.prototype.syncAndGetKey = function (index, overrideStableIdProvider, newRenderStack) {\n        var getStableId = overrideStableIdProvider ? overrideStableIdProvider : this._fetchStableId;\n        var renderStack = newRenderStack ? newRenderStack : this._renderStack;\n        var stableIdItem = this._stableIdToRenderKeyMap[getStableId(index)];\n        var key = stableIdItem ? stableIdItem.key : undefined;\n        if (ts_object_utils_1.ObjectUtil.isNullOrUndefined(key)) {\n            var type = this._layoutProvider.getLayoutTypeForIndex(index);\n            key = this._recyclePool.getRecycledObject(type);\n            if (!ts_object_utils_1.ObjectUtil.isNullOrUndefined(key)) {\n                var itemMeta = renderStack[key];\n                if (itemMeta) {\n                    var oldIndex = itemMeta.dataIndex;\n                    itemMeta.dataIndex = index;\n                    if (!ts_object_utils_1.ObjectUtil.isNullOrUndefined(oldIndex) && oldIndex !== index) {\n                        delete this._stableIdToRenderKeyMap[getStableId(oldIndex)];\n                    }\n                }\n                else {\n                    renderStack[key] = { dataIndex: index };\n                }\n            }\n            else {\n                key = getStableId(index);\n                if (renderStack[key]) {\n                    //Probable collision, warn and avoid\n                    //TODO: Disabled incorrectly triggering in some cases\n                    //console.warn(\"Possible stableId collision @\", index); //tslint:disable-line\n                    key = this._getCollisionAvoidingKey();\n                }\n                renderStack[key] = { dataIndex: index };\n            }\n            this._markDirty = true;\n            this._stableIdToRenderKeyMap[getStableId(index)] = { key: key, type: type };\n        }\n        if (!ts_object_utils_1.ObjectUtil.isNullOrUndefined(this._engagedIndexes[index])) {\n            this._recyclePool.removeFromPool(key);\n        }\n        var stackItem = renderStack[key];\n        if (stackItem && stackItem.dataIndex !== index) {\n            //Probable collision, warn\n            console.warn(\"Possible stableId collision @\", index); //tslint:disable-line\n        }\n        return key;\n    };\n    //Further optimize in later revision, pretty fast for now considering this is a low frequency event\n    VirtualRenderer.prototype.handleDataSetChange = function (newDataProvider, shouldOptimizeForAnimations) {\n        var getStableId = newDataProvider.getStableId;\n        var maxIndex = newDataProvider.getSize() - 1;\n        var activeStableIds = {};\n        var newRenderStack = {};\n        //Compute active stable ids and stale active keys and resync render stack\n        for (var key in this._renderStack) {\n            if (this._renderStack.hasOwnProperty(key)) {\n                var index = this._renderStack[key].dataIndex;\n                if (!ts_object_utils_1.ObjectUtil.isNullOrUndefined(index)) {\n                    if (index <= maxIndex) {\n                        var stableId = getStableId(index);\n                        activeStableIds[stableId] = 1;\n                    }\n                }\n            }\n        }\n        //Clean stable id to key map\n        var oldActiveStableIds = Object.keys(this._stableIdToRenderKeyMap);\n        var oldActiveStableIdsCount = oldActiveStableIds.length;\n        for (var i = 0; i < oldActiveStableIdsCount; i++) {\n            var key = oldActiveStableIds[i];\n            if (!activeStableIds[key]) {\n                if (!shouldOptimizeForAnimations && this._isRecyclingEnabled) {\n                    var stableIdItem = this._stableIdToRenderKeyMap[key];\n                    if (stableIdItem) {\n                        this._recyclePool.putRecycledObject(stableIdItem.type, stableIdItem.key);\n                    }\n                }\n                delete this._stableIdToRenderKeyMap[key];\n            }\n        }\n        for (var key in this._renderStack) {\n            if (this._renderStack.hasOwnProperty(key)) {\n                var index = this._renderStack[key].dataIndex;\n                if (!ts_object_utils_1.ObjectUtil.isNullOrUndefined(index)) {\n                    if (index <= maxIndex) {\n                        var newKey = this.syncAndGetKey(index, getStableId, newRenderStack);\n                        var newStackItem = newRenderStack[newKey];\n                        if (!newStackItem) {\n                            newRenderStack[newKey] = { dataIndex: index };\n                        }\n                        else if (newStackItem.dataIndex !== index) {\n                            var cllKey = this._getCollisionAvoidingKey();\n                            newRenderStack[cllKey] = { dataIndex: index };\n                            this._stableIdToRenderKeyMap[getStableId(index)] = {\n                                key: cllKey, type: this._layoutProvider.getLayoutTypeForIndex(index),\n                            };\n                        }\n                    }\n                }\n                delete this._renderStack[key];\n            }\n        }\n        Object.assign(this._renderStack, newRenderStack);\n        for (var key in this._renderStack) {\n            if (this._renderStack.hasOwnProperty(key)) {\n                var index = this._renderStack[key].dataIndex;\n                if (!ts_object_utils_1.ObjectUtil.isNullOrUndefined(index) && ts_object_utils_1.ObjectUtil.isNullOrUndefined(this._engagedIndexes[index])) {\n                    var type = this._layoutProvider.getLayoutTypeForIndex(index);\n                    this._recyclePool.putRecycledObject(type, key);\n                }\n            }\n        }\n    };\n    VirtualRenderer.prototype._getCollisionAvoidingKey = function () {\n        return \"#\" + this._startKey++ + \"_rlv_c\";\n    };\n    VirtualRenderer.prototype._prepareViewabilityTracker = function () {\n        if (this._viewabilityTracker && this._layoutManager && this._dimensions && this._params) {\n            this._viewabilityTracker.onEngagedRowsChanged = this._onEngagedItemsChanged;\n            if (this.onVisibleItemsChanged) {\n                this._viewabilityTracker.onVisibleRowsChanged = this._onVisibleItemsChanged;\n            }\n            this._viewabilityTracker.setLayouts(this._layoutManager.getLayouts(), this._params.isHorizontal ?\n                this._layoutManager.getContentDimension().width :\n                this._layoutManager.getContentDimension().height);\n            this._viewabilityTracker.setDimensions({\n                height: this._dimensions.height,\n                width: this._dimensions.width,\n            }, ts_object_utils_1.Default.value(this._params.isHorizontal, false));\n        }\n        else {\n            throw new CustomError_1.default(RecyclerListViewExceptions_1.default.initializationException);\n        }\n    };\n    //Updates render stack and reports whether anything has changed\n    VirtualRenderer.prototype._updateRenderStack = function (itemIndexes) {\n        this._markDirty = false;\n        var count = itemIndexes.length;\n        var index = 0;\n        var hasRenderStackChanged = false;\n        for (var i = 0; i < count; i++) {\n            index = itemIndexes[i];\n            this._engagedIndexes[index] = 1;\n            this.syncAndGetKey(index);\n            hasRenderStackChanged = this._markDirty;\n        }\n        this._markDirty = false;\n        return hasRenderStackChanged;\n    };\n    return VirtualRenderer;\n}());\nexports.default = VirtualRenderer;\n//# sourceMappingURL=VirtualRenderer.js.map"]},"metadata":{},"sourceType":"script"}