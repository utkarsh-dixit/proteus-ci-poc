{"ast":null,"code":"\"use strict\";\n\nvar _Array$from = require(\"@babel/runtime-corejs2/core-js/array/from\");\n\nvar _getIterator = require(\"@babel/runtime-corejs2/core-js/get-iterator\");\n\nvar _Array$isArray = require(\"@babel/runtime-corejs2/core-js/array/is-array\");\n\nvar _JSON$stringify = require(\"@babel/runtime-corejs2/core-js/json/stringify\");\n\nvar _Map = require(\"@babel/runtime-corejs2/core-js/map\");\n\nvar _Set = require(\"@babel/runtime-corejs2/core-js/set\");\n\nvar _Object$defineProperty = require(\"@babel/runtime-corejs2/core-js/object/define-property\");\n\nvar _Object$getOwnPropertyDescriptor = require(\"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\");\n\nvar _Object$getOwnPropertySymbols = require(\"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\");\n\nvar _Object$keys = require(\"@babel/runtime-corejs2/core-js/object/keys\");\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _invariant = _interopRequireDefault(require(\"fbjs/lib/invariant\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    var ownKeys = _Object$keys(source);\n\n    if (typeof _Object$getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(_Object$getOwnPropertySymbols(source).filter(function (sym) {\n        return _Object$getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    _Object$defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n/**\n * A Utility class for calculating viewable items based on current metrics like scroll position and\n * layout.\n *\n * An item is said to be in a \"viewable\" state when any of the following\n * is true for longer than `minimumViewTime` milliseconds (after an interaction if `waitForInteraction`\n * is true):\n *\n * - Occupying >= `viewAreaCoveragePercentThreshold` of the view area XOR fraction of the item\n *   visible in the view area >= `itemVisiblePercentThreshold`.\n * - Entirely visible on screen\n */\n\n\nvar ViewabilityHelper =\n/*#__PURE__*/\nfunction () {\n  /* $FlowFixMe(>=0.63.0 site=react_native_fb) This comment suppresses an error\n   * found when Flow v0.63 was deployed. To see the error delete this comment\n   * and run Flow. */\n  function ViewabilityHelper(config) {\n    if (config === void 0) {\n      config = {\n        viewAreaCoveragePercentThreshold: 0\n      };\n    }\n\n    this._hasInteracted = false;\n    this._timers = new _Set();\n    this._viewableIndices = [];\n    this._viewableItems = new _Map();\n    this._config = config;\n  }\n  /**\n   * Cleanup, e.g. on unmount. Clears any pending timers.\n   */\n\n\n  var _proto = ViewabilityHelper.prototype;\n\n  _proto.dispose = function dispose() {\n    this._timers.forEach(clearTimeout);\n  }\n  /**\n   * Determines which items are viewable based on the current metrics and config.\n   */\n  ;\n\n  _proto.computeViewableItems = function computeViewableItems(itemCount, scrollOffset, viewportHeight, getFrameMetrics, renderRange) {\n    var _this$_config = this._config,\n        itemVisiblePercentThreshold = _this$_config.itemVisiblePercentThreshold,\n        viewAreaCoveragePercentThreshold = _this$_config.viewAreaCoveragePercentThreshold;\n    var viewAreaMode = viewAreaCoveragePercentThreshold != null;\n    var viewablePercentThreshold = viewAreaMode ? viewAreaCoveragePercentThreshold : itemVisiblePercentThreshold;\n    (0, _invariant.default)(viewablePercentThreshold != null && itemVisiblePercentThreshold != null !== (viewAreaCoveragePercentThreshold != null), 'Must set exactly one of itemVisiblePercentThreshold or viewAreaCoveragePercentThreshold');\n    var viewableIndices = [];\n\n    if (itemCount === 0) {\n      return viewableIndices;\n    }\n\n    var firstVisible = -1;\n\n    var _ref = renderRange || {\n      first: 0,\n      last: itemCount - 1\n    },\n        first = _ref.first,\n        last = _ref.last;\n\n    (0, _invariant.default)(last < itemCount, 'Invalid render range ' + _JSON$stringify({\n      renderRange: renderRange,\n      itemCount: itemCount\n    }));\n\n    for (var idx = first; idx <= last; idx++) {\n      var metrics = getFrameMetrics(idx);\n\n      if (!metrics) {\n        continue;\n      }\n\n      var top = metrics.offset - scrollOffset;\n      var bottom = top + metrics.length;\n\n      if (top < viewportHeight && bottom > 0) {\n        firstVisible = idx;\n\n        if (_isViewable(viewAreaMode, viewablePercentThreshold, top, bottom, viewportHeight, metrics.length)) {\n          viewableIndices.push(idx);\n        }\n      } else if (firstVisible >= 0) {\n        break;\n      }\n    }\n\n    return viewableIndices;\n  }\n  /**\n   * Figures out which items are viewable and how that has changed from before and calls\n   * `onViewableItemsChanged` as appropriate.\n   */\n  ;\n\n  _proto.onUpdate = function onUpdate(itemCount, scrollOffset, viewportHeight, getFrameMetrics, createViewToken, onViewableItemsChanged, renderRange) {\n    var _this = this;\n\n    if (this._config.waitForInteraction && !this._hasInteracted || itemCount === 0 || !getFrameMetrics(0)) {\n      return;\n    }\n\n    var viewableIndices = [];\n\n    if (itemCount) {\n      viewableIndices = this.computeViewableItems(itemCount, scrollOffset, viewportHeight, getFrameMetrics, renderRange);\n    }\n\n    if (this._viewableIndices.length === viewableIndices.length && this._viewableIndices.every(function (v, ii) {\n      return v === viewableIndices[ii];\n    })) {\n      // We might get a lot of scroll events where visibility doesn't change and we don't want to do\n      // extra work in those cases.\n      return;\n    }\n\n    this._viewableIndices = viewableIndices;\n\n    if (this._config.minimumViewTime) {\n      var handle = setTimeout(function () {\n        _this._timers.delete(handle);\n\n        _this._onUpdateSync(viewableIndices, onViewableItemsChanged, createViewToken);\n      }, this._config.minimumViewTime);\n\n      this._timers.add(handle);\n    } else {\n      this._onUpdateSync(viewableIndices, onViewableItemsChanged, createViewToken);\n    }\n  }\n  /**\n   * clean-up cached _viewableIndices to evaluate changed items on next update\n   */\n  ;\n\n  _proto.resetViewableIndices = function resetViewableIndices() {\n    this._viewableIndices = [];\n  }\n  /**\n   * Records that an interaction has happened even if there has been no scroll.\n   */\n  ;\n\n  _proto.recordInteraction = function recordInteraction() {\n    this._hasInteracted = true;\n  };\n\n  _proto._onUpdateSync = function _onUpdateSync(viewableIndicesToCheck, onViewableItemsChanged, createViewToken) {\n    var _this2 = this; // Filter out indices that have gone out of view since this call was scheduled.\n\n\n    viewableIndicesToCheck = viewableIndicesToCheck.filter(function (ii) {\n      return _this2._viewableIndices.includes(ii);\n    });\n    var prevItems = this._viewableItems;\n    var nextItems = new _Map(viewableIndicesToCheck.map(function (ii) {\n      var viewable = createViewToken(ii, true);\n      return [viewable.key, viewable];\n    }));\n    var changed = [];\n\n    for (var _iterator = nextItems, _isArray = _Array$isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _getIterator(_iterator);;) {\n      var _ref2;\n\n      if (_isArray) {\n        if (_i >= _iterator.length) break;\n        _ref2 = _iterator[_i++];\n      } else {\n        _i = _iterator.next();\n        if (_i.done) break;\n        _ref2 = _i.value;\n      }\n\n      var _ref4 = _ref2,\n          key = _ref4[0],\n          viewable = _ref4[1];\n\n      if (!prevItems.has(key)) {\n        changed.push(viewable);\n      }\n    }\n\n    for (var _iterator2 = prevItems, _isArray2 = _Array$isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _getIterator(_iterator2);;) {\n      var _ref3;\n\n      if (_isArray2) {\n        if (_i2 >= _iterator2.length) break;\n        _ref3 = _iterator2[_i2++];\n      } else {\n        _i2 = _iterator2.next();\n        if (_i2.done) break;\n        _ref3 = _i2.value;\n      }\n\n      var _ref5 = _ref3,\n          key = _ref5[0],\n          viewable = _ref5[1];\n\n      if (!nextItems.has(key)) {\n        changed.push(_objectSpread({}, viewable, {\n          isViewable: false\n        }));\n      }\n    }\n\n    if (changed.length > 0) {\n      this._viewableItems = nextItems;\n      onViewableItemsChanged({\n        viewableItems: _Array$from(nextItems.values()),\n        changed: changed,\n        viewabilityConfig: this._config\n      });\n    }\n  };\n\n  return ViewabilityHelper;\n}();\n\nfunction _isViewable(viewAreaMode, viewablePercentThreshold, top, bottom, viewportHeight, itemLength) {\n  if (_isEntirelyVisible(top, bottom, viewportHeight)) {\n    return true;\n  } else {\n    var pixels = _getPixelsVisible(top, bottom, viewportHeight);\n\n    var percent = 100 * (viewAreaMode ? pixels / viewportHeight : pixels / itemLength);\n    return percent >= viewablePercentThreshold;\n  }\n}\n\nfunction _getPixelsVisible(top, bottom, viewportHeight) {\n  var visibleHeight = Math.min(bottom, viewportHeight) - Math.max(top, 0);\n  return Math.max(0, visibleHeight);\n}\n\nfunction _isEntirelyVisible(top, bottom, viewportHeight) {\n  return top >= 0 && bottom <= viewportHeight && bottom > top;\n}\n\nvar _default = ViewabilityHelper;\nexports.default = _default;\nmodule.exports = exports.default;","map":{"version":3,"sources":["/Users/utkarsh/Desktop/headout/ReactNativeOne/node_modules/react-native-web/dist/cjs/vendor/react-native/ViewabilityHelper/index.js"],"names":["exports","__esModule","default","_invariant","_interopRequireDefault","require","obj","_objectSpread","target","i","arguments","length","source","ownKeys","concat","filter","sym","enumerable","forEach","key","_defineProperty","value","configurable","writable","ViewabilityHelper","config","viewAreaCoveragePercentThreshold","_hasInteracted","_timers","_viewableIndices","_viewableItems","_config","_proto","prototype","dispose","clearTimeout","computeViewableItems","itemCount","scrollOffset","viewportHeight","getFrameMetrics","renderRange","_this$_config","itemVisiblePercentThreshold","viewAreaMode","viewablePercentThreshold","viewableIndices","firstVisible","_ref","first","last","idx","metrics","top","offset","bottom","_isViewable","push","onUpdate","createViewToken","onViewableItemsChanged","_this","waitForInteraction","every","v","ii","minimumViewTime","handle","setTimeout","delete","_onUpdateSync","add","resetViewableIndices","recordInteraction","viewableIndicesToCheck","_this2","includes","prevItems","nextItems","map","viewable","changed","_iterator","_isArray","_i","_ref2","next","done","_ref4","has","_iterator2","_isArray2","_i2","_ref3","_ref5","isViewable","viewableItems","values","viewabilityConfig","itemLength","_isEntirelyVisible","pixels","_getPixelsVisible","percent","visibleHeight","Math","min","max","_default","module"],"mappings":"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","sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _invariant = _interopRequireDefault(require(\"fbjs/lib/invariant\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/**\n * A Utility class for calculating viewable items based on current metrics like scroll position and\n * layout.\n *\n * An item is said to be in a \"viewable\" state when any of the following\n * is true for longer than `minimumViewTime` milliseconds (after an interaction if `waitForInteraction`\n * is true):\n *\n * - Occupying >= `viewAreaCoveragePercentThreshold` of the view area XOR fraction of the item\n *   visible in the view area >= `itemVisiblePercentThreshold`.\n * - Entirely visible on screen\n */\nvar ViewabilityHelper =\n/*#__PURE__*/\nfunction () {\n  /* $FlowFixMe(>=0.63.0 site=react_native_fb) This comment suppresses an error\n   * found when Flow v0.63 was deployed. To see the error delete this comment\n   * and run Flow. */\n  function ViewabilityHelper(config) {\n    if (config === void 0) {\n      config = {\n        viewAreaCoveragePercentThreshold: 0\n      };\n    }\n\n    this._hasInteracted = false;\n    this._timers = new Set();\n    this._viewableIndices = [];\n    this._viewableItems = new Map();\n    this._config = config;\n  }\n  /**\n   * Cleanup, e.g. on unmount. Clears any pending timers.\n   */\n\n\n  var _proto = ViewabilityHelper.prototype;\n\n  _proto.dispose = function dispose() {\n    this._timers.forEach(clearTimeout);\n  }\n  /**\n   * Determines which items are viewable based on the current metrics and config.\n   */\n  ;\n\n  _proto.computeViewableItems = function computeViewableItems(itemCount, scrollOffset, viewportHeight, getFrameMetrics, renderRange) {\n    var _this$_config = this._config,\n        itemVisiblePercentThreshold = _this$_config.itemVisiblePercentThreshold,\n        viewAreaCoveragePercentThreshold = _this$_config.viewAreaCoveragePercentThreshold;\n    var viewAreaMode = viewAreaCoveragePercentThreshold != null;\n    var viewablePercentThreshold = viewAreaMode ? viewAreaCoveragePercentThreshold : itemVisiblePercentThreshold;\n    (0, _invariant.default)(viewablePercentThreshold != null && itemVisiblePercentThreshold != null !== (viewAreaCoveragePercentThreshold != null), 'Must set exactly one of itemVisiblePercentThreshold or viewAreaCoveragePercentThreshold');\n    var viewableIndices = [];\n\n    if (itemCount === 0) {\n      return viewableIndices;\n    }\n\n    var firstVisible = -1;\n\n    var _ref = renderRange || {\n      first: 0,\n      last: itemCount - 1\n    },\n        first = _ref.first,\n        last = _ref.last;\n\n    (0, _invariant.default)(last < itemCount, 'Invalid render range ' + JSON.stringify({\n      renderRange: renderRange,\n      itemCount: itemCount\n    }));\n\n    for (var idx = first; idx <= last; idx++) {\n      var metrics = getFrameMetrics(idx);\n\n      if (!metrics) {\n        continue;\n      }\n\n      var top = metrics.offset - scrollOffset;\n      var bottom = top + metrics.length;\n\n      if (top < viewportHeight && bottom > 0) {\n        firstVisible = idx;\n\n        if (_isViewable(viewAreaMode, viewablePercentThreshold, top, bottom, viewportHeight, metrics.length)) {\n          viewableIndices.push(idx);\n        }\n      } else if (firstVisible >= 0) {\n        break;\n      }\n    }\n\n    return viewableIndices;\n  }\n  /**\n   * Figures out which items are viewable and how that has changed from before and calls\n   * `onViewableItemsChanged` as appropriate.\n   */\n  ;\n\n  _proto.onUpdate = function onUpdate(itemCount, scrollOffset, viewportHeight, getFrameMetrics, createViewToken, onViewableItemsChanged, renderRange) {\n    var _this = this;\n\n    if (this._config.waitForInteraction && !this._hasInteracted || itemCount === 0 || !getFrameMetrics(0)) {\n      return;\n    }\n\n    var viewableIndices = [];\n\n    if (itemCount) {\n      viewableIndices = this.computeViewableItems(itemCount, scrollOffset, viewportHeight, getFrameMetrics, renderRange);\n    }\n\n    if (this._viewableIndices.length === viewableIndices.length && this._viewableIndices.every(function (v, ii) {\n      return v === viewableIndices[ii];\n    })) {\n      // We might get a lot of scroll events where visibility doesn't change and we don't want to do\n      // extra work in those cases.\n      return;\n    }\n\n    this._viewableIndices = viewableIndices;\n\n    if (this._config.minimumViewTime) {\n      var handle = setTimeout(function () {\n        _this._timers.delete(handle);\n\n        _this._onUpdateSync(viewableIndices, onViewableItemsChanged, createViewToken);\n      }, this._config.minimumViewTime);\n\n      this._timers.add(handle);\n    } else {\n      this._onUpdateSync(viewableIndices, onViewableItemsChanged, createViewToken);\n    }\n  }\n  /**\n   * clean-up cached _viewableIndices to evaluate changed items on next update\n   */\n  ;\n\n  _proto.resetViewableIndices = function resetViewableIndices() {\n    this._viewableIndices = [];\n  }\n  /**\n   * Records that an interaction has happened even if there has been no scroll.\n   */\n  ;\n\n  _proto.recordInteraction = function recordInteraction() {\n    this._hasInteracted = true;\n  };\n\n  _proto._onUpdateSync = function _onUpdateSync(viewableIndicesToCheck, onViewableItemsChanged, createViewToken) {\n    var _this2 = this;\n\n    // Filter out indices that have gone out of view since this call was scheduled.\n    viewableIndicesToCheck = viewableIndicesToCheck.filter(function (ii) {\n      return _this2._viewableIndices.includes(ii);\n    });\n    var prevItems = this._viewableItems;\n    var nextItems = new Map(viewableIndicesToCheck.map(function (ii) {\n      var viewable = createViewToken(ii, true);\n      return [viewable.key, viewable];\n    }));\n    var changed = [];\n\n    for (var _iterator = nextItems, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n      var _ref2;\n\n      if (_isArray) {\n        if (_i >= _iterator.length) break;\n        _ref2 = _iterator[_i++];\n      } else {\n        _i = _iterator.next();\n        if (_i.done) break;\n        _ref2 = _i.value;\n      }\n\n      var _ref4 = _ref2,\n          key = _ref4[0],\n          viewable = _ref4[1];\n\n      if (!prevItems.has(key)) {\n        changed.push(viewable);\n      }\n    }\n\n    for (var _iterator2 = prevItems, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();;) {\n      var _ref3;\n\n      if (_isArray2) {\n        if (_i2 >= _iterator2.length) break;\n        _ref3 = _iterator2[_i2++];\n      } else {\n        _i2 = _iterator2.next();\n        if (_i2.done) break;\n        _ref3 = _i2.value;\n      }\n\n      var _ref5 = _ref3,\n          key = _ref5[0],\n          viewable = _ref5[1];\n\n      if (!nextItems.has(key)) {\n        changed.push(_objectSpread({}, viewable, {\n          isViewable: false\n        }));\n      }\n    }\n\n    if (changed.length > 0) {\n      this._viewableItems = nextItems;\n      onViewableItemsChanged({\n        viewableItems: Array.from(nextItems.values()),\n        changed: changed,\n        viewabilityConfig: this._config\n      });\n    }\n  };\n\n  return ViewabilityHelper;\n}();\n\nfunction _isViewable(viewAreaMode, viewablePercentThreshold, top, bottom, viewportHeight, itemLength) {\n  if (_isEntirelyVisible(top, bottom, viewportHeight)) {\n    return true;\n  } else {\n    var pixels = _getPixelsVisible(top, bottom, viewportHeight);\n\n    var percent = 100 * (viewAreaMode ? pixels / viewportHeight : pixels / itemLength);\n    return percent >= viewablePercentThreshold;\n  }\n}\n\nfunction _getPixelsVisible(top, bottom, viewportHeight) {\n  var visibleHeight = Math.min(bottom, viewportHeight) - Math.max(top, 0);\n  return Math.max(0, visibleHeight);\n}\n\nfunction _isEntirelyVisible(top, bottom, viewportHeight) {\n  return top >= 0 && bottom <= viewportHeight && bottom > top;\n}\n\nvar _default = ViewabilityHelper;\nexports.default = _default;\nmodule.exports = exports.default;"]},"metadata":{},"sourceType":"script"}