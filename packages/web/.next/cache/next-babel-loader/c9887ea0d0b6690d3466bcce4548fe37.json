{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nvar _jsxFileName = \"/Users/utkarsh/Desktop/headout/ReactNativeOne/node_modules/components/src/molecules/slider/image_slider.tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { StyleSheet, View, TouchableHighlight, ImageBackground } from 'react-native';\nimport Swiper from 'react-native-web-swiper';\n;\nexport default class ImageSlider extends React.Component {\n  shouldComponentUpdate(newProps) {\n    if (_JSON$stringify(this.props) === _JSON$stringify(newProps)) {\n      return false;\n    }\n\n    return true;\n  }\n\n  prepareSlides() {\n    const {\n      slides,\n      callback\n    } = this.props;\n    return slides.map((value, index) => {\n      return __jsx(View, {\n        style: [styles.slideContainer, styles.slide1],\n        key: value.code,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, __jsx(TouchableHighlight, {\n        style: styles.slideContainer,\n        onPress: callback,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, __jsx(ImageBackground, {\n        source: {\n          uri: value.image\n        },\n        style: {\n          flex: 1\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      })));\n    });\n  }\n\n  getDots({\n    isActive\n  }) {\n    return __jsx(View, {\n      style: [styles.dots, {\n        backgroundColor: isActive ? \"white\" : \"transparent\"\n      }],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    });\n  }\n\n  render() {\n    return __jsx(View, {\n      style: [styles.container, {\n        minHeight: this.props.height\n      }],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, this.props.slides.length > 0 && __jsx(Swiper, {\n      minDistanceForAction: 0.10,\n      loop: true,\n      springConfig: {\n        speed: 10\n      },\n      controlsProps: {\n        dotsTouchable: true,\n        dotsPos: 'bottom',\n        prevPos: false,\n        nextPos: false,\n        DotComponent: this.getDots\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, this.prepareSlides()));\n  }\n\n}\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  slideContainer: {\n    flex: 1,\n    alignItems: 'stretch',\n    justifyContent: 'center'\n  },\n  slide1: {\n    backgroundColor: 'rgb(199,199, 205)'\n  },\n  dots: {\n    position: \"relative\",\n    padding: 0,\n    top: -12,\n    width: 6,\n    height: 6,\n    marginLeft: 3,\n    marginRight: 3,\n    backgroundColor: \"transparent\",\n    borderWidth: 2,\n    borderColor: \"rgba(255,255,255,0.5)\",\n    borderRadius: 30\n  }\n});","map":{"version":3,"sources":["/Users/utkarsh/Desktop/headout/ReactNativeOne/node_modules/components/src/molecules/slider/image_slider.tsx"],"names":["React","StyleSheet","View","TouchableHighlight","ImageBackground","Swiper","ImageSlider","Component","shouldComponentUpdate","newProps","props","prepareSlides","slides","callback","map","value","index","styles","slideContainer","slide1","code","uri","image","flex","getDots","isActive","dots","backgroundColor","render","container","minHeight","height","length","speed","dotsTouchable","dotsPos","prevPos","nextPos","DotComponent","create","alignItems","justifyContent","position","padding","top","width","marginLeft","marginRight","borderWidth","borderColor","borderRadius"],"mappings":"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","sourcesContent":["\nimport React, { Component } from 'react';\nimport {\n    StyleSheet,\n    Text,\n    View,\n    Image,\n    TouchableHighlight,\n    ImageBackground\n} from 'react-native';\nimport Swiper from 'react-native-web-swiper';\n\n\ninterface slide_item {\n    image: string;\n    code: string;\n};\ntype Props = {\n    slides: Array<slide_item>;\n    height: number;\n    callback: any;\n};\ntype State = {};\n\nexport default class ImageSlider extends React.Component<Props, State> {\n\n    shouldComponentUpdate(newProps) {\n        if (JSON.stringify(this.props) === JSON.stringify(newProps)) {\n            return false;\n        }\n        return true;\n    }\n    prepareSlides() {\n        const { slides, callback } = this.props;\n        return slides.map((value, index) => {\n            return (\n                <View style={[styles.slideContainer, styles.slide1]} key={value.code}>\n                    <TouchableHighlight style={styles.slideContainer} onPress={callback}>\n                        <ImageBackground source={{ uri: value.image }} style={{ flex: 1 }} ></ImageBackground>\n                    </TouchableHighlight>\n                </View>\n            );\n        })\n    }\n\n    getDots({ isActive }: any) {\n        return (\n            <View style={[styles.dots, { backgroundColor: isActive ? \"white\" : \"transparent\" }]}></View>\n        );\n    }\n\n    render() {\n        return (\n            <View style={[styles.container, { minHeight: this.props.height }]}>\n                {this.props.slides.length > 0 && (\n                    <Swiper minDistanceForAction={0.10} loop={true} springConfig={{ speed: 10 }} controlsProps={{\n                        dotsTouchable: true,\n                        dotsPos: 'bottom',\n                        prevPos: false,\n                        nextPos: false,\n                        DotComponent: this.getDots\n                    }}>\n                        {this.prepareSlides()}\n                    </Swiper>\n                )}\n            </View>\n        );\n    }\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1\n    },\n    slideContainer: {\n        flex: 1,\n        alignItems: 'stretch',\n        justifyContent: 'center',\n    },\n    slide1: {\n        backgroundColor: 'rgb(199,199, 205)',\n    },\n    dots: {\n        position: \"relative\",\n        padding: 0,\n        top: -12,\n        width: 6,\n        height: 6,\n        marginLeft: 3,\n        marginRight: 3,\n        backgroundColor: \"transparent\",\n        borderWidth: 2,\n        borderColor: \"rgba(255,255,255,0.5)\",\n        borderRadius: 30\n    }\n});"]},"metadata":{},"sourceType":"module"}