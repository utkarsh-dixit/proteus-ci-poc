{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/utkarsh/Desktop/headout/ReactNativeOne/node_modules/components/src/molecules/list/collection_list.tsx\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { StyleSheet, View, Text, ImageBackground, Platform } from \"react-native\";\nexport default class CollectionList extends React.PureComponent {\n  getItems() {\n    let out = [];\n    const limit = this.props.limit ? this.props.limit : 8;\n    out = this.props.items.slice(0, limit).map((current, index) => {\n      return __jsx(ImageBackground, {\n        key: index,\n        imageStyle: styles.imageStyle,\n        source: {\n          uri: current.image.replace(/^(\\/\\/\\.*?)/i, \"https://\")\n        },\n        style: styles.list_item,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, __jsx(View, {\n        style: styles.overlay,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }), __jsx(View, {\n        style: styles.itemTextContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, __jsx(Text, {\n        style: styles.imageText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, current.name)));\n    });\n\n    if (this.props.items.length > limit) {\n      return out.slice(0, limit - 1).concat(__jsx(ImageBackground, {\n        key: limit,\n        imageStyle: styles.imageStyle,\n        source: {\n          uri: this.props.items[limit].image.replace(/^(\\/\\/\\.*?)/i, \"https://\")\n        },\n        style: styles.list_item,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, __jsx(View, {\n        style: styles.overlay,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }), __jsx(View, {\n        style: styles.itemTextContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, __jsx(Text, {\n        style: styles.imageText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, \"+\", this.props.items.length - out.length, \" more\"))));\n    } else {\n      return out;\n    }\n  }\n\n  render() {\n    return __jsx(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, __jsx(View, {\n      style: [this.props.style],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, __jsx(View, {\n      style: styles.heading,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, __jsx(View, {\n      style: styles.titleContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, __jsx(Text, {\n      style: styles.heading_text,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, this.props.title)), this.props.desc && __jsx(Text, {\n      style: styles.desc,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, this.props.desc))), __jsx(View, {\n      style: styles.list_container,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, this.getItems()));\n  }\n\n}\n\n_defineProperty(CollectionList, \"whyDidYouRender\", true);\n\nconst styles = StyleSheet.create({\n  heading: {\n    marginTop: 30,\n    marginBottom: 20\n  },\n  overlay: {\n    position: \"absolute\",\n    backgroundColor: \"rgba(0,0,0, 0.2)\",\n    top: 0,\n    left: 0,\n    width: Platform.OS === \"web\" ? \"100%\" : \"auto\",\n    height: Platform.OS === \"web\" ? \"100%\" : \"auto\"\n  },\n  titleContainer: {\n    flex: 1,\n    flexDirection: \"row\"\n  },\n  itemTextContainer: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    justifyContent: 'center',\n    alignItems: 'center',\n    paddingLeft: 20,\n    paddingRight: 20\n  },\n  desc: {\n    color: \"rgb(84,84,84)\",\n    fontSize: 16,\n    marginTop: 12,\n    fontWeight: \"300\",\n    fontFamily: \"Avenir\"\n  },\n  heading_text: {\n    fontSize: 20,\n    fontWeight: \"600\",\n    color: \"rgb(84,84,84)\",\n    lineHeight: 28,\n    fontFamily: \"Avenir\"\n  },\n  list_container: {\n    flex: 1,\n    flexDirection: 'row',\n    marginTop: 8,\n    flexWrap: 'wrap',\n    minHeight: \"auto\",\n    alignItems: 'flex-start' // if you want to fill rows left to right\n\n  },\n  imageText: {\n    color: \"rgb(255, 255, 255)\",\n    fontSize: 16,\n    fontWeight: \"800\",\n    textAlign: \"center\",\n    fontFamily: \"Avenir\",\n    lineHeight: 22.22\n  },\n  list_item: {\n    width: '50%',\n    backgroundColor: \"rgb(199,199, 205)\",\n    paddingTop: \"50%\",\n    height: \"auto\",\n    position: \"relative\"\n  },\n  imageStyle: {\n    resizeMode: \"cover\",\n    width: \"100%\"\n  }\n});","map":{"version":3,"sources":["/Users/utkarsh/Desktop/headout/ReactNativeOne/node_modules/components/src/molecules/list/collection_list.tsx"],"names":["React","StyleSheet","View","Text","ImageBackground","Platform","CollectionList","PureComponent","getItems","out","limit","props","items","slice","map","current","index","styles","imageStyle","uri","image","replace","list_item","overlay","itemTextContainer","imageText","name","length","concat","render","style","heading","titleContainer","heading_text","title","desc","list_container","create","marginTop","marginBottom","position","backgroundColor","top","left","width","OS","height","flex","flexDirection","right","bottom","justifyContent","alignItems","paddingLeft","paddingRight","color","fontSize","fontWeight","fontFamily","lineHeight","flexWrap","minHeight","textAlign","paddingTop","resizeMode"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { StyleSheet, View, Text, ImageBackground, Platform } from \"react-native\";\n\ntype Props = {\n    title: string;\n    desc: string;\n    items: Array<{\n        id: number,\n        name: string,\n        image: string\n    }>;\n    limit?: number;\n    style?: any;\n};\n\nexport default class CollectionList extends React.PureComponent<Props>{\n\n    static whyDidYouRender = true\n\n    getItems() {\n        let out = [];\n        const limit = this.props.limit ? this.props.limit : 8;\n        out = this.props.items.slice(0,limit).map((current, index) => {\n            return (\n                <ImageBackground key={index} imageStyle={styles.imageStyle} source={{ uri: current.image.replace(/^(\\/\\/\\.*?)/i, \"https://\") }} style={styles.list_item}>\n                    <View style={styles.overlay}></View>\n                    <View style={styles.itemTextContainer}>\n                        <Text style={styles.imageText}>{current.name}</Text>\n                    </View>\n                </ImageBackground>\n            );\n        });\n        if(this.props.items.length > limit) {\n            return out.slice(0, limit - 1).concat((\n                <ImageBackground key={limit} imageStyle={styles.imageStyle} source={{ uri: this.props.items[limit].image.replace(/^(\\/\\/\\.*?)/i, \"https://\") }} style={styles.list_item}>\n                <View style={styles.overlay}></View>\n                <View style={styles.itemTextContainer}>\n                    <Text style={styles.imageText}>+{this.props.items.length - out.length} more</Text>\n                </View>\n            </ImageBackground>\n            ));\n        } else {\n            return out;\n        }\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <View style={[this.props.style]}>\n                    <View style={styles.heading}>\n                        <View style={styles.titleContainer}>\n                            <Text style={styles.heading_text}>{this.props.title}</Text>\n                        </View>\n                        {this.props.desc && (<Text style={styles.desc}>{this.props.desc}</Text>)}\n                    </View>\n\n                    {/* <Text>{Math.round(this.state.xOffset * 100/this.props.items.length)}</Text> */}\n                </View>\n                <View style={styles.list_container}>\n                    {this.getItems()}\n                </View>\n            </React.Fragment>\n        )\n    }\n}\n\nconst styles = StyleSheet.create({\n    heading: {\n        marginTop: 30,\n        marginBottom: 20,\n    },\n    overlay: {\n        position: \"absolute\",\n        backgroundColor: \"rgba(0,0,0, 0.2)\",\n        top: 0,\n        left: 0,\n        width: Platform.OS === \"web\" ? \"100%\": \"auto\",\n        height: Platform.OS === \"web\" ? \"100%\" : \"auto\"\n    },\n    titleContainer: {\n         flex: 1, flexDirection: \"row\" \n    },\n    itemTextContainer: {\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0,\n        justifyContent: 'center',\n        alignItems: 'center',\n        paddingLeft: 20,\n        paddingRight: 20\n    },\n    desc: {\n        color: \"rgb(84,84,84)\",\n        fontSize: 16,\n        marginTop: 12,\n        fontWeight: \"300\",\n        fontFamily: \"Avenir\",\n    },\n    heading_text: {\n        fontSize: 20,\n        fontWeight: \"600\",\n        color: \"rgb(84,84,84)\",\n        lineHeight: 28,\n        fontFamily: \"Avenir\",\n    },\n    list_container: {\n        flex: 1,\n        flexDirection: 'row',\n        marginTop: 8,\n        flexWrap: 'wrap',\n        minHeight: \"auto\",\n        alignItems: 'flex-start' // if you want to fill rows left to right\n    },\n    imageText: {\n        color: \"rgb(255, 255, 255)\",\n        fontSize: 16,\n        fontWeight: \"800\",\n        textAlign: \"center\",\n        fontFamily: \"Avenir\",\n        lineHeight: 22.22\n    },\n    list_item: {\n        width: '50%',\n        backgroundColor: \"rgb(199,199, 205)\",\n        paddingTop: \"50%\",\n        height: \"auto\",\n        position: \"relative\"\n    },\n    imageStyle: {\n        resizeMode: \"cover\", width: \"100%\"\n    }\n});"]},"metadata":{},"sourceType":"module"}