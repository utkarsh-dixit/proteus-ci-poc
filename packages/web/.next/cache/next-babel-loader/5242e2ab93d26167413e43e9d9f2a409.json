{"ast":null,"code":"import _Object$entries from \"@babel/runtime-corejs2/core-js/object/entries\";\nimport axios from \"axios\";\nimport url from \"url\";\nimport { BASE_API_URL } from \"../config/\"; // Send API Request and execute function in case of request fail.\n\nexport const requestAPICall = async (endpoint, payload, callback, dispatch) => {\n  let result;\n  const request = _Object$entries(payload).length === 0 ? axios.get(url.resolve(BASE_API_URL, endpoint)) : axios.post(url.resolve(API_SERVER, endpoint), payload);\n  await request.then(res => {\n    result = res;\n  }).catch(err => {\n    console.log(err.response);\n\n    if (typeof callback === \"function\" && !err.response) {\n      callback(false)(dispatch);\n    }\n\n    throw err;\n  });\n  return result;\n};","map":{"version":3,"sources":["/Users/utkarsh/Desktop/headout/ReactNativeOne/packages/components/src/util/network.ts"],"names":["axios","url","BASE_API_URL","requestAPICall","endpoint","payload","callback","dispatch","result","request","length","get","resolve","post","API_SERVER","then","res","catch","err","console","log","response"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,KAAhB;AACA,SAAQC,YAAR,QAA2B,YAA3B,C,CAEA;;AACA,OAAO,MAAMC,cAAc,GAAG,OAAOC,QAAP,EAAiBC,OAAjB,EAA0BC,QAA1B,EAAoCC,QAApC,KAAiD;AAC3E,MAAIC,MAAJ;AACA,QAAMC,OAAO,GAAG,gBAAeJ,OAAf,EAAwBK,MAAxB,KAAmC,CAAnC,GAAuCV,KAAK,CAACW,GAAN,CAAUV,GAAG,CAACW,OAAJ,CAAYV,YAAZ,EAA0BE,QAA1B,CAAV,CAAvC,GAAwFJ,KAAK,CAACa,IAAN,CAAWZ,GAAG,CAACW,OAAJ,CAAYE,UAAZ,EAAwBV,QAAxB,CAAX,EAA8CC,OAA9C,CAAxG;AACA,QAAMI,OAAO,CACZM,IADK,CACCC,GAAD,IAAS;AACXR,IAAAA,MAAM,GAAGQ,GAAT;AACH,GAHK,EAGHC,KAHG,CAGIC,GAAD,IAAS;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,QAAhB;;AACD,QAAI,OAAOf,QAAP,KAAoB,UAApB,IAAkC,CAACY,GAAG,CAACG,QAA3C,EAAqD;AACnDf,MAAAA,QAAQ,CAAC,KAAD,CAAR,CAAgBC,QAAhB;AACH;;AACE,UAAMW,GAAN;AACH,GATK,CAAN;AAUA,SAAOV,MAAP;AACH,CAdM","sourcesContent":["import axios from \"axios\";\nimport url from \"url\";\nimport {BASE_API_URL} from \"../config/\";\n\n// Send API Request and execute function in case of request fail.\nexport const requestAPICall = async (endpoint, payload, callback, dispatch) => {\n    let result: any;\n    const request = Object.entries(payload).length === 0 ? axios.get(url.resolve(BASE_API_URL, endpoint)) : axios.post(url.resolve(API_SERVER, endpoint), payload);\n    await request\n    .then((res) => {\n        result = res;\n    }).catch((err) => {\n        console.log(err.response);\n      \tif (typeof callback === \"function\" && !err.response) {\n        \tcallback(false)(dispatch);\n    \t}\n        throw err;\n    });\n    return result;\n};\n"]},"metadata":{},"sourceType":"module"}