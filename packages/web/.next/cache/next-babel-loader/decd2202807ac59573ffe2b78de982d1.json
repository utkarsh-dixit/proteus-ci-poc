{"ast":null,"code":"import { Platform } from \"react-native\";\nexport function shadowgiver(elevation, color, h = 0, r = 0) {\n  const shadowOffset = {\n    width: 0,\n    height: h ? h : 0.5 * elevation\n  };\n  const shadowOpacity = 0.1;\n  const shadowRadius = r ? r : 0.8 * elevation;\n  const shadowColor = color || 'black'; // console.log(`${shadowOffset.width}px ${shadowOffset.height}px ${shadowRadius}px ${shadowColor}`);\n\n  return Platform.select({\n    ios: {\n      shadowColor: 'black',\n      shadowOpacity,\n      shadowRadius,\n      shadowOffset\n    },\n    android: {\n      elevation\n    },\n    web: {\n      boxShadow: \"\".concat(shadowOffset.width, \"px \").concat(shadowOffset.height, \"px \").concat(shadowRadius, \"px rgba(0,0,0,0.1)\")\n    }\n  });\n}","map":{"version":3,"sources":["/Users/utkarsh/Desktop/headout/ReactNativeOne/node_modules/components/src/util/helpers.js"],"names":["Platform","shadowgiver","elevation","color","h","r","shadowOffset","width","height","shadowOpacity","shadowRadius","shadowColor","select","ios","android","web","boxShadow"],"mappings":"AAAA,SAAQA,QAAR,QAAuB,cAAvB;AACA,OAAO,SAASC,WAAT,CAAqBC,SAArB,EAAgCC,KAAhC,EAAuCC,CAAC,GAAG,CAA3C,EAA8CC,CAAC,GAAG,CAAlD,EAAqD;AACxD,QAAMC,YAAY,GAAG;AAAEC,IAAAA,KAAK,EAAE,CAAT;AAAYC,IAAAA,MAAM,EAAGJ,CAAC,GAAEA,CAAF,GAAM,MAAMF;AAAlC,GAArB;AACA,QAAMO,aAAa,GAAG,GAAtB;AACA,QAAMC,YAAY,GAAGL,CAAC,GAAGA,CAAH,GAAO,MAAMH,SAAnC;AACA,QAAMS,WAAW,GAAGR,KAAK,IAAI,OAA7B,CAJwD,CAKxD;;AACA,SAAOH,QAAQ,CAACY,MAAT,CAAgB;AACnBC,IAAAA,GAAG,EAAE;AACDF,MAAAA,WAAW,EAAE,OADZ;AAEDF,MAAAA,aAFC;AAGDC,MAAAA,YAHC;AAIDJ,MAAAA;AAJC,KADc;AAOnBQ,IAAAA,OAAO,EAAE;AACLZ,MAAAA;AADK,KAPU;AAUnBa,IAAAA,GAAG,EAAE;AACDC,MAAAA,SAAS,YAAKV,YAAY,CAACC,KAAlB,gBAA6BD,YAAY,CAACE,MAA1C,gBAAsDE,YAAtD;AADR;AAVc,GAAhB,CAAP;AAcH","sourcesContent":["import {Platform} from \"react-native\";\nexport function shadowgiver(elevation, color, h = 0, r = 0) {\n    const shadowOffset = { width: 0, height:  h? h : 0.5 * elevation };\n    const shadowOpacity = 0.1;\n    const shadowRadius = r ? r : 0.8 * elevation;\n    const shadowColor = color || 'black';\n    // console.log(`${shadowOffset.width}px ${shadowOffset.height}px ${shadowRadius}px ${shadowColor}`);\n    return Platform.select({\n        ios: {\n            shadowColor: 'black',\n            shadowOpacity,\n            shadowRadius,\n            shadowOffset,\n        },\n        android: {\n            elevation,\n        },\n        web: {\n            boxShadow: `${shadowOffset.width}px ${shadowOffset.height}px ${shadowRadius}px rgba(0,0,0,0.1)`\n        },\n    });\n}"]},"metadata":{},"sourceType":"module"}