{"ast":null,"code":"/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n'use strict';\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar ImageURISourcePropType = _propTypes.default.shape({\n  /**\n   * `uri` is a string representing the resource identifier for the image, which\n   * could be an http address, a local file path, or the name of a static image\n   * resource (which should be wrapped in the `require('./path/to/image.png')`\n   * function).\n   */\n  uri: _propTypes.default.string,\n\n  /**\n   * `bundle` is the iOS asset bundle which the image is included in. This\n   * will default to [NSBundle mainBundle] if not set.\n   * @platform ios\n   */\n  bundle: _propTypes.default.string,\n\n  /**\n   * `method` is the HTTP Method to use. Defaults to GET if not specified.\n   */\n  method: _propTypes.default.string,\n\n  /**\n   * `headers` is an object representing the HTTP headers to send along with the\n   * request for a remote image.\n   */\n  headers: _propTypes.default.objectOf(_propTypes.default.string),\n\n  /**\n   * `body` is the HTTP body to send with the request. This must be a valid\n   * UTF-8 string, and will be sent exactly as specified, with no\n   * additional encoding (e.g. URL-escaping or base64) applied.\n   */\n  body: _propTypes.default.string,\n\n  /**\n   * `cache` determines how the requests handles potentially cached\n   * responses.\n   *\n   * - `default`: Use the native platforms default strategy. `useProtocolCachePolicy` on iOS.\n   *\n   * - `reload`: The data for the URL will be loaded from the originating source.\n   * No existing cache data should be used to satisfy a URL load request.\n   *\n   * - `force-cache`: The existing cached data will be used to satisfy the request,\n   * regardless of its age or expiration date. If there is no existing data in the cache\n   * corresponding the request, the data is loaded from the originating source.\n   *\n   * - `only-if-cached`: The existing cache data will be used to satisfy a request, regardless of\n   * its age or expiration date. If there is no existing data in the cache corresponding\n   * to a URL load request, no attempt is made to load the data from the originating source,\n   * and the load is considered to have failed.\n   *\n   * @platform ios\n   */\n  cache: _propTypes.default.oneOf(['default', 'reload', 'force-cache', 'only-if-cached']),\n\n  /**\n   * `width` and `height` can be specified if known at build time, in which case\n   * these will be used to set the default `<Image/>` component dimensions.\n   */\n  width: _propTypes.default.number,\n  height: _propTypes.default.number,\n\n  /**\n   * `scale` is used to indicate the scale factor of the image. Defaults to 1.0 if\n   * unspecified, meaning that one image pixel equates to one display point / DIP.\n   */\n  scale: _propTypes.default.number\n});\n\nvar ImageSourcePropType = _propTypes.default.oneOfType([ImageURISourcePropType, // Opaque type returned by require('./image.jpg')\n_propTypes.default.number, _propTypes.default.string, // Multiple sources\n_propTypes.default.arrayOf(ImageURISourcePropType)]);\n\nvar _default = ImageSourcePropType;\nexports.default = _default;\nmodule.exports = exports.default;","map":{"version":3,"sources":["/Users/utkarsh/Desktop/headout/ReactNativeOne/node_modules/react-native-web/dist/cjs/exports/Image/ImageSourcePropType.js"],"names":["exports","__esModule","default","_propTypes","_interopRequireDefault","require","obj","ImageURISourcePropType","shape","uri","string","bundle","method","headers","objectOf","body","cache","oneOf","width","number","height","scale","ImageSourcePropType","oneOfType","arrayOf","_default","module"],"mappings":"AAAA;;;;;;;;AAQA;;AAEAA,OAAO,CAACC,UAAR,GAAqB,IAArB;AACAD,OAAO,CAACE,OAAR,GAAkB,KAAK,CAAvB;;AAEA,IAAIC,UAAU,GAAGC,sBAAsB,CAACC,OAAO,CAAC,YAAD,CAAR,CAAvC;;AAEA,SAASD,sBAAT,CAAgCE,GAAhC,EAAqC;AAAE,SAAOA,GAAG,IAAIA,GAAG,CAACL,UAAX,GAAwBK,GAAxB,GAA8B;AAAEJ,IAAAA,OAAO,EAAEI;AAAX,GAArC;AAAwD;;AAE/F,IAAIC,sBAAsB,GAAGJ,UAAU,CAACD,OAAX,CAAmBM,KAAnB,CAAyB;AACpD;;;;;;AAMAC,EAAAA,GAAG,EAAEN,UAAU,CAACD,OAAX,CAAmBQ,MAP4B;;AASpD;;;;;AAKAC,EAAAA,MAAM,EAAER,UAAU,CAACD,OAAX,CAAmBQ,MAdyB;;AAgBpD;;;AAGAE,EAAAA,MAAM,EAAET,UAAU,CAACD,OAAX,CAAmBQ,MAnByB;;AAqBpD;;;;AAIAG,EAAAA,OAAO,EAAEV,UAAU,CAACD,OAAX,CAAmBY,QAAnB,CAA4BX,UAAU,CAACD,OAAX,CAAmBQ,MAA/C,CAzB2C;;AA2BpD;;;;;AAKAK,EAAAA,IAAI,EAAEZ,UAAU,CAACD,OAAX,CAAmBQ,MAhC2B;;AAkCpD;;;;;;;;;;;;;;;;;;;;AAoBAM,EAAAA,KAAK,EAAEb,UAAU,CAACD,OAAX,CAAmBe,KAAnB,CAAyB,CAAC,SAAD,EAAY,QAAZ,EAAsB,aAAtB,EAAqC,gBAArC,CAAzB,CAtD6C;;AAwDpD;;;;AAIAC,EAAAA,KAAK,EAAEf,UAAU,CAACD,OAAX,CAAmBiB,MA5D0B;AA6DpDC,EAAAA,MAAM,EAAEjB,UAAU,CAACD,OAAX,CAAmBiB,MA7DyB;;AA+DpD;;;;AAIAE,EAAAA,KAAK,EAAElB,UAAU,CAACD,OAAX,CAAmBiB;AAnE0B,CAAzB,CAA7B;;AAsEA,IAAIG,mBAAmB,GAAGnB,UAAU,CAACD,OAAX,CAAmBqB,SAAnB,CAA6B,CAAChB,sBAAD,EAAyB;AAChFJ,UAAU,CAACD,OAAX,CAAmBiB,MADoC,EAC5BhB,UAAU,CAACD,OAAX,CAAmBQ,MADS,EACD;AACtDP,UAAU,CAACD,OAAX,CAAmBsB,OAAnB,CAA2BjB,sBAA3B,CAFuD,CAA7B,CAA1B;;AAIA,IAAIkB,QAAQ,GAAGH,mBAAf;AACAtB,OAAO,CAACE,OAAR,GAAkBuB,QAAlB;AACAC,MAAM,CAAC1B,OAAP,GAAiBA,OAAO,CAACE,OAAzB","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n'use strict';\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar ImageURISourcePropType = _propTypes.default.shape({\n  /**\n   * `uri` is a string representing the resource identifier for the image, which\n   * could be an http address, a local file path, or the name of a static image\n   * resource (which should be wrapped in the `require('./path/to/image.png')`\n   * function).\n   */\n  uri: _propTypes.default.string,\n\n  /**\n   * `bundle` is the iOS asset bundle which the image is included in. This\n   * will default to [NSBundle mainBundle] if not set.\n   * @platform ios\n   */\n  bundle: _propTypes.default.string,\n\n  /**\n   * `method` is the HTTP Method to use. Defaults to GET if not specified.\n   */\n  method: _propTypes.default.string,\n\n  /**\n   * `headers` is an object representing the HTTP headers to send along with the\n   * request for a remote image.\n   */\n  headers: _propTypes.default.objectOf(_propTypes.default.string),\n\n  /**\n   * `body` is the HTTP body to send with the request. This must be a valid\n   * UTF-8 string, and will be sent exactly as specified, with no\n   * additional encoding (e.g. URL-escaping or base64) applied.\n   */\n  body: _propTypes.default.string,\n\n  /**\n   * `cache` determines how the requests handles potentially cached\n   * responses.\n   *\n   * - `default`: Use the native platforms default strategy. `useProtocolCachePolicy` on iOS.\n   *\n   * - `reload`: The data for the URL will be loaded from the originating source.\n   * No existing cache data should be used to satisfy a URL load request.\n   *\n   * - `force-cache`: The existing cached data will be used to satisfy the request,\n   * regardless of its age or expiration date. If there is no existing data in the cache\n   * corresponding the request, the data is loaded from the originating source.\n   *\n   * - `only-if-cached`: The existing cache data will be used to satisfy a request, regardless of\n   * its age or expiration date. If there is no existing data in the cache corresponding\n   * to a URL load request, no attempt is made to load the data from the originating source,\n   * and the load is considered to have failed.\n   *\n   * @platform ios\n   */\n  cache: _propTypes.default.oneOf(['default', 'reload', 'force-cache', 'only-if-cached']),\n\n  /**\n   * `width` and `height` can be specified if known at build time, in which case\n   * these will be used to set the default `<Image/>` component dimensions.\n   */\n  width: _propTypes.default.number,\n  height: _propTypes.default.number,\n\n  /**\n   * `scale` is used to indicate the scale factor of the image. Defaults to 1.0 if\n   * unspecified, meaning that one image pixel equates to one display point / DIP.\n   */\n  scale: _propTypes.default.number\n});\n\nvar ImageSourcePropType = _propTypes.default.oneOfType([ImageURISourcePropType, // Opaque type returned by require('./image.jpg')\n_propTypes.default.number, _propTypes.default.string, // Multiple sources\n_propTypes.default.arrayOf(ImageURISourcePropType)]);\n\nvar _default = ImageSourcePropType;\nexports.default = _default;\nmodule.exports = exports.default;"]},"metadata":{},"sourceType":"script"}