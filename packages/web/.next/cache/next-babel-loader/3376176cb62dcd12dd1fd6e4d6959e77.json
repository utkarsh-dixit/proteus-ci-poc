{"ast":null,"code":"\"use strict\";\n\nvar _Promise = require(\"@babel/runtime-corejs2/core-js/promise\");\n\nvar _JSON$stringify = require(\"@babel/runtime-corejs2/core-js/json/stringify\");\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _deepAssign = _interopRequireDefault(require(\"deep-assign\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\n * Copyright (c) Nicolas Gallagher.\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\n\nvar mergeLocalStorageItem = function mergeLocalStorageItem(key, value) {\n  var oldValue = window.localStorage.getItem(key);\n  var oldObject = JSON.parse(oldValue);\n  var newObject = JSON.parse(value);\n\n  var nextValue = _JSON$stringify((0, _deepAssign.default)({}, oldObject, newObject));\n\n  window.localStorage.setItem(key, nextValue);\n};\n\nvar createPromise = function createPromise(getValue, callback) {\n  return new _Promise(function (resolve, reject) {\n    try {\n      var value = getValue();\n\n      if (callback) {\n        callback(null, value);\n      }\n\n      resolve(value);\n    } catch (err) {\n      if (callback) {\n        callback(err);\n      }\n\n      reject(err);\n    }\n  });\n};\n\nvar createPromiseAll = function createPromiseAll(promises, callback, processResult) {\n  return _Promise.all(promises).then(function (result) {\n    var value = processResult ? processResult(result) : null;\n    callback && callback(null, value);\n    return _Promise.resolve(value);\n  }, function (errors) {\n    callback && callback(errors);\n    return _Promise.reject(errors);\n  });\n};\n\nvar AsyncStorage =\n/*#__PURE__*/\nfunction () {\n  function AsyncStorage() {}\n  /**\n   * Erases *all* AsyncStorage for the domain.\n   */\n\n\n  AsyncStorage.clear = function clear(callback) {\n    return createPromise(function () {\n      window.localStorage.clear();\n    }, callback);\n  }\n  /**\n   * (stub) Flushes any pending requests using a single batch call to get the data.\n   */\n  ;\n\n  AsyncStorage.flushGetRequests = function flushGetRequests() {}\n  /**\n   * Gets *all* keys known to the app, for all callers, libraries, etc.\n   */\n  ;\n\n  AsyncStorage.getAllKeys = function getAllKeys(callback) {\n    return createPromise(function () {\n      var numberOfKeys = window.localStorage.length;\n      var keys = [];\n\n      for (var i = 0; i < numberOfKeys; i += 1) {\n        var key = window.localStorage.key(i);\n        keys.push(key);\n      }\n\n      return keys;\n    }, callback);\n  }\n  /**\n   * Fetches `key` value.\n   */\n  ;\n\n  AsyncStorage.getItem = function getItem(key, callback) {\n    return createPromise(function () {\n      return window.localStorage.getItem(key);\n    }, callback);\n  }\n  /**\n   * multiGet resolves to an array of key-value pair arrays that matches the\n   * input format of multiSet.\n   *\n   *   multiGet(['k1', 'k2']) -> [['k1', 'val1'], ['k2', 'val2']]\n   */\n  ;\n\n  AsyncStorage.multiGet = function multiGet(keys, callback) {\n    var promises = keys.map(function (key) {\n      return AsyncStorage.getItem(key);\n    });\n\n    var processResult = function processResult(result) {\n      return result.map(function (value, i) {\n        return [keys[i], value];\n      });\n    };\n\n    return createPromiseAll(promises, callback, processResult);\n  }\n  /**\n   * Sets `value` for `key`.\n   */\n  ;\n\n  AsyncStorage.setItem = function setItem(key, value, callback) {\n    return createPromise(function () {\n      window.localStorage.setItem(key, value);\n    }, callback);\n  }\n  /**\n   * Takes an array of key-value array pairs.\n   *   multiSet([['k1', 'val1'], ['k2', 'val2']])\n   */\n  ;\n\n  AsyncStorage.multiSet = function multiSet(keyValuePairs, callback) {\n    var promises = keyValuePairs.map(function (item) {\n      return AsyncStorage.setItem(item[0], item[1]);\n    });\n    return createPromiseAll(promises, callback);\n  }\n  /**\n   * Merges existing value with input value, assuming they are stringified JSON.\n   */\n  ;\n\n  AsyncStorage.mergeItem = function mergeItem(key, value, callback) {\n    return createPromise(function () {\n      mergeLocalStorageItem(key, value);\n    }, callback);\n  }\n  /**\n   * Takes an array of key-value array pairs and merges them with existing\n   * values, assuming they are stringified JSON.\n   *\n   *   multiMerge([['k1', 'val1'], ['k2', 'val2']])\n   */\n  ;\n\n  AsyncStorage.multiMerge = function multiMerge(keyValuePairs, callback) {\n    var promises = keyValuePairs.map(function (item) {\n      return AsyncStorage.mergeItem(item[0], item[1]);\n    });\n    return createPromiseAll(promises, callback);\n  }\n  /**\n   * Removes a `key`\n   */\n  ;\n\n  AsyncStorage.removeItem = function removeItem(key, callback) {\n    return createPromise(function () {\n      return window.localStorage.removeItem(key);\n    }, callback);\n  }\n  /**\n   * Delete all the keys in the `keys` array.\n   */\n  ;\n\n  AsyncStorage.multiRemove = function multiRemove(keys, callback) {\n    var promises = keys.map(function (key) {\n      return AsyncStorage.removeItem(key);\n    });\n    return createPromiseAll(promises, callback);\n  };\n\n  return AsyncStorage;\n}();\n\nexports.default = AsyncStorage;\nmodule.exports = exports.default;","map":{"version":3,"sources":["/Users/utkarsh/Desktop/headout/ReactNativeOne/node_modules/react-native-web/dist/cjs/exports/AsyncStorage/index.js"],"names":["exports","__esModule","default","_deepAssign","_interopRequireDefault","require","obj","mergeLocalStorageItem","key","value","oldValue","window","localStorage","getItem","oldObject","JSON","parse","newObject","nextValue","setItem","createPromise","getValue","callback","resolve","reject","err","createPromiseAll","promises","processResult","all","then","result","errors","AsyncStorage","clear","flushGetRequests","getAllKeys","numberOfKeys","length","keys","i","push","multiGet","map","multiSet","keyValuePairs","item","mergeItem","multiMerge","removeItem","multiRemove","module"],"mappings":"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","sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _deepAssign = _interopRequireDefault(require(\"deep-assign\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Copyright (c) Nicolas Gallagher.\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nvar mergeLocalStorageItem = function mergeLocalStorageItem(key, value) {\n  var oldValue = window.localStorage.getItem(key);\n  var oldObject = JSON.parse(oldValue);\n  var newObject = JSON.parse(value);\n  var nextValue = JSON.stringify((0, _deepAssign.default)({}, oldObject, newObject));\n  window.localStorage.setItem(key, nextValue);\n};\n\nvar createPromise = function createPromise(getValue, callback) {\n  return new Promise(function (resolve, reject) {\n    try {\n      var value = getValue();\n\n      if (callback) {\n        callback(null, value);\n      }\n\n      resolve(value);\n    } catch (err) {\n      if (callback) {\n        callback(err);\n      }\n\n      reject(err);\n    }\n  });\n};\n\nvar createPromiseAll = function createPromiseAll(promises, callback, processResult) {\n  return Promise.all(promises).then(function (result) {\n    var value = processResult ? processResult(result) : null;\n    callback && callback(null, value);\n    return Promise.resolve(value);\n  }, function (errors) {\n    callback && callback(errors);\n    return Promise.reject(errors);\n  });\n};\n\nvar AsyncStorage =\n/*#__PURE__*/\nfunction () {\n  function AsyncStorage() {}\n\n  /**\n   * Erases *all* AsyncStorage for the domain.\n   */\n  AsyncStorage.clear = function clear(callback) {\n    return createPromise(function () {\n      window.localStorage.clear();\n    }, callback);\n  }\n  /**\n   * (stub) Flushes any pending requests using a single batch call to get the data.\n   */\n  ;\n\n  AsyncStorage.flushGetRequests = function flushGetRequests() {}\n  /**\n   * Gets *all* keys known to the app, for all callers, libraries, etc.\n   */\n  ;\n\n  AsyncStorage.getAllKeys = function getAllKeys(callback) {\n    return createPromise(function () {\n      var numberOfKeys = window.localStorage.length;\n      var keys = [];\n\n      for (var i = 0; i < numberOfKeys; i += 1) {\n        var key = window.localStorage.key(i);\n        keys.push(key);\n      }\n\n      return keys;\n    }, callback);\n  }\n  /**\n   * Fetches `key` value.\n   */\n  ;\n\n  AsyncStorage.getItem = function getItem(key, callback) {\n    return createPromise(function () {\n      return window.localStorage.getItem(key);\n    }, callback);\n  }\n  /**\n   * multiGet resolves to an array of key-value pair arrays that matches the\n   * input format of multiSet.\n   *\n   *   multiGet(['k1', 'k2']) -> [['k1', 'val1'], ['k2', 'val2']]\n   */\n  ;\n\n  AsyncStorage.multiGet = function multiGet(keys, callback) {\n    var promises = keys.map(function (key) {\n      return AsyncStorage.getItem(key);\n    });\n\n    var processResult = function processResult(result) {\n      return result.map(function (value, i) {\n        return [keys[i], value];\n      });\n    };\n\n    return createPromiseAll(promises, callback, processResult);\n  }\n  /**\n   * Sets `value` for `key`.\n   */\n  ;\n\n  AsyncStorage.setItem = function setItem(key, value, callback) {\n    return createPromise(function () {\n      window.localStorage.setItem(key, value);\n    }, callback);\n  }\n  /**\n   * Takes an array of key-value array pairs.\n   *   multiSet([['k1', 'val1'], ['k2', 'val2']])\n   */\n  ;\n\n  AsyncStorage.multiSet = function multiSet(keyValuePairs, callback) {\n    var promises = keyValuePairs.map(function (item) {\n      return AsyncStorage.setItem(item[0], item[1]);\n    });\n    return createPromiseAll(promises, callback);\n  }\n  /**\n   * Merges existing value with input value, assuming they are stringified JSON.\n   */\n  ;\n\n  AsyncStorage.mergeItem = function mergeItem(key, value, callback) {\n    return createPromise(function () {\n      mergeLocalStorageItem(key, value);\n    }, callback);\n  }\n  /**\n   * Takes an array of key-value array pairs and merges them with existing\n   * values, assuming they are stringified JSON.\n   *\n   *   multiMerge([['k1', 'val1'], ['k2', 'val2']])\n   */\n  ;\n\n  AsyncStorage.multiMerge = function multiMerge(keyValuePairs, callback) {\n    var promises = keyValuePairs.map(function (item) {\n      return AsyncStorage.mergeItem(item[0], item[1]);\n    });\n    return createPromiseAll(promises, callback);\n  }\n  /**\n   * Removes a `key`\n   */\n  ;\n\n  AsyncStorage.removeItem = function removeItem(key, callback) {\n    return createPromise(function () {\n      return window.localStorage.removeItem(key);\n    }, callback);\n  }\n  /**\n   * Delete all the keys in the `keys` array.\n   */\n  ;\n\n  AsyncStorage.multiRemove = function multiRemove(keys, callback) {\n    var promises = keys.map(function (key) {\n      return AsyncStorage.removeItem(key);\n    });\n    return createPromiseAll(promises, callback);\n  };\n\n  return AsyncStorage;\n}();\n\nexports.default = AsyncStorage;\nmodule.exports = exports.default;"]},"metadata":{},"sourceType":"script"}