{"ast":null,"code":"\"use strict\";\n\nvar _JSON$stringify = require(\"@babel/runtime-corejs2/core-js/json/stringify\");\n\nvar _Object$defineProperty = require(\"@babel/runtime-corejs2/core-js/object/define-property\");\n\nvar _Object$assign = require(\"@babel/runtime-corejs2/core-js/object/assign\");\n\nvar _Object$create = require(\"@babel/runtime-corejs2/core-js/object/create\");\n\nvar _Object$setPrototypeOf = require(\"@babel/runtime-corejs2/core-js/object/set-prototype-of\");\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = _Object$setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? _Object$create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __assign = this && this.__assign || function () {\n  __assign = _Object$assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\n_Object$defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/***\n * DONE: Reduce layout processing on data insert\n * DONE: Add notify data set changed and notify data insert option in data source\n * DONE: Add on end reached callback\n * DONE: Make another class for render stack generator\n * DONE: Simplify rendering a loading footer\n * DONE: Anchor first visible index on any insert/delete data wise\n * DONE: Build Scroll to index\n * DONE: Give viewability callbacks\n * DONE: Add full render logic in cases like change of dimensions\n * DONE: Fix all proptypes\n * DONE: Add Initial render Index support\n * DONE: Add animated scroll to web scrollviewer\n * DONE: Animate list view transition, including add/remove\n * DONE: Implement sticky headers and footers\n * TODO: Destroy less frequently used items in recycle pool, this will help in case of too many types.\n * TODO: Make viewability callbacks configurable\n * TODO: Observe size changes on web to optimize for reflowability\n * TODO: Solve //TSI\n */\n\n\nvar debounce = require(\"lodash.debounce\");\n\nvar PropTypes = require(\"prop-types\");\n\nvar React = require(\"react\");\n\nvar ts_object_utils_1 = require(\"ts-object-utils\");\n\nvar ContextProvider_1 = require(\"./dependencies/ContextProvider\");\n\nvar DataProvider_1 = require(\"./dependencies/DataProvider\");\n\nvar LayoutProvider_1 = require(\"./dependencies/LayoutProvider\");\n\nvar CustomError_1 = require(\"./exceptions/CustomError\");\n\nvar RecyclerListViewExceptions_1 = require(\"./exceptions/RecyclerListViewExceptions\");\n\nvar Constants_1 = require(\"./constants/Constants\");\n\nvar Messages_1 = require(\"./constants/Messages\");\n\nvar VirtualRenderer_1 = require(\"./VirtualRenderer\");\n\nvar ItemAnimator_1 = require(\"./ItemAnimator\"); //#if [REACT-NATIVE]\n\n\nvar ScrollComponent_1 = require(\"../platform/reactnative/scrollcomponent/ScrollComponent\");\n\nvar ViewRenderer_1 = require(\"../platform/reactnative/viewrenderer/ViewRenderer\");\n\nvar DefaultJSItemAnimator_1 = require(\"../platform/reactnative/itemanimators/defaultjsanimator/DefaultJSItemAnimator\");\n\nvar react_native_1 = require(\"react-native\");\n\nvar IS_WEB = !react_native_1.Platform || react_native_1.Platform.OS === \"web\";\n\nvar RecyclerListView =\n/** @class */\nfunction (_super) {\n  __extends(RecyclerListView, _super);\n\n  function RecyclerListView(props, context) {\n    var _this = _super.call(this, props, context) || this;\n\n    _this.refreshRequestDebouncer = debounce(function (executable) {\n      executable();\n    });\n    _this._onEndReachedCalled = false;\n    _this._initComplete = false;\n    _this._relayoutReqIndex = -1;\n    _this._params = {\n      initialOffset: 0,\n      initialRenderIndex: 0,\n      isHorizontal: false,\n      itemCount: 0,\n      renderAheadOffset: 250\n    };\n    _this._layout = {\n      height: 0,\n      width: 0\n    };\n    _this._pendingScrollToOffset = null;\n    _this._tempDim = {\n      height: 0,\n      width: 0\n    };\n    _this._initialOffset = 0;\n    _this._scrollComponent = null;\n    _this._defaultItemAnimator = new DefaultJSItemAnimator_1.DefaultJSItemAnimator();\n\n    _this.scrollToOffset = function (x, y, animate) {\n      if (animate === void 0) {\n        animate = false;\n      }\n\n      if (_this._scrollComponent) {\n        if (_this.props.isHorizontal) {\n          y = 0;\n        } else {\n          x = 0;\n        }\n\n        _this._scrollComponent.scrollTo(x, y, animate);\n      }\n    };\n\n    _this._onSizeChanged = function (layout) {\n      var hasHeightChanged = _this._layout.height !== layout.height;\n      var hasWidthChanged = _this._layout.width !== layout.width;\n      _this._layout.height = layout.height;\n      _this._layout.width = layout.width;\n\n      if (layout.height === 0 || layout.width === 0) {\n        throw new CustomError_1.default(RecyclerListViewExceptions_1.default.layoutException);\n      }\n\n      if (!_this._initComplete) {\n        _this._initComplete = true;\n\n        _this._initTrackers();\n\n        _this._processOnEndReached();\n      } else {\n        if (hasHeightChanged && hasWidthChanged || hasHeightChanged && _this.props.isHorizontal || hasWidthChanged && !_this.props.isHorizontal) {\n          _this._checkAndChangeLayouts(_this.props, true);\n        } else {\n          _this._refreshViewability();\n        }\n      }\n    };\n\n    _this._renderStackWhenReady = function (stack) {\n      _this.setState(function () {\n        return {\n          renderStack: stack\n        };\n      });\n    };\n\n    _this._dataHasChanged = function (row1, row2) {\n      return _this.props.dataProvider.rowHasChanged(row1, row2);\n    };\n\n    _this._onViewContainerSizeChange = function (dim, index) {\n      //Cannot be null here\n      var layoutManager = _this._virtualRenderer.getLayoutManager();\n\n      if (_this.props.debugHandlers && _this.props.debugHandlers.resizeDebugHandler) {\n        var itemRect = layoutManager.getLayouts()[index];\n\n        _this.props.debugHandlers.resizeDebugHandler.resizeDebug({\n          width: itemRect.width,\n          height: itemRect.height\n        }, dim, index);\n      }\n\n      if (layoutManager.overrideLayout(index, dim)) {\n        if (_this._relayoutReqIndex === -1) {\n          _this._relayoutReqIndex = index;\n        } else {\n          _this._relayoutReqIndex = Math.min(_this._relayoutReqIndex, index);\n        }\n\n        _this._queueStateRefresh();\n      }\n    };\n\n    _this._onScroll = function (offsetX, offsetY, rawEvent) {\n      //Adjusting offsets using distanceFromWindow\n      _this._virtualRenderer.updateOffset(offsetX, offsetY, -_this.props.distanceFromWindow, true);\n\n      if (_this.props.onScroll) {\n        _this.props.onScroll(rawEvent, offsetX, offsetY);\n      }\n\n      _this._processOnEndReached();\n    };\n\n    _this._virtualRenderer = new VirtualRenderer_1.default(_this._renderStackWhenReady, function (offset) {\n      _this._pendingScrollToOffset = offset;\n    }, function (index) {\n      return _this.props.dataProvider.getStableId(index);\n    }, !props.disableRecycling);\n    _this.state = {\n      internalSnapshot: {},\n      renderStack: {}\n    };\n    return _this;\n  }\n\n  RecyclerListView.prototype.componentWillReceiveProps = function (newProps) {\n    this._assertDependencyPresence(newProps);\n\n    this._checkAndChangeLayouts(newProps);\n\n    if (!this.props.onVisibleIndicesChanged) {\n      this._virtualRenderer.removeVisibleItemsListener();\n    }\n\n    if (this.props.onVisibleIndexesChanged) {\n      throw new CustomError_1.default(RecyclerListViewExceptions_1.default.usingOldVisibleIndexesChangedParam);\n    }\n\n    if (this.props.onVisibleIndicesChanged) {\n      this._virtualRenderer.attachVisibleItemsListener(this.props.onVisibleIndicesChanged);\n    }\n  };\n\n  RecyclerListView.prototype.componentDidUpdate = function () {\n    var _this = this;\n\n    if (this._pendingScrollToOffset) {\n      var offset_1 = this._pendingScrollToOffset;\n      this._pendingScrollToOffset = null;\n\n      if (this.props.isHorizontal) {\n        offset_1.y = 0;\n      } else {\n        offset_1.x = 0;\n      }\n\n      setTimeout(function () {\n        _this.scrollToOffset(offset_1.x, offset_1.y, false);\n      }, 0);\n    }\n\n    this._processOnEndReached();\n\n    this._checkAndChangeLayouts(this.props);\n\n    if (this.props.dataProvider.getSize() === 0) {\n      console.warn(Messages_1.Messages.WARN_NO_DATA); //tslint:disable-line\n    }\n  };\n\n  RecyclerListView.prototype.componentWillUnmount = function () {\n    if (this.props.contextProvider) {\n      var uniqueKey = this.props.contextProvider.getUniqueKey();\n\n      if (uniqueKey) {\n        this.props.contextProvider.save(uniqueKey + Constants_1.Constants.CONTEXT_PROVIDER_OFFSET_KEY_SUFFIX, this.getCurrentScrollOffset());\n\n        if (this.props.forceNonDeterministicRendering) {\n          if (this._virtualRenderer) {\n            var layoutManager = this._virtualRenderer.getLayoutManager();\n\n            if (layoutManager) {\n              var layoutsToCache = layoutManager.getLayouts();\n              this.props.contextProvider.save(uniqueKey + Constants_1.Constants.CONTEXT_PROVIDER_LAYOUT_KEY_SUFFIX, _JSON$stringify({\n                layoutArray: layoutsToCache\n              }));\n            }\n          }\n        }\n      }\n    }\n  };\n\n  RecyclerListView.prototype.componentWillMount = function () {\n    if (this.props.contextProvider) {\n      var uniqueKey = this.props.contextProvider.getUniqueKey();\n\n      if (uniqueKey) {\n        var offset = this.props.contextProvider.get(uniqueKey + Constants_1.Constants.CONTEXT_PROVIDER_OFFSET_KEY_SUFFIX);\n\n        if (typeof offset === \"number\" && offset > 0) {\n          this._initialOffset = offset;\n\n          if (this.props.onRecreate) {\n            this.props.onRecreate({\n              lastOffset: this._initialOffset\n            });\n          }\n\n          this.props.contextProvider.remove(uniqueKey + Constants_1.Constants.CONTEXT_PROVIDER_OFFSET_KEY_SUFFIX);\n        }\n\n        if (this.props.forceNonDeterministicRendering) {\n          var cachedLayouts = this.props.contextProvider.get(uniqueKey + Constants_1.Constants.CONTEXT_PROVIDER_LAYOUT_KEY_SUFFIX);\n\n          if (cachedLayouts && typeof cachedLayouts === \"string\") {\n            this._cachedLayouts = JSON.parse(cachedLayouts).layoutArray;\n            this.props.contextProvider.remove(uniqueKey + Constants_1.Constants.CONTEXT_PROVIDER_LAYOUT_KEY_SUFFIX);\n          }\n        }\n      }\n    }\n  };\n\n  RecyclerListView.prototype.scrollToIndex = function (index, animate) {\n    var layoutManager = this._virtualRenderer.getLayoutManager();\n\n    if (layoutManager) {\n      var offsets = layoutManager.getOffsetForIndex(index);\n      this.scrollToOffset(offsets.x, offsets.y, animate);\n    } else {\n      console.warn(Messages_1.Messages.WARN_SCROLL_TO_INDEX); //tslint:disable-line\n    }\n  };\n\n  RecyclerListView.prototype.scrollToItem = function (data, animate) {\n    var count = this.props.dataProvider.getSize();\n\n    for (var i = 0; i < count; i++) {\n      if (this.props.dataProvider.getDataForIndex(i) === data) {\n        this.scrollToIndex(i, animate);\n        break;\n      }\n    }\n  };\n\n  RecyclerListView.prototype.getLayout = function (index) {\n    var layoutManager = this._virtualRenderer.getLayoutManager();\n\n    return layoutManager ? layoutManager.getLayouts()[index] : undefined;\n  };\n\n  RecyclerListView.prototype.scrollToTop = function (animate) {\n    this.scrollToOffset(0, 0, animate);\n  };\n\n  RecyclerListView.prototype.scrollToEnd = function (animate) {\n    var lastIndex = this.props.dataProvider.getSize() - 1;\n    this.scrollToIndex(lastIndex, animate);\n  }; // You can use requestAnimationFrame callback to change renderAhead in multiple frames to enable advanced progressive\n  // rendering when view types are very complex. This method returns a boolean saying if the update was committed. Retry in\n  // the next frame if you get a failure (if mount wasn't complete). Value should be greater than or equal to 0;\n  // Very useful when you have a page where you need a large renderAheadOffset. Setting it at once will slow down the load and\n  // this will help mitigate that.\n\n\n  RecyclerListView.prototype.updateRenderAheadOffset = function (renderAheadOffset) {\n    var viewabilityTracker = this._virtualRenderer.getViewabilityTracker();\n\n    if (viewabilityTracker) {\n      viewabilityTracker.updateRenderAheadOffset(renderAheadOffset);\n      return true;\n    }\n\n    return false;\n  };\n\n  RecyclerListView.prototype.getCurrentRenderAheadOffset = function () {\n    var viewabilityTracker = this._virtualRenderer.getViewabilityTracker();\n\n    if (viewabilityTracker) {\n      return viewabilityTracker.getCurrentRenderAheadOffset();\n    }\n\n    return this.props.renderAheadOffset;\n  };\n\n  RecyclerListView.prototype.getCurrentScrollOffset = function () {\n    var viewabilityTracker = this._virtualRenderer.getViewabilityTracker();\n\n    return viewabilityTracker ? viewabilityTracker.getLastActualOffset() : 0;\n  };\n\n  RecyclerListView.prototype.findApproxFirstVisibleIndex = function () {\n    var viewabilityTracker = this._virtualRenderer.getViewabilityTracker();\n\n    return viewabilityTracker ? viewabilityTracker.findFirstLogicallyVisibleIndex() : 0;\n  };\n\n  RecyclerListView.prototype.getRenderedSize = function () {\n    return this._layout;\n  };\n\n  RecyclerListView.prototype.getContentDimension = function () {\n    return this._virtualRenderer.getLayoutDimension();\n  }; // Force Rerender forcefully to update view renderer. Use this in rare circumstances\n\n\n  RecyclerListView.prototype.forceRerender = function () {\n    this.setState({\n      internalSnapshot: {}\n    });\n  };\n\n  RecyclerListView.prototype.render = function () {\n    //TODO:Talha\n    // const {\n    //     layoutProvider,\n    //     dataProvider,\n    //     contextProvider,\n    //     renderAheadOffset,\n    //     onEndReached,\n    //     onEndReachedThreshold,\n    //     onVisibleIndicesChanged,\n    //     initialOffset,\n    //     initialRenderIndex,\n    //     disableRecycling,\n    //     forceNonDeterministicRendering,\n    //     extendedState,\n    //     itemAnimator,\n    //     rowRenderer,\n    //     ...props,\n    // } = this.props;\n    var _this = this;\n\n    return React.createElement(ScrollComponent_1.default, __assign({\n      ref: function (scrollComponent) {\n        return _this._scrollComponent = scrollComponent;\n      }\n    }, this.props, this.props.scrollViewProps, {\n      onScroll: this._onScroll,\n      onSizeChanged: this._onSizeChanged,\n      contentHeight: this._initComplete ? this._virtualRenderer.getLayoutDimension().height : 0,\n      contentWidth: this._initComplete ? this._virtualRenderer.getLayoutDimension().width : 0\n    }), this._generateRenderStack());\n  };\n\n  RecyclerListView.prototype.getVirtualRenderer = function () {\n    return this._virtualRenderer;\n  };\n\n  RecyclerListView.prototype._checkAndChangeLayouts = function (newProps, forceFullRender) {\n    this._params.isHorizontal = newProps.isHorizontal;\n    this._params.itemCount = newProps.dataProvider.getSize();\n\n    this._virtualRenderer.setParamsAndDimensions(this._params, this._layout);\n\n    this._virtualRenderer.setLayoutProvider(newProps.layoutProvider);\n\n    if (newProps.dataProvider.hasStableIds() && this.props.dataProvider !== newProps.dataProvider && newProps.dataProvider.requiresDataChangeHandling()) {\n      this._virtualRenderer.handleDataSetChange(newProps.dataProvider, this.props.optimizeForInsertDeleteAnimations);\n    }\n\n    if (forceFullRender || this.props.layoutProvider !== newProps.layoutProvider || this.props.isHorizontal !== newProps.isHorizontal) {\n      //TODO:Talha use old layout manager\n      this._virtualRenderer.setLayoutManager(newProps.layoutProvider.newLayoutManager(this._layout, newProps.isHorizontal));\n\n      if (newProps.layoutProvider.shouldRefreshWithAnchoring) {\n        this._virtualRenderer.refreshWithAnchor();\n      } else {\n        this._virtualRenderer.refresh();\n      }\n\n      this._refreshViewability();\n    } else if (this.props.dataProvider !== newProps.dataProvider) {\n      if (newProps.dataProvider.getSize() > this.props.dataProvider.getSize()) {\n        this._onEndReachedCalled = false;\n      }\n\n      var layoutManager = this._virtualRenderer.getLayoutManager();\n\n      if (layoutManager) {\n        layoutManager.relayoutFromIndex(newProps.dataProvider.getFirstIndexToProcessInternal(), newProps.dataProvider.getSize());\n\n        this._virtualRenderer.refresh();\n      }\n    } else if (this._relayoutReqIndex >= 0) {\n      var layoutManager = this._virtualRenderer.getLayoutManager();\n\n      if (layoutManager) {\n        var dataProviderSize = newProps.dataProvider.getSize();\n        layoutManager.relayoutFromIndex(Math.min(Math.max(dataProviderSize - 1, 0), this._relayoutReqIndex), dataProviderSize);\n        this._relayoutReqIndex = -1;\n\n        this._refreshViewability();\n      }\n    }\n  };\n\n  RecyclerListView.prototype._refreshViewability = function () {\n    this._virtualRenderer.refresh();\n\n    this._queueStateRefresh();\n  };\n\n  RecyclerListView.prototype._queueStateRefresh = function () {\n    var _this = this;\n\n    this.refreshRequestDebouncer(function () {\n      _this.setState(function (prevState) {\n        return prevState;\n      });\n    });\n  };\n\n  RecyclerListView.prototype._initTrackers = function () {\n    this._assertDependencyPresence(this.props);\n\n    if (this.props.onVisibleIndexesChanged) {\n      throw new CustomError_1.default(RecyclerListViewExceptions_1.default.usingOldVisibleIndexesChangedParam);\n    }\n\n    if (this.props.onVisibleIndicesChanged) {\n      this._virtualRenderer.attachVisibleItemsListener(this.props.onVisibleIndicesChanged);\n    }\n\n    this._params = {\n      initialOffset: this._initialOffset ? this._initialOffset : this.props.initialOffset,\n      initialRenderIndex: this.props.initialRenderIndex,\n      isHorizontal: this.props.isHorizontal,\n      itemCount: this.props.dataProvider.getSize(),\n      renderAheadOffset: this.props.renderAheadOffset\n    };\n\n    this._virtualRenderer.setParamsAndDimensions(this._params, this._layout);\n\n    var layoutManager = this.props.layoutProvider.newLayoutManager(this._layout, this.props.isHorizontal, this._cachedLayouts);\n\n    this._virtualRenderer.setLayoutManager(layoutManager);\n\n    this._virtualRenderer.setLayoutProvider(this.props.layoutProvider);\n\n    this._virtualRenderer.init();\n\n    var offset = this._virtualRenderer.getInitialOffset();\n\n    var contentDimension = layoutManager.getContentDimension();\n\n    if (offset.y > 0 && contentDimension.height > this._layout.height || offset.x > 0 && contentDimension.width > this._layout.width) {\n      this._pendingScrollToOffset = offset;\n      this.setState({});\n    } else {\n      this._virtualRenderer.startViewabilityTracker();\n    }\n  };\n\n  RecyclerListView.prototype._assertDependencyPresence = function (props) {\n    if (!props.dataProvider || !props.layoutProvider) {\n      throw new CustomError_1.default(RecyclerListViewExceptions_1.default.unresolvedDependenciesException);\n    }\n  };\n\n  RecyclerListView.prototype._assertType = function (type) {\n    if (!type && type !== 0) {\n      throw new CustomError_1.default(RecyclerListViewExceptions_1.default.itemTypeNullException);\n    }\n  };\n\n  RecyclerListView.prototype._renderRowUsingMeta = function (itemMeta) {\n    var dataSize = this.props.dataProvider.getSize();\n    var dataIndex = itemMeta.dataIndex;\n\n    if (!ts_object_utils_1.ObjectUtil.isNullOrUndefined(dataIndex) && dataIndex < dataSize) {\n      var itemRect = this._virtualRenderer.getLayoutManager().getLayouts()[dataIndex];\n\n      var data = this.props.dataProvider.getDataForIndex(dataIndex);\n      var type = this.props.layoutProvider.getLayoutTypeForIndex(dataIndex);\n\n      var key = this._virtualRenderer.syncAndGetKey(dataIndex);\n\n      var styleOverrides = this._virtualRenderer.getLayoutManager().getStyleOverridesForIndex(dataIndex);\n\n      this._assertType(type);\n\n      if (!this.props.forceNonDeterministicRendering) {\n        this._checkExpectedDimensionDiscrepancy(itemRect, type, dataIndex);\n      }\n\n      return React.createElement(ViewRenderer_1.default, {\n        key: key,\n        data: data,\n        dataHasChanged: this._dataHasChanged,\n        x: itemRect.x,\n        y: itemRect.y,\n        layoutType: type,\n        index: dataIndex,\n        styleOverrides: styleOverrides,\n        layoutProvider: this.props.layoutProvider,\n        forceNonDeterministicRendering: this.props.forceNonDeterministicRendering,\n        isHorizontal: this.props.isHorizontal,\n        onSizeChanged: this._onViewContainerSizeChange,\n        childRenderer: this.props.rowRenderer,\n        height: itemRect.height,\n        width: itemRect.width,\n        itemAnimator: ts_object_utils_1.Default.value(this.props.itemAnimator, this._defaultItemAnimator),\n        extendedState: this.props.extendedState,\n        internalSnapshot: this.state.internalSnapshot\n      });\n    }\n\n    return null;\n  };\n\n  RecyclerListView.prototype._checkExpectedDimensionDiscrepancy = function (itemRect, type, index) {\n    if (this.props.layoutProvider.checkDimensionDiscrepancy(itemRect, type, index)) {\n      if (this._relayoutReqIndex === -1) {\n        this._relayoutReqIndex = index;\n      } else {\n        this._relayoutReqIndex = Math.min(this._relayoutReqIndex, index);\n      }\n    }\n  };\n\n  RecyclerListView.prototype._generateRenderStack = function () {\n    var renderedItems = [];\n\n    for (var key in this.state.renderStack) {\n      if (this.state.renderStack.hasOwnProperty(key)) {\n        renderedItems.push(this._renderRowUsingMeta(this.state.renderStack[key]));\n      }\n    }\n\n    return renderedItems;\n  };\n\n  RecyclerListView.prototype._processOnEndReached = function () {\n    if (this.props.onEndReached && this._virtualRenderer) {\n      var layout = this._virtualRenderer.getLayoutDimension();\n\n      var viewabilityTracker = this._virtualRenderer.getViewabilityTracker();\n\n      if (viewabilityTracker) {\n        var windowBound = this.props.isHorizontal ? layout.width - this._layout.width : layout.height - this._layout.height;\n        var lastOffset = viewabilityTracker ? viewabilityTracker.getLastOffset() : 0;\n\n        if (windowBound - lastOffset <= ts_object_utils_1.Default.value(this.props.onEndReachedThreshold, 0)) {\n          if (this.props.onEndReached && !this._onEndReachedCalled) {\n            this._onEndReachedCalled = true;\n            this.props.onEndReached();\n          }\n        } else {\n          this._onEndReachedCalled = false;\n        }\n      }\n    }\n  };\n\n  RecyclerListView.defaultProps = {\n    canChangeSize: false,\n    disableRecycling: false,\n    initialOffset: 0,\n    initialRenderIndex: 0,\n    isHorizontal: false,\n    onEndReachedThreshold: 0,\n    distanceFromWindow: 0,\n    renderAheadOffset: IS_WEB ? 1000 : 250\n  };\n  RecyclerListView.propTypes = {};\n  return RecyclerListView;\n}(React.Component);\n\nexports.default = RecyclerListView;\nRecyclerListView.propTypes = {\n  //Refer the sample\n  layoutProvider: PropTypes.instanceOf(LayoutProvider_1.BaseLayoutProvider).isRequired,\n  //Refer the sample\n  dataProvider: PropTypes.instanceOf(DataProvider_1.BaseDataProvider).isRequired,\n  //Used to maintain scroll position in case view gets destroyed e.g, cases of back navigation\n  contextProvider: PropTypes.instanceOf(ContextProvider_1.default),\n  //Methods which returns react component to be rendered. You get type of view and data in the callback.\n  rowRenderer: PropTypes.func.isRequired,\n  //Initial offset you want to start rendering from, very useful if you want to maintain scroll context across pages.\n  initialOffset: PropTypes.number,\n  //Specify how many pixels in advance do you want views to be rendered. Increasing this value can help reduce blanks (if any). However keeping this as low\n  //as possible should be the intent. Higher values also increase re-render compute\n  renderAheadOffset: PropTypes.number,\n  //Whether the listview is horizontally scrollable. Both use staggeredGrid implementation\n  isHorizontal: PropTypes.bool,\n  //On scroll callback onScroll(rawEvent, offsetX, offsetY), note you get offsets no need to read scrollTop/scrollLeft\n  onScroll: PropTypes.func,\n  //callback onRecreate(params), when recreating recycler view from context provider. Gives you the initial params in the first\n  //frame itself to allow you to render content accordingly\n  onRecreate: PropTypes.func,\n  //Provide your own ScrollView Component. The contract for the scroll event should match the native scroll event contract, i.e.\n  // scrollEvent = { nativeEvent: { contentOffset: { x: offset, y: offset } } }\n  //Note: Please extend BaseScrollView to achieve expected behaviour\n  externalScrollView: PropTypes.func,\n  //Callback given when user scrolls to the end of the list or footer just becomes visible, useful in incremental loading scenarios\n  onEndReached: PropTypes.func,\n  //Specify how many pixels in advance you onEndReached callback\n  onEndReachedThreshold: PropTypes.number,\n  //Deprecated. Please use onVisibleIndicesChanged instead.\n  onVisibleIndexesChanged: PropTypes.func,\n  //Provides visible index, helpful in sending impression events etc, onVisibleIndicesChanged(all, now, notNow)\n  onVisibleIndicesChanged: PropTypes.func,\n  //Provide this method if you want to render a footer. Helpful in showing a loader while doing incremental loads.\n  renderFooter: PropTypes.func,\n  //Specify the initial item index you want rendering to start from. Preferred over initialOffset if both are specified.\n  initialRenderIndex: PropTypes.number,\n  //iOS only. Scroll throttle duration.\n  scrollThrottle: PropTypes.number,\n  //Specify if size can change, listview will automatically relayout items. For web, works only with useWindowScroll = true\n  canChangeSize: PropTypes.bool,\n  //Specify how far away the first list item is from start of the RecyclerListView. e.g, if you have content padding on top or left.\n  //This is an adjustment for optimization and to make sure onVisibileIndexesChanged callback is correct.\n  //Ideally try to avoid setting large padding values on RLV content. If you have to please correct offsets reported, handle\n  //them in a custom ScrollView and pass it as an externalScrollView. If you want this to be accounted in scrollToOffset please\n  //override the method and handle manually.\n  distanceFromWindow: PropTypes.number,\n  //Web only. Layout elements in window instead of a scrollable div.\n  useWindowScroll: PropTypes.bool,\n  //Turns off recycling. You still get progressive rendering and all other features. Good for lazy rendering. This should not be used in most cases.\n  disableRecycling: PropTypes.bool,\n  //Default is false, if enabled dimensions provided in layout provider will not be strictly enforced.\n  //Rendered dimensions will be used to relayout items. Slower if enabled.\n  forceNonDeterministicRendering: PropTypes.bool,\n  //In some cases the data passed at row level may not contain all the info that the item depends upon, you can keep all other info\n  //outside and pass it down via this prop. Changing this object will cause everything to re-render. Make sure you don't change\n  //it often to ensure performance. Re-renders are heavy.\n  extendedState: PropTypes.object,\n  //Enables animating RecyclerListView item cells e.g, shift, add, remove etc. This prop can be used to pass an external item animation implementation.\n  //Look into BaseItemAnimator/DefaultJSItemAnimator/DefaultNativeItemAnimator/DefaultWebItemAnimator for more info.\n  //By default there are few animations, to disable completely simply pass blank new BaseItemAnimator() object. Remember, create\n  //one object and keep it do not create multiple object of type BaseItemAnimator.\n  //Note: You might want to look into DefaultNativeItemAnimator to check an implementation based on LayoutAnimation. By default,\n  //animations are JS driven to avoid workflow interference. Also, please note LayoutAnimation is buggy on Android.\n  itemAnimator: PropTypes.instanceOf(ItemAnimator_1.BaseItemAnimator),\n  //Enables you to utilize layout animations better by unmounting removed items. Please note, this might increase unmounts\n  //on large data changes.\n  optimizeForInsertDeleteAnimations: PropTypes.bool,\n  //To pass down style to inner ScrollView\n  style: PropTypes.oneOfType([PropTypes.object, PropTypes.number]),\n  //For TS use case, not necessary with JS use.\n  //For all props that need to be proxied to inner/external scrollview. Put them in an object and they'll be spread\n  //and passed down.\n  scrollViewProps: PropTypes.object\n};","map":{"version":3,"sources":["../../../src/core/RecyclerListView.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/***\n * DONE: Reduce layout processing on data insert\n * DONE: Add notify data set changed and notify data insert option in data source\n * DONE: Add on end reached callback\n * DONE: Make another class for render stack generator\n * DONE: Simplify rendering a loading footer\n * DONE: Anchor first visible index on any insert/delete data wise\n * DONE: Build Scroll to index\n * DONE: Give viewability callbacks\n * DONE: Add full render logic in cases like change of dimensions\n * DONE: Fix all proptypes\n * DONE: Add Initial render Index support\n * DONE: Add animated scroll to web scrollviewer\n * DONE: Animate list view transition, including add/remove\n * DONE: Implement sticky headers and footers\n * TODO: Destroy less frequently used items in recycle pool, this will help in case of too many types.\n * TODO: Make viewability callbacks configurable\n * TODO: Observe size changes on web to optimize for reflowability\n * TODO: Solve //TSI\n */\nvar debounce = require(\"lodash.debounce\");\nvar PropTypes = require(\"prop-types\");\nvar React = require(\"react\");\nvar ts_object_utils_1 = require(\"ts-object-utils\");\nvar ContextProvider_1 = require(\"./dependencies/ContextProvider\");\nvar DataProvider_1 = require(\"./dependencies/DataProvider\");\nvar LayoutProvider_1 = require(\"./dependencies/LayoutProvider\");\nvar CustomError_1 = require(\"./exceptions/CustomError\");\nvar RecyclerListViewExceptions_1 = require(\"./exceptions/RecyclerListViewExceptions\");\nvar Constants_1 = require(\"./constants/Constants\");\nvar Messages_1 = require(\"./constants/Messages\");\nvar VirtualRenderer_1 = require(\"./VirtualRenderer\");\nvar ItemAnimator_1 = require(\"./ItemAnimator\");\n//#if [REACT-NATIVE]\nvar ScrollComponent_1 = require(\"../platform/reactnative/scrollcomponent/ScrollComponent\");\nvar ViewRenderer_1 = require(\"../platform/reactnative/viewrenderer/ViewRenderer\");\nvar DefaultJSItemAnimator_1 = require(\"../platform/reactnative/itemanimators/defaultjsanimator/DefaultJSItemAnimator\");\nvar react_native_1 = require(\"react-native\");\nvar IS_WEB = !react_native_1.Platform || react_native_1.Platform.OS === \"web\";\nvar RecyclerListView = /** @class */ (function (_super) {\n    __extends(RecyclerListView, _super);\n    function RecyclerListView(props, context) {\n        var _this = _super.call(this, props, context) || this;\n        _this.refreshRequestDebouncer = debounce(function (executable) {\n            executable();\n        });\n        _this._onEndReachedCalled = false;\n        _this._initComplete = false;\n        _this._relayoutReqIndex = -1;\n        _this._params = {\n            initialOffset: 0,\n            initialRenderIndex: 0,\n            isHorizontal: false,\n            itemCount: 0,\n            renderAheadOffset: 250,\n        };\n        _this._layout = { height: 0, width: 0 };\n        _this._pendingScrollToOffset = null;\n        _this._tempDim = { height: 0, width: 0 };\n        _this._initialOffset = 0;\n        _this._scrollComponent = null;\n        _this._defaultItemAnimator = new DefaultJSItemAnimator_1.DefaultJSItemAnimator();\n        _this.scrollToOffset = function (x, y, animate) {\n            if (animate === void 0) { animate = false; }\n            if (_this._scrollComponent) {\n                if (_this.props.isHorizontal) {\n                    y = 0;\n                }\n                else {\n                    x = 0;\n                }\n                _this._scrollComponent.scrollTo(x, y, animate);\n            }\n        };\n        _this._onSizeChanged = function (layout) {\n            var hasHeightChanged = _this._layout.height !== layout.height;\n            var hasWidthChanged = _this._layout.width !== layout.width;\n            _this._layout.height = layout.height;\n            _this._layout.width = layout.width;\n            if (layout.height === 0 || layout.width === 0) {\n                throw new CustomError_1.default(RecyclerListViewExceptions_1.default.layoutException);\n            }\n            if (!_this._initComplete) {\n                _this._initComplete = true;\n                _this._initTrackers();\n                _this._processOnEndReached();\n            }\n            else {\n                if ((hasHeightChanged && hasWidthChanged) ||\n                    (hasHeightChanged && _this.props.isHorizontal) ||\n                    (hasWidthChanged && !_this.props.isHorizontal)) {\n                    _this._checkAndChangeLayouts(_this.props, true);\n                }\n                else {\n                    _this._refreshViewability();\n                }\n            }\n        };\n        _this._renderStackWhenReady = function (stack) {\n            _this.setState(function () {\n                return { renderStack: stack };\n            });\n        };\n        _this._dataHasChanged = function (row1, row2) {\n            return _this.props.dataProvider.rowHasChanged(row1, row2);\n        };\n        _this._onViewContainerSizeChange = function (dim, index) {\n            //Cannot be null here\n            var layoutManager = _this._virtualRenderer.getLayoutManager();\n            if (_this.props.debugHandlers && _this.props.debugHandlers.resizeDebugHandler) {\n                var itemRect = layoutManager.getLayouts()[index];\n                _this.props.debugHandlers.resizeDebugHandler.resizeDebug({\n                    width: itemRect.width,\n                    height: itemRect.height,\n                }, dim, index);\n            }\n            if (layoutManager.overrideLayout(index, dim)) {\n                if (_this._relayoutReqIndex === -1) {\n                    _this._relayoutReqIndex = index;\n                }\n                else {\n                    _this._relayoutReqIndex = Math.min(_this._relayoutReqIndex, index);\n                }\n                _this._queueStateRefresh();\n            }\n        };\n        _this._onScroll = function (offsetX, offsetY, rawEvent) {\n            //Adjusting offsets using distanceFromWindow\n            _this._virtualRenderer.updateOffset(offsetX, offsetY, -_this.props.distanceFromWindow, true);\n            if (_this.props.onScroll) {\n                _this.props.onScroll(rawEvent, offsetX, offsetY);\n            }\n            _this._processOnEndReached();\n        };\n        _this._virtualRenderer = new VirtualRenderer_1.default(_this._renderStackWhenReady, function (offset) {\n            _this._pendingScrollToOffset = offset;\n        }, function (index) {\n            return _this.props.dataProvider.getStableId(index);\n        }, !props.disableRecycling);\n        _this.state = {\n            internalSnapshot: {},\n            renderStack: {},\n        };\n        return _this;\n    }\n    RecyclerListView.prototype.componentWillReceiveProps = function (newProps) {\n        this._assertDependencyPresence(newProps);\n        this._checkAndChangeLayouts(newProps);\n        if (!this.props.onVisibleIndicesChanged) {\n            this._virtualRenderer.removeVisibleItemsListener();\n        }\n        if (this.props.onVisibleIndexesChanged) {\n            throw new CustomError_1.default(RecyclerListViewExceptions_1.default.usingOldVisibleIndexesChangedParam);\n        }\n        if (this.props.onVisibleIndicesChanged) {\n            this._virtualRenderer.attachVisibleItemsListener(this.props.onVisibleIndicesChanged);\n        }\n    };\n    RecyclerListView.prototype.componentDidUpdate = function () {\n        var _this = this;\n        if (this._pendingScrollToOffset) {\n            var offset_1 = this._pendingScrollToOffset;\n            this._pendingScrollToOffset = null;\n            if (this.props.isHorizontal) {\n                offset_1.y = 0;\n            }\n            else {\n                offset_1.x = 0;\n            }\n            setTimeout(function () {\n                _this.scrollToOffset(offset_1.x, offset_1.y, false);\n            }, 0);\n        }\n        this._processOnEndReached();\n        this._checkAndChangeLayouts(this.props);\n        if (this.props.dataProvider.getSize() === 0) {\n            console.warn(Messages_1.Messages.WARN_NO_DATA); //tslint:disable-line\n        }\n    };\n    RecyclerListView.prototype.componentWillUnmount = function () {\n        if (this.props.contextProvider) {\n            var uniqueKey = this.props.contextProvider.getUniqueKey();\n            if (uniqueKey) {\n                this.props.contextProvider.save(uniqueKey + Constants_1.Constants.CONTEXT_PROVIDER_OFFSET_KEY_SUFFIX, this.getCurrentScrollOffset());\n                if (this.props.forceNonDeterministicRendering) {\n                    if (this._virtualRenderer) {\n                        var layoutManager = this._virtualRenderer.getLayoutManager();\n                        if (layoutManager) {\n                            var layoutsToCache = layoutManager.getLayouts();\n                            this.props.contextProvider.save(uniqueKey + Constants_1.Constants.CONTEXT_PROVIDER_LAYOUT_KEY_SUFFIX, JSON.stringify({ layoutArray: layoutsToCache }));\n                        }\n                    }\n                }\n            }\n        }\n    };\n    RecyclerListView.prototype.componentWillMount = function () {\n        if (this.props.contextProvider) {\n            var uniqueKey = this.props.contextProvider.getUniqueKey();\n            if (uniqueKey) {\n                var offset = this.props.contextProvider.get(uniqueKey + Constants_1.Constants.CONTEXT_PROVIDER_OFFSET_KEY_SUFFIX);\n                if (typeof offset === \"number\" && offset > 0) {\n                    this._initialOffset = offset;\n                    if (this.props.onRecreate) {\n                        this.props.onRecreate({ lastOffset: this._initialOffset });\n                    }\n                    this.props.contextProvider.remove(uniqueKey + Constants_1.Constants.CONTEXT_PROVIDER_OFFSET_KEY_SUFFIX);\n                }\n                if (this.props.forceNonDeterministicRendering) {\n                    var cachedLayouts = this.props.contextProvider.get(uniqueKey + Constants_1.Constants.CONTEXT_PROVIDER_LAYOUT_KEY_SUFFIX);\n                    if (cachedLayouts && typeof cachedLayouts === \"string\") {\n                        this._cachedLayouts = JSON.parse(cachedLayouts).layoutArray;\n                        this.props.contextProvider.remove(uniqueKey + Constants_1.Constants.CONTEXT_PROVIDER_LAYOUT_KEY_SUFFIX);\n                    }\n                }\n            }\n        }\n    };\n    RecyclerListView.prototype.scrollToIndex = function (index, animate) {\n        var layoutManager = this._virtualRenderer.getLayoutManager();\n        if (layoutManager) {\n            var offsets = layoutManager.getOffsetForIndex(index);\n            this.scrollToOffset(offsets.x, offsets.y, animate);\n        }\n        else {\n            console.warn(Messages_1.Messages.WARN_SCROLL_TO_INDEX); //tslint:disable-line\n        }\n    };\n    RecyclerListView.prototype.scrollToItem = function (data, animate) {\n        var count = this.props.dataProvider.getSize();\n        for (var i = 0; i < count; i++) {\n            if (this.props.dataProvider.getDataForIndex(i) === data) {\n                this.scrollToIndex(i, animate);\n                break;\n            }\n        }\n    };\n    RecyclerListView.prototype.getLayout = function (index) {\n        var layoutManager = this._virtualRenderer.getLayoutManager();\n        return layoutManager ? layoutManager.getLayouts()[index] : undefined;\n    };\n    RecyclerListView.prototype.scrollToTop = function (animate) {\n        this.scrollToOffset(0, 0, animate);\n    };\n    RecyclerListView.prototype.scrollToEnd = function (animate) {\n        var lastIndex = this.props.dataProvider.getSize() - 1;\n        this.scrollToIndex(lastIndex, animate);\n    };\n    // You can use requestAnimationFrame callback to change renderAhead in multiple frames to enable advanced progressive\n    // rendering when view types are very complex. This method returns a boolean saying if the update was committed. Retry in\n    // the next frame if you get a failure (if mount wasn't complete). Value should be greater than or equal to 0;\n    // Very useful when you have a page where you need a large renderAheadOffset. Setting it at once will slow down the load and\n    // this will help mitigate that.\n    RecyclerListView.prototype.updateRenderAheadOffset = function (renderAheadOffset) {\n        var viewabilityTracker = this._virtualRenderer.getViewabilityTracker();\n        if (viewabilityTracker) {\n            viewabilityTracker.updateRenderAheadOffset(renderAheadOffset);\n            return true;\n        }\n        return false;\n    };\n    RecyclerListView.prototype.getCurrentRenderAheadOffset = function () {\n        var viewabilityTracker = this._virtualRenderer.getViewabilityTracker();\n        if (viewabilityTracker) {\n            return viewabilityTracker.getCurrentRenderAheadOffset();\n        }\n        return this.props.renderAheadOffset;\n    };\n    RecyclerListView.prototype.getCurrentScrollOffset = function () {\n        var viewabilityTracker = this._virtualRenderer.getViewabilityTracker();\n        return viewabilityTracker ? viewabilityTracker.getLastActualOffset() : 0;\n    };\n    RecyclerListView.prototype.findApproxFirstVisibleIndex = function () {\n        var viewabilityTracker = this._virtualRenderer.getViewabilityTracker();\n        return viewabilityTracker ? viewabilityTracker.findFirstLogicallyVisibleIndex() : 0;\n    };\n    RecyclerListView.prototype.getRenderedSize = function () {\n        return this._layout;\n    };\n    RecyclerListView.prototype.getContentDimension = function () {\n        return this._virtualRenderer.getLayoutDimension();\n    };\n    // Force Rerender forcefully to update view renderer. Use this in rare circumstances\n    RecyclerListView.prototype.forceRerender = function () {\n        this.setState({\n            internalSnapshot: {},\n        });\n    };\n    RecyclerListView.prototype.render = function () {\n        //TODO:Talha\n        // const {\n        //     layoutProvider,\n        //     dataProvider,\n        //     contextProvider,\n        //     renderAheadOffset,\n        //     onEndReached,\n        //     onEndReachedThreshold,\n        //     onVisibleIndicesChanged,\n        //     initialOffset,\n        //     initialRenderIndex,\n        //     disableRecycling,\n        //     forceNonDeterministicRendering,\n        //     extendedState,\n        //     itemAnimator,\n        //     rowRenderer,\n        //     ...props,\n        // } = this.props;\n        var _this = this;\n        return (React.createElement(ScrollComponent_1.default, __assign({ ref: function (scrollComponent) { return _this._scrollComponent = scrollComponent; } }, this.props, this.props.scrollViewProps, { onScroll: this._onScroll, onSizeChanged: this._onSizeChanged, contentHeight: this._initComplete ? this._virtualRenderer.getLayoutDimension().height : 0, contentWidth: this._initComplete ? this._virtualRenderer.getLayoutDimension().width : 0 }), this._generateRenderStack()));\n    };\n    RecyclerListView.prototype.getVirtualRenderer = function () {\n        return this._virtualRenderer;\n    };\n    RecyclerListView.prototype._checkAndChangeLayouts = function (newProps, forceFullRender) {\n        this._params.isHorizontal = newProps.isHorizontal;\n        this._params.itemCount = newProps.dataProvider.getSize();\n        this._virtualRenderer.setParamsAndDimensions(this._params, this._layout);\n        this._virtualRenderer.setLayoutProvider(newProps.layoutProvider);\n        if (newProps.dataProvider.hasStableIds() && this.props.dataProvider !== newProps.dataProvider && newProps.dataProvider.requiresDataChangeHandling()) {\n            this._virtualRenderer.handleDataSetChange(newProps.dataProvider, this.props.optimizeForInsertDeleteAnimations);\n        }\n        if (forceFullRender || this.props.layoutProvider !== newProps.layoutProvider || this.props.isHorizontal !== newProps.isHorizontal) {\n            //TODO:Talha use old layout manager\n            this._virtualRenderer.setLayoutManager(newProps.layoutProvider.newLayoutManager(this._layout, newProps.isHorizontal));\n            if (newProps.layoutProvider.shouldRefreshWithAnchoring) {\n                this._virtualRenderer.refreshWithAnchor();\n            }\n            else {\n                this._virtualRenderer.refresh();\n            }\n            this._refreshViewability();\n        }\n        else if (this.props.dataProvider !== newProps.dataProvider) {\n            if (newProps.dataProvider.getSize() > this.props.dataProvider.getSize()) {\n                this._onEndReachedCalled = false;\n            }\n            var layoutManager = this._virtualRenderer.getLayoutManager();\n            if (layoutManager) {\n                layoutManager.relayoutFromIndex(newProps.dataProvider.getFirstIndexToProcessInternal(), newProps.dataProvider.getSize());\n                this._virtualRenderer.refresh();\n            }\n        }\n        else if (this._relayoutReqIndex >= 0) {\n            var layoutManager = this._virtualRenderer.getLayoutManager();\n            if (layoutManager) {\n                var dataProviderSize = newProps.dataProvider.getSize();\n                layoutManager.relayoutFromIndex(Math.min(Math.max(dataProviderSize - 1, 0), this._relayoutReqIndex), dataProviderSize);\n                this._relayoutReqIndex = -1;\n                this._refreshViewability();\n            }\n        }\n    };\n    RecyclerListView.prototype._refreshViewability = function () {\n        this._virtualRenderer.refresh();\n        this._queueStateRefresh();\n    };\n    RecyclerListView.prototype._queueStateRefresh = function () {\n        var _this = this;\n        this.refreshRequestDebouncer(function () {\n            _this.setState(function (prevState) {\n                return prevState;\n            });\n        });\n    };\n    RecyclerListView.prototype._initTrackers = function () {\n        this._assertDependencyPresence(this.props);\n        if (this.props.onVisibleIndexesChanged) {\n            throw new CustomError_1.default(RecyclerListViewExceptions_1.default.usingOldVisibleIndexesChangedParam);\n        }\n        if (this.props.onVisibleIndicesChanged) {\n            this._virtualRenderer.attachVisibleItemsListener(this.props.onVisibleIndicesChanged);\n        }\n        this._params = {\n            initialOffset: this._initialOffset ? this._initialOffset : this.props.initialOffset,\n            initialRenderIndex: this.props.initialRenderIndex,\n            isHorizontal: this.props.isHorizontal,\n            itemCount: this.props.dataProvider.getSize(),\n            renderAheadOffset: this.props.renderAheadOffset,\n        };\n        this._virtualRenderer.setParamsAndDimensions(this._params, this._layout);\n        var layoutManager = this.props.layoutProvider.newLayoutManager(this._layout, this.props.isHorizontal, this._cachedLayouts);\n        this._virtualRenderer.setLayoutManager(layoutManager);\n        this._virtualRenderer.setLayoutProvider(this.props.layoutProvider);\n        this._virtualRenderer.init();\n        var offset = this._virtualRenderer.getInitialOffset();\n        var contentDimension = layoutManager.getContentDimension();\n        if ((offset.y > 0 && contentDimension.height > this._layout.height) ||\n            (offset.x > 0 && contentDimension.width > this._layout.width)) {\n            this._pendingScrollToOffset = offset;\n            this.setState({});\n        }\n        else {\n            this._virtualRenderer.startViewabilityTracker();\n        }\n    };\n    RecyclerListView.prototype._assertDependencyPresence = function (props) {\n        if (!props.dataProvider || !props.layoutProvider) {\n            throw new CustomError_1.default(RecyclerListViewExceptions_1.default.unresolvedDependenciesException);\n        }\n    };\n    RecyclerListView.prototype._assertType = function (type) {\n        if (!type && type !== 0) {\n            throw new CustomError_1.default(RecyclerListViewExceptions_1.default.itemTypeNullException);\n        }\n    };\n    RecyclerListView.prototype._renderRowUsingMeta = function (itemMeta) {\n        var dataSize = this.props.dataProvider.getSize();\n        var dataIndex = itemMeta.dataIndex;\n        if (!ts_object_utils_1.ObjectUtil.isNullOrUndefined(dataIndex) && dataIndex < dataSize) {\n            var itemRect = this._virtualRenderer.getLayoutManager().getLayouts()[dataIndex];\n            var data = this.props.dataProvider.getDataForIndex(dataIndex);\n            var type = this.props.layoutProvider.getLayoutTypeForIndex(dataIndex);\n            var key = this._virtualRenderer.syncAndGetKey(dataIndex);\n            var styleOverrides = this._virtualRenderer.getLayoutManager().getStyleOverridesForIndex(dataIndex);\n            this._assertType(type);\n            if (!this.props.forceNonDeterministicRendering) {\n                this._checkExpectedDimensionDiscrepancy(itemRect, type, dataIndex);\n            }\n            return (React.createElement(ViewRenderer_1.default, { key: key, data: data, dataHasChanged: this._dataHasChanged, x: itemRect.x, y: itemRect.y, layoutType: type, index: dataIndex, styleOverrides: styleOverrides, layoutProvider: this.props.layoutProvider, forceNonDeterministicRendering: this.props.forceNonDeterministicRendering, isHorizontal: this.props.isHorizontal, onSizeChanged: this._onViewContainerSizeChange, childRenderer: this.props.rowRenderer, height: itemRect.height, width: itemRect.width, itemAnimator: ts_object_utils_1.Default.value(this.props.itemAnimator, this._defaultItemAnimator), extendedState: this.props.extendedState, internalSnapshot: this.state.internalSnapshot }));\n        }\n        return null;\n    };\n    RecyclerListView.prototype._checkExpectedDimensionDiscrepancy = function (itemRect, type, index) {\n        if (this.props.layoutProvider.checkDimensionDiscrepancy(itemRect, type, index)) {\n            if (this._relayoutReqIndex === -1) {\n                this._relayoutReqIndex = index;\n            }\n            else {\n                this._relayoutReqIndex = Math.min(this._relayoutReqIndex, index);\n            }\n        }\n    };\n    RecyclerListView.prototype._generateRenderStack = function () {\n        var renderedItems = [];\n        for (var key in this.state.renderStack) {\n            if (this.state.renderStack.hasOwnProperty(key)) {\n                renderedItems.push(this._renderRowUsingMeta(this.state.renderStack[key]));\n            }\n        }\n        return renderedItems;\n    };\n    RecyclerListView.prototype._processOnEndReached = function () {\n        if (this.props.onEndReached && this._virtualRenderer) {\n            var layout = this._virtualRenderer.getLayoutDimension();\n            var viewabilityTracker = this._virtualRenderer.getViewabilityTracker();\n            if (viewabilityTracker) {\n                var windowBound = this.props.isHorizontal ? layout.width - this._layout.width : layout.height - this._layout.height;\n                var lastOffset = viewabilityTracker ? viewabilityTracker.getLastOffset() : 0;\n                if (windowBound - lastOffset <= ts_object_utils_1.Default.value(this.props.onEndReachedThreshold, 0)) {\n                    if (this.props.onEndReached && !this._onEndReachedCalled) {\n                        this._onEndReachedCalled = true;\n                        this.props.onEndReached();\n                    }\n                }\n                else {\n                    this._onEndReachedCalled = false;\n                }\n            }\n        }\n    };\n    RecyclerListView.defaultProps = {\n        canChangeSize: false,\n        disableRecycling: false,\n        initialOffset: 0,\n        initialRenderIndex: 0,\n        isHorizontal: false,\n        onEndReachedThreshold: 0,\n        distanceFromWindow: 0,\n        renderAheadOffset: IS_WEB ? 1000 : 250,\n    };\n    RecyclerListView.propTypes = {};\n    return RecyclerListView;\n}(React.Component));\nexports.default = RecyclerListView;\nRecyclerListView.propTypes = {\n    //Refer the sample\n    layoutProvider: PropTypes.instanceOf(LayoutProvider_1.BaseLayoutProvider).isRequired,\n    //Refer the sample\n    dataProvider: PropTypes.instanceOf(DataProvider_1.BaseDataProvider).isRequired,\n    //Used to maintain scroll position in case view gets destroyed e.g, cases of back navigation\n    contextProvider: PropTypes.instanceOf(ContextProvider_1.default),\n    //Methods which returns react component to be rendered. You get type of view and data in the callback.\n    rowRenderer: PropTypes.func.isRequired,\n    //Initial offset you want to start rendering from, very useful if you want to maintain scroll context across pages.\n    initialOffset: PropTypes.number,\n    //Specify how many pixels in advance do you want views to be rendered. Increasing this value can help reduce blanks (if any). However keeping this as low\n    //as possible should be the intent. Higher values also increase re-render compute\n    renderAheadOffset: PropTypes.number,\n    //Whether the listview is horizontally scrollable. Both use staggeredGrid implementation\n    isHorizontal: PropTypes.bool,\n    //On scroll callback onScroll(rawEvent, offsetX, offsetY), note you get offsets no need to read scrollTop/scrollLeft\n    onScroll: PropTypes.func,\n    //callback onRecreate(params), when recreating recycler view from context provider. Gives you the initial params in the first\n    //frame itself to allow you to render content accordingly\n    onRecreate: PropTypes.func,\n    //Provide your own ScrollView Component. The contract for the scroll event should match the native scroll event contract, i.e.\n    // scrollEvent = { nativeEvent: { contentOffset: { x: offset, y: offset } } }\n    //Note: Please extend BaseScrollView to achieve expected behaviour\n    externalScrollView: PropTypes.func,\n    //Callback given when user scrolls to the end of the list or footer just becomes visible, useful in incremental loading scenarios\n    onEndReached: PropTypes.func,\n    //Specify how many pixels in advance you onEndReached callback\n    onEndReachedThreshold: PropTypes.number,\n    //Deprecated. Please use onVisibleIndicesChanged instead.\n    onVisibleIndexesChanged: PropTypes.func,\n    //Provides visible index, helpful in sending impression events etc, onVisibleIndicesChanged(all, now, notNow)\n    onVisibleIndicesChanged: PropTypes.func,\n    //Provide this method if you want to render a footer. Helpful in showing a loader while doing incremental loads.\n    renderFooter: PropTypes.func,\n    //Specify the initial item index you want rendering to start from. Preferred over initialOffset if both are specified.\n    initialRenderIndex: PropTypes.number,\n    //iOS only. Scroll throttle duration.\n    scrollThrottle: PropTypes.number,\n    //Specify if size can change, listview will automatically relayout items. For web, works only with useWindowScroll = true\n    canChangeSize: PropTypes.bool,\n    //Specify how far away the first list item is from start of the RecyclerListView. e.g, if you have content padding on top or left.\n    //This is an adjustment for optimization and to make sure onVisibileIndexesChanged callback is correct.\n    //Ideally try to avoid setting large padding values on RLV content. If you have to please correct offsets reported, handle\n    //them in a custom ScrollView and pass it as an externalScrollView. If you want this to be accounted in scrollToOffset please\n    //override the method and handle manually.\n    distanceFromWindow: PropTypes.number,\n    //Web only. Layout elements in window instead of a scrollable div.\n    useWindowScroll: PropTypes.bool,\n    //Turns off recycling. You still get progressive rendering and all other features. Good for lazy rendering. This should not be used in most cases.\n    disableRecycling: PropTypes.bool,\n    //Default is false, if enabled dimensions provided in layout provider will not be strictly enforced.\n    //Rendered dimensions will be used to relayout items. Slower if enabled.\n    forceNonDeterministicRendering: PropTypes.bool,\n    //In some cases the data passed at row level may not contain all the info that the item depends upon, you can keep all other info\n    //outside and pass it down via this prop. Changing this object will cause everything to re-render. Make sure you don't change\n    //it often to ensure performance. Re-renders are heavy.\n    extendedState: PropTypes.object,\n    //Enables animating RecyclerListView item cells e.g, shift, add, remove etc. This prop can be used to pass an external item animation implementation.\n    //Look into BaseItemAnimator/DefaultJSItemAnimator/DefaultNativeItemAnimator/DefaultWebItemAnimator for more info.\n    //By default there are few animations, to disable completely simply pass blank new BaseItemAnimator() object. Remember, create\n    //one object and keep it do not create multiple object of type BaseItemAnimator.\n    //Note: You might want to look into DefaultNativeItemAnimator to check an implementation based on LayoutAnimation. By default,\n    //animations are JS driven to avoid workflow interference. Also, please note LayoutAnimation is buggy on Android.\n    itemAnimator: PropTypes.instanceOf(ItemAnimator_1.BaseItemAnimator),\n    //Enables you to utilize layout animations better by unmounting removed items. Please note, this might increase unmounts\n    //on large data changes.\n    optimizeForInsertDeleteAnimations: PropTypes.bool,\n    //To pass down style to inner ScrollView\n    style: PropTypes.oneOfType([\n        PropTypes.object,\n        PropTypes.number,\n    ]),\n    //For TS use case, not necessary with JS use.\n    //For all props that need to be proxied to inner/external scrollview. Put them in an object and they'll be spread\n    //and passed down.\n    scrollViewProps: PropTypes.object,\n};\n//# sourceMappingURL=RecyclerListView.js.map"]},"metadata":{},"sourceType":"script"}