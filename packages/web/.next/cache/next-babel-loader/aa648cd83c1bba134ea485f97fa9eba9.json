{"ast":null,"code":"\"use strict\";\n\nvar _Promise = require(\"@babel/runtime-corejs2/core-js/promise\");\n\nexports.__esModule = true;\nexports.default = void 0;\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\nfunction emptyFunction() {}\n\nvar AccessibilityInfo = {\n  /**\n   * Query whether a screen reader is currently enabled.\n   *\n   * Returns a promise which resolves to a boolean.\n   * The result is `true` when a screen reader is enabled and `false` otherwise.\n   */\n  fetch: function fetch() {\n    return new _Promise(function (resolve, reject) {\n      resolve(true);\n    });\n  },\n\n  /**\n   * Add an event handler. Supported events:\n   */\n  addEventListener: function addEventListener(eventName, handler) {\n    return {\n      remove: emptyFunction\n    };\n  },\n\n  /**\n   * Set accessibility focus to a react component.\n   */\n  setAccessibilityFocus: function setAccessibilityFocus(reactTag) {},\n\n  /**\n   * Post a string to be announced by the screen reader.\n   */\n  announceForAccessibility: function announceForAccessibility(announcement) {},\n\n  /**\n   * Remove an event handler.\n   */\n  removeEventListener: function removeEventListener(eventName, handler) {\n    return;\n  }\n};\nvar _default = AccessibilityInfo;\nexports.default = _default;\nmodule.exports = exports.default;","map":{"version":3,"sources":["/Users/utkarsh/Desktop/headout/ReactNativeOne/node_modules/react-native-web/dist/cjs/exports/AccessibilityInfo/index.js"],"names":["exports","__esModule","default","emptyFunction","AccessibilityInfo","fetch","resolve","reject","addEventListener","eventName","handler","remove","setAccessibilityFocus","reactTag","announceForAccessibility","announcement","removeEventListener","_default","module"],"mappings":"AAAA;;;;AAEAA,OAAO,CAACC,UAAR,GAAqB,IAArB;AACAD,OAAO,CAACE,OAAR,GAAkB,KAAK,CAAvB;AAEA;;;;;;;;;AAQA,SAASC,aAAT,GAAyB,CAAE;;AAE3B,IAAIC,iBAAiB,GAAG;AACtB;;;;;;AAMAC,EAAAA,KAAK,EAAE,SAASA,KAAT,GAAiB;AACtB,WAAO,aAAY,UAAUC,OAAV,EAAmBC,MAAnB,EAA2B;AAC5CD,MAAAA,OAAO,CAAC,IAAD,CAAP;AACD,KAFM,CAAP;AAGD,GAXqB;;AAatB;;;AAGAE,EAAAA,gBAAgB,EAAE,SAASA,gBAAT,CAA0BC,SAA1B,EAAqCC,OAArC,EAA8C;AAC9D,WAAO;AACLC,MAAAA,MAAM,EAAER;AADH,KAAP;AAGD,GApBqB;;AAsBtB;;;AAGAS,EAAAA,qBAAqB,EAAE,SAASA,qBAAT,CAA+BC,QAA/B,EAAyC,CAAE,CAzB5C;;AA2BtB;;;AAGAC,EAAAA,wBAAwB,EAAE,SAASA,wBAAT,CAAkCC,YAAlC,EAAgD,CAAE,CA9BtD;;AAgCtB;;;AAGAC,EAAAA,mBAAmB,EAAE,SAASA,mBAAT,CAA6BP,SAA7B,EAAwCC,OAAxC,EAAiD;AACpE;AACD;AArCqB,CAAxB;AAuCA,IAAIO,QAAQ,GAAGb,iBAAf;AACAJ,OAAO,CAACE,OAAR,GAAkBe,QAAlB;AACAC,MAAM,CAAClB,OAAP,GAAiBA,OAAO,CAACE,OAAzB","sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nfunction emptyFunction() {}\n\nvar AccessibilityInfo = {\n  /**\n   * Query whether a screen reader is currently enabled.\n   *\n   * Returns a promise which resolves to a boolean.\n   * The result is `true` when a screen reader is enabled and `false` otherwise.\n   */\n  fetch: function fetch() {\n    return new Promise(function (resolve, reject) {\n      resolve(true);\n    });\n  },\n\n  /**\n   * Add an event handler. Supported events:\n   */\n  addEventListener: function addEventListener(eventName, handler) {\n    return {\n      remove: emptyFunction\n    };\n  },\n\n  /**\n   * Set accessibility focus to a react component.\n   */\n  setAccessibilityFocus: function setAccessibilityFocus(reactTag) {},\n\n  /**\n   * Post a string to be announced by the screen reader.\n   */\n  announceForAccessibility: function announceForAccessibility(announcement) {},\n\n  /**\n   * Remove an event handler.\n   */\n  removeEventListener: function removeEventListener(eventName, handler) {\n    return;\n  }\n};\nvar _default = AccessibilityInfo;\nexports.default = _default;\nmodule.exports = exports.default;"]},"metadata":{},"sourceType":"script"}